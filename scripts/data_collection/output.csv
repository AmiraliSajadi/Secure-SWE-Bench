First Hash,Second Hash,Commit Message,Contains Issue Reference
505826b469b16ab36693360da9e11fd13213421b,eb94e7ad6bab5da085890ec4238b7d58f48c3cf7,"[3.0.x] Added stub release notes for 3.0.3.

Backport of 69331bb851c34f05bc77e9fc24020fe6908b9cd5 from master",False
505826b469b16ab36693360da9e11fd13213421b,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
505826b469b16ab36693360da9e11fd13213421b,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
505826b469b16ab36693360da9e11fd13213421b,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
505826b469b16ab36693360da9e11fd13213421b,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
505826b469b16ab36693360da9e11fd13213421b,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
505826b469b16ab36693360da9e11fd13213421b,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
505826b469b16ab36693360da9e11fd13213421b,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
505826b469b16ab36693360da9e11fd13213421b,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
505826b469b16ab36693360da9e11fd13213421b,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
505826b469b16ab36693360da9e11fd13213421b,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
505826b469b16ab36693360da9e11fd13213421b,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
505826b469b16ab36693360da9e11fd13213421b,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,eb94e7ad6bab5da085890ec4238b7d58f48c3cf7,"[3.0.x] Added stub release notes for 3.0.3.

Backport of 69331bb851c34f05bc77e9fc24020fe6908b9cd5 from master",False
505826b469b16ab36693360da9e11fd13213421b,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
505826b469b16ab36693360da9e11fd13213421b,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
505826b469b16ab36693360da9e11fd13213421b,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,a64a61bf4a21f942828add0b7964f18cf777a5bb,"Fixed #8422: FilePathField now respects required=False.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10447 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,d82aaef8446c4188a27ba4347b75f0dffaa42f0a,"Fixed #7064: Made DemicmalField validation support max_digits equal to decimal_places.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9387 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,88a2f53b858fedf46ceb84a9fe09558b31038eb7,"Split django.newforms into forms, fields, widgets, util. Also moved unit tests from docstrings to a standalone module in tests/regressiontests/forms, to save docstring memory overhead, keep code readable and fit our exisitng convention

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3945 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,14b160957e2965669e241f4640dd42a0fc412ec4,"Fixed #8962 -- Consistently support format and input_format in the various (individual, combined, split) date and time form fields and widgets.

Many thanks to Tai Lee for doing all the work here.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10115 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,a2ce7669d902cf32eeac9307b804b78ed4150fe5,"Fixed #3421 -- Added IP and localhost validation to newforms URLField. Thanks, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6152 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,a64a61bf4a21f942828add0b7964f18cf777a5bb,"Fixed #8422: FilePathField now respects required=False.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10447 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,d82aaef8446c4188a27ba4347b75f0dffaa42f0a,"Fixed #7064: Made DemicmalField validation support max_digits equal to decimal_places.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9387 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,88a2f53b858fedf46ceb84a9fe09558b31038eb7,"Split django.newforms into forms, fields, widgets, util. Also moved unit tests from docstrings to a standalone module in tests/regressiontests/forms, to save docstring memory overhead, keep code readable and fit our exisitng convention

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3945 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,14b160957e2965669e241f4640dd42a0fc412ec4,"Fixed #8962 -- Consistently support format and input_format in the various (individual, combined, split) date and time form fields and widgets.

Many thanks to Tai Lee for doing all the work here.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10115 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,a2ce7669d902cf32eeac9307b804b78ed4150fe5,"Fixed #3421 -- Added IP and localhost validation to newforms URLField. Thanks, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6152 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,6590061a005b8772baee1a94d7799bcb58d9841d,"Fixed #9948 -- Corrected URLField validation to match RFC1035 (URL analog of #9890). Thanks to kratorius for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10574 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,48b459a83e40aa6dae588f114d68f54b95e860de,"Fixed #9890 -- Modified the regex validation for email addresses to match RFC822/1035. Thanks to ozgur for the report, and kratorius for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10573 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,6590061a005b8772baee1a94d7799bcb58d9841d,"Fixed #9948 -- Corrected URLField validation to match RFC1035 (URL analog of #9890). Thanks to kratorius for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10574 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e3e992e18b368fcd56aabafc1b5bf80a6e11b495,48b459a83e40aa6dae588f114d68f54b95e860de,"Fixed #9890 -- Modified the regex validation for email addresses to match RFC822/1035. Thanks to ozgur for the report, and kratorius for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10573 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,36db4dd937ae11c5b687c5d2e5fa3c27e4140001,Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,b915b9f10f1110bf6b8468060ce9753ff78ffb07,"Refs #27753 -- Deprecated django.utils.text.unescape_entities().

The function was undocumented and only required for compatibility with
Python 2.

Code should use Python's html.unescape() that was added in Python 3.4.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,36db4dd937ae11c5b687c5d2e5fa3c27e4140001,Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,b915b9f10f1110bf6b8468060ce9753ff78ffb07,"Refs #27753 -- Deprecated django.utils.text.unescape_entities().

The function was undocumented and only required for compatibility with
Python 2.

Code should use Python's html.unescape() that was added in Python 3.4.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2820fd1be5dfccbf1216c3845fad8580502473e1,"[3.2.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,36db4dd937ae11c5b687c5d2e5fa3c27e4140001,Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2e8ff5f902c04fb9fefe3da783513899f0753176,"[3.2.x] Added stub release notes for Django 3.2.1.

Backport of df0a9e6d5ce00fc7890545d854dbea876bd07d9b from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2e8ff5f902c04fb9fefe3da783513899f0753176,"[3.2.x] Added stub release notes for Django 3.2.1.

Backport of df0a9e6d5ce00fc7890545d854dbea876bd07d9b from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,55da04488e0998df15d911528445a077e6fb4e0f,"[3.2.x] Corrected release number format in 3.2.1 release notes.

Backport of 3f2920ae1d91e67ebf677d407da528c04188384e from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2e8ff5f902c04fb9fefe3da783513899f0753176,"[3.2.x] Added stub release notes for Django 3.2.1.

Backport of df0a9e6d5ce00fc7890545d854dbea876bd07d9b from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2820fd1be5dfccbf1216c3845fad8580502473e1,"[3.2.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,36db4dd937ae11c5b687c5d2e5fa3c27e4140001,Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,55da04488e0998df15d911528445a077e6fb4e0f,"[3.2.x] Corrected release number format in 3.2.1 release notes.

Backport of 3f2920ae1d91e67ebf677d407da528c04188384e from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,2e8ff5f902c04fb9fefe3da783513899f0753176,"[3.2.x] Added stub release notes for Django 3.2.1.

Backport of df0a9e6d5ce00fc7890545d854dbea876bd07d9b from main",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c98f446c188596d4ba6de71d1b77b4a6c5c2a007,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,44aef996c8d723198e89ca834cb1d746e2e72d77,"[5.1.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e0ba8af1b4e2a3a2ddc401d4abd1fd75a61079ce,"[5.1.x] Added stub release notes and release date for 5.1.1, 5.0.9, and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e0ba8af1b4e2a3a2ddc401d4abd1fd75a61079ce,"[5.1.x] Added stub release notes and release date for 5.1.1, 5.0.9, and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,44aef996c8d723198e89ca834cb1d746e2e72d77,"[5.1.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e0ba8af1b4e2a3a2ddc401d4abd1fd75a61079ce,"[5.1.x] Added stub release notes and release date for 5.1.1, 5.0.9, and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
022ab0a75c76ab2ea31dfcc5f2cf5501e378d397,e0ba8af1b4e2a3a2ddc401d4abd1fd75a61079ce,"[5.1.x] Added stub release notes and release date for 5.1.1, 5.0.9, and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
d63e20942f3024f24cb8cd85a49461ba8a9b6736,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d63e20942f3024f24cb8cd85a49461ba8a9b6736,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d63e20942f3024f24cb8cd85a49461ba8a9b6736,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d63e20942f3024f24cb8cd85a49461ba8a9b6736,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,4e31d3ea55315811db00f3f0d5c677e2344c2f5d,"[3.2.x] Added stub release notes for 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7e0151fdf33e1b11d488b6f67b94fdf3a30614a,4e31d3ea55315811db00f3f0d5c677e2344c2f5d,"[3.2.x] Added stub release notes for 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
2eb86b01d7b59be06076f6179a454d0fd0afaff6,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,926d41f0e74cc7578d71cfe12a970c9309bddfbc,Updated some comments for BCryptSHA256PasswordHasher.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,926d41f0e74cc7578d71cfe12a970c9309bddfbc,Updated some comments for BCryptSHA256PasswordHasher.,False
67b46ba7016da2d259c1ecc7d666d11f5e1cfaab,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,5a43cfe24533591a020ba4e730440bad81c478db,Added stub release notes for Django 3.2.2.,False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
e1e81aa1c4427411e3c68facdd761229ffea6f6f,5a43cfe24533591a020ba4e730440bad81c478db,Added stub release notes for Django 3.2.2.,False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,169b1a404c8118bb75840523d5fb3543de9c8889,"Replaced foo.next() by next(foo).

This new syntax for next() has been introduced in Python 2.6 and is
compatible with Python 3.",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,2626ea4a74d09642a50c3fb30944513b68dda289,"Fixed #14681 -- Do not set mode to None on file-like objects.

gzip.GzipFile does not support files with mode set to None.",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,169b1a404c8118bb75840523d5fb3543de9c8889,"Replaced foo.next() by next(foo).

This new syntax for next() has been introduced in Python 2.6 and is
compatible with Python 3.",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,2626ea4a74d09642a50c3fb30944513b68dda289,"Fixed #14681 -- Do not set mode to None on file-like objects.

gzip.GzipFile does not support files with mode set to None.",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd0c3f4ee1a30c1a1e6055061c6ba6e58c6b54d1,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,367bfaa5226eaae3278989e63f16063d5cc46cd8,Don't swallow AttributeError in core.urlresolvers.get_callable.,False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,367bfaa5226eaae3278989e63f16063d5cc46cd8,Don't swallow AttributeError in core.urlresolvers.get_callable.,False
2a5bcb69f42b84464b24b5c835dca6467b6aa7f1,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,8e97698d7b537cd298438a8d7b55916d275ff851,Added stub release notes for 3.1.13 and release date for 3.2.5.,False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,ba10772bf659a9507075d713c416882ce2c8df28,Added stub release notes for Django 3.2.5.,False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,ba10772bf659a9507075d713c416882ce2c8df28,Added stub release notes for Django 3.2.5.,False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,495083e3e167ed9c4ac45d6db3767cf97f0a0b75,"Updated translations from Transifex.

Forwardport of 04b744050f1743a88e2bf0ca2ca82b34e3361f50 from stable/3.2.x.",False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,8e97698d7b537cd298438a8d7b55916d275ff851,Added stub release notes for 3.1.13 and release date for 3.2.5.,False
dae83a24519d6f284c74414e0b81d64d9b5a0db4,495083e3e167ed9c4ac45d6db3767cf97f0a0b75,"Updated translations from Transifex.

Forwardport of 04b744050f1743a88e2bf0ca2ca82b34e3361f50 from stable/3.2.x.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d696fccae6ea0868855aa28f8d2bc2f7f77ac208,Fixed #29209 -- Fixed Cast() with TextField on MySQL and Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4ee3b208a2c95a5102b5e4fa789b10f8ee29b84,Fixed #32699 -- Fixed comparing to TruncTime() with 0 microseconds on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,407fe95cb116599adeb4b9ed01df5673aa5cb1db,"Fixed #32691 -- Made Exact lookup on BooleanFields compare directly to a boolean value on MySQL.

Performance regression in 37e6c5b79bd0529a3c85b8c478e4002fd33a2a1d.

Thanks Todor Velichkov for the report.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fd2f7e47671239dcff98cfb922221ab170aa6461,Fixed #27681 -- Fixed binary &/| operators for negative values on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1c12df4aa6c599959d9eb6de2076bf8aa6e301d6,"Fixed #25912 -- Added binary left/right shift operators to F expressions.

Thanks Mariusz Felisiak for review and MySQL advice.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6789ded0a6ab797f0dcdfa6ad5d1cfa46e23abcd,"Fixed #12990, Refs #27694 -- Added JSONField model field.

Thanks to Adam Johnson, Carlton Gibson, Mariusz Felisiak, and Raphael
Michel for mentoring this Google Summer of Code 2019 project and
everyone else who helped with the patch.

Special thanks to Mads Jensen, Nick Pope, and Simon Charette for
extensive reviews.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,994a00eb70969e4fd8f7a30a95122e2f0411ff48,"Refs #30380 -- Used cursor._executed in DatabaseOperations.last_executed_query() on MySQL.

Regression in a41b09266dcdd01036d59d76fe926fe0386aaade.

Thanks Tobias Krönke for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,45c035c823bfbd642dc1490f1c555316af403c4c,Refs #29548 -- Fixed non-GIS test failures on MariaDB.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3957f767bb215bbd4ca48aabdf068fdd214aa79c,Simplified handling of DurationField values on MySQL/MariaDB.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,89032876f427a77ab4de26493190280377567d1c,"Fixed #31275 -- Optimized sql_flush() without resetting sequences on MySQL.

Co-Authored-By: Simon Charette <charettes@users.noreply.github.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f2e2a1bd4be8ec7624b081488292b804777a526a,Fixed #29845 -- Fixed Cast crash on MySQL when casting to DecimalField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8e41373c81cbd914d84b362ca4c85d3ed4fcff43,"Allowed database backends to specify data types for Cast().

A small refactor ahead of refs #28371.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1933e56eca1ad17de7dd133bfb7cbee9858a75a3,Removed uneeded generator expressions and list comprehensions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,83f55aafdd635189c010cff403f66b54d695921a,Fixed #17653 -- Allowed using zero as AutoFields value on MySQL if NO_AUTO_VALUE_ON_ZERO SQL mode is enabled.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,39e287d8bff50e9f91f3f4471088c1946aa6a76c,"Fixed #29544 -- Fixed regex lookup on MariaDB.

Regression in 42490768441701bc02255b22df8e6894cbe487c7.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,42490768441701bc02255b22df8e6894cbe487c7,Refs #29451 -- Fixed regex/iregex lookups on MySQL 8.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a1768432b1ec3ecfa390ac5eb70dbfb0cff59b3,Fixed #28552 -- Dropped support for MySQL 5.5.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e7afef13f594eb667f2709c0ef7bca98452ab32b,Fixed #26788 -- Fixed QuerySet.update() crash when updating a geometry to another one.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,93ed71e05802a47774b52503cdc3442686d686c1,Fixed #31403 -- Added support for returning fields from INSERT statements on MariaDB 10.5+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c5cd8783825b5f6384417dac5f3889b4210b7d08,"Refs #33476 -- Refactored problematic code before reformatting by Black.

In these cases Black produces unexpected results, e.g.

def make_random_password(
    self,
    length=10,
    allowed_chars='abcdefghjkmnpqrstuvwxyz' 'ABCDEFGHJKLMNPQRSTUVWXYZ' '23456789',
):

or

cursor.execute(""""""
SELECT ...
"""""",
    [table name],
)",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fc1446073ed9636047c48796cc20772ab60e12b0,Fixed #31987 -- Fixed Cast() with DurationField on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,555bebe7749ab1a72d5141a00f9ce7a602c72298,Fixed #30987 -- Added models.PositiveBigIntegerField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fe6b5e62b1f2a18c049b8fb7ee497120639b7817,"Normalized the implementation of get_db_converters.

Put the types in the same order and checked for None consistently.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,742961332e1e2221e6fb9506c7254164e0c2cb5a,Refs #30897 -- Added support for TREE format to Queryset.explain() on MySQL 8.0.16+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d696fccae6ea0868855aa28f8d2bc2f7f77ac208,Fixed #29209 -- Fixed Cast() with TextField on MySQL and Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4ee3b208a2c95a5102b5e4fa789b10f8ee29b84,Fixed #32699 -- Fixed comparing to TruncTime() with 0 microseconds on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,407fe95cb116599adeb4b9ed01df5673aa5cb1db,"Fixed #32691 -- Made Exact lookup on BooleanFields compare directly to a boolean value on MySQL.

Performance regression in 37e6c5b79bd0529a3c85b8c478e4002fd33a2a1d.

Thanks Todor Velichkov for the report.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fd2f7e47671239dcff98cfb922221ab170aa6461,Fixed #27681 -- Fixed binary &/| operators for negative values on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1c12df4aa6c599959d9eb6de2076bf8aa6e301d6,"Fixed #25912 -- Added binary left/right shift operators to F expressions.

Thanks Mariusz Felisiak for review and MySQL advice.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6789ded0a6ab797f0dcdfa6ad5d1cfa46e23abcd,"Fixed #12990, Refs #27694 -- Added JSONField model field.

Thanks to Adam Johnson, Carlton Gibson, Mariusz Felisiak, and Raphael
Michel for mentoring this Google Summer of Code 2019 project and
everyone else who helped with the patch.

Special thanks to Mads Jensen, Nick Pope, and Simon Charette for
extensive reviews.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,994a00eb70969e4fd8f7a30a95122e2f0411ff48,"Refs #30380 -- Used cursor._executed in DatabaseOperations.last_executed_query() on MySQL.

Regression in a41b09266dcdd01036d59d76fe926fe0386aaade.

Thanks Tobias Krönke for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,45c035c823bfbd642dc1490f1c555316af403c4c,Refs #29548 -- Fixed non-GIS test failures on MariaDB.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3957f767bb215bbd4ca48aabdf068fdd214aa79c,Simplified handling of DurationField values on MySQL/MariaDB.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,89032876f427a77ab4de26493190280377567d1c,"Fixed #31275 -- Optimized sql_flush() without resetting sequences on MySQL.

Co-Authored-By: Simon Charette <charettes@users.noreply.github.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f2e2a1bd4be8ec7624b081488292b804777a526a,Fixed #29845 -- Fixed Cast crash on MySQL when casting to DecimalField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8e41373c81cbd914d84b362ca4c85d3ed4fcff43,"Allowed database backends to specify data types for Cast().

A small refactor ahead of refs #28371.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1933e56eca1ad17de7dd133bfb7cbee9858a75a3,Removed uneeded generator expressions and list comprehensions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,83f55aafdd635189c010cff403f66b54d695921a,Fixed #17653 -- Allowed using zero as AutoFields value on MySQL if NO_AUTO_VALUE_ON_ZERO SQL mode is enabled.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,39e287d8bff50e9f91f3f4471088c1946aa6a76c,"Fixed #29544 -- Fixed regex lookup on MariaDB.

Regression in 42490768441701bc02255b22df8e6894cbe487c7.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,42490768441701bc02255b22df8e6894cbe487c7,Refs #29451 -- Fixed regex/iregex lookups on MySQL 8.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a1768432b1ec3ecfa390ac5eb70dbfb0cff59b3,Fixed #28552 -- Dropped support for MySQL 5.5.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e7afef13f594eb667f2709c0ef7bca98452ab32b,Fixed #26788 -- Fixed QuerySet.update() crash when updating a geometry to another one.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,93ed71e05802a47774b52503cdc3442686d686c1,Fixed #31403 -- Added support for returning fields from INSERT statements on MariaDB 10.5+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c5cd8783825b5f6384417dac5f3889b4210b7d08,"Refs #33476 -- Refactored problematic code before reformatting by Black.

In these cases Black produces unexpected results, e.g.

def make_random_password(
    self,
    length=10,
    allowed_chars='abcdefghjkmnpqrstuvwxyz' 'ABCDEFGHJKLMNPQRSTUVWXYZ' '23456789',
):

or

cursor.execute(""""""
SELECT ...
"""""",
    [table name],
)",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fc1446073ed9636047c48796cc20772ab60e12b0,Fixed #31987 -- Fixed Cast() with DurationField on MySQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,555bebe7749ab1a72d5141a00f9ce7a602c72298,Fixed #30987 -- Added models.PositiveBigIntegerField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fe6b5e62b1f2a18c049b8fb7ee497120639b7817,"Normalized the implementation of get_db_converters.

Put the types in the same order and checked for None consistently.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,742961332e1e2221e6fb9506c7254164e0c2cb5a,Refs #30897 -- Added support for TREE format to Queryset.explain() on MySQL 8.0.16+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,43a4835edf32c57eb74c0eb207c276734a34abcf,Fixed #27473 -- Added DurationField support to Extract.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,77b73e79a4750dcbfabc528bf00cad81ff5bb4d9,"Refs #25774 -- Made Oracle truncate microseconds if USE_TZ=False.

The tests for this change are in the fix for #25774.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,17df72114e222d63c2af9ed9780583f4cb0689eb,Fixed #33340 -- Fixed unquoted column names in queries used by DatabaseCache.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d696fccae6ea0868855aa28f8d2bc2f7f77ac208,Fixed #29209 -- Fixed Cast() with TextField on MySQL and Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,924a89e135fe54bc7622aa6f03405211e75c06e9,"Fixed #26682 -- Added support for Oracle identity columns.

Thanks Shai Berger and Tim Graham for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ec186572e6cfde4cd4bc1491ff552c5d32211d9f,"Removed global timezone-aware datetime converters.

Refs #23820.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b31e63879eb5d9717e9f890401f7222e4f00c910,Fixed #29444 -- Allowed returning multiple fields from INSERT statements on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,37e6c5b79bd0529a3c85b8c478e4002fd33a2a1d,Refs #25367 -- Moved conditional expression wrapping to the Exact lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,142e1ead76fd452dc9bca0ab0f12bad56a116fb5,Fixed #30242 -- Removed extra space before LIMIT/OFFSET SQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1c12df4aa6c599959d9eb6de2076bf8aa6e301d6,"Fixed #25912 -- Added binary left/right shift operators to F expressions.

Thanks Mariusz Felisiak for review and MySQL advice.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,22ff86ec52bb536ad9d1fa3ee0c9a3d5eb9925c1,Refs #28459 -- Made Oracle get_db_converters() return converter for empty strings only when it's needed.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4e2fc5d9872c9a0c9c052a2e124f8a9b87de9b4,Fixed #22669 -- Fixed QuerySet.bulk_create() with empty model fields on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6789ded0a6ab797f0dcdfa6ad5d1cfa46e23abcd,"Fixed #12990, Refs #27694 -- Added JSONField model field.

Thanks to Adam Johnson, Carlton Gibson, Mariusz Felisiak, and Raphael
Michel for mentoring this Google Summer of Code 2019 project and
everyone else who helped with the patch.

Special thanks to Mads Jensen, Nick Pope, and Simon Charette for
extensive reviews.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c6a3546093bebae8225a2c5b7e0836a2b0617ee5,"Fixed #28451 -- Restored pre-Django 1.11 Oracle sequence/trigger naming.

Regression in 69b7d4b116e3b70b250c77829e11038d5d55c2a8.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b059ddf0660adf12a8bc0ea57fc0b9d1db9aed74,"Fixed #27561 -- Added Oracle support for binary ""or"" operator.

Removed DatabaseFeatures.supports_bitwise_or feature (unused, always True).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,79065b55a70cd220820a260a1c54851b7be0615a,"Refs #20010 -- Unified DatabaseOperations.last_executed_query() on Oracle with other db backends.

Thanks Simon Charette for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8005829bb9d9e0a14d73c9375bb55eb05daa46e1,"Simplified DatabaseOperations.sql_flush() on Oracle and PostgreSQL.

Added early return to decrease an indentation level.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,21e559495b8255bba1e8a4429cd083246ab90457,"Fixed #29979, Refs #17337 -- Extracted AutoField field logic into a mixin and refactored AutoFields.

This reduces duplication by allowing AutoField, BigAutoField and
SmallAutoField to inherit from IntegerField, BigIntegerField and
SmallIntegerField respectively. Doing so also allows for enabling the
max_length warning check and minimum/maximum value validation for auto
fields, as well as providing a mixin that can be used for other possible
future auto field types such as a theoretical UUIDAutoField.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,555bebe7749ab1a72d5141a00f9ce7a602c72298,Fixed #30987 -- Added models.PositiveBigIntegerField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,77b73e79a4750dcbfabc528bf00cad81ff5bb4d9,"Refs #25774 -- Made Oracle truncate microseconds if USE_TZ=False.

The tests for this change are in the fix for #25774.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,17df72114e222d63c2af9ed9780583f4cb0689eb,Fixed #33340 -- Fixed unquoted column names in queries used by DatabaseCache.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d696fccae6ea0868855aa28f8d2bc2f7f77ac208,Fixed #29209 -- Fixed Cast() with TextField on MySQL and Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,924a89e135fe54bc7622aa6f03405211e75c06e9,"Fixed #26682 -- Added support for Oracle identity columns.

Thanks Shai Berger and Tim Graham for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ec186572e6cfde4cd4bc1491ff552c5d32211d9f,"Removed global timezone-aware datetime converters.

Refs #23820.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b31e63879eb5d9717e9f890401f7222e4f00c910,Fixed #29444 -- Allowed returning multiple fields from INSERT statements on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,37e6c5b79bd0529a3c85b8c478e4002fd33a2a1d,Refs #25367 -- Moved conditional expression wrapping to the Exact lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,142e1ead76fd452dc9bca0ab0f12bad56a116fb5,Fixed #30242 -- Removed extra space before LIMIT/OFFSET SQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1c12df4aa6c599959d9eb6de2076bf8aa6e301d6,"Fixed #25912 -- Added binary left/right shift operators to F expressions.

Thanks Mariusz Felisiak for review and MySQL advice.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,22ff86ec52bb536ad9d1fa3ee0c9a3d5eb9925c1,Refs #28459 -- Made Oracle get_db_converters() return converter for empty strings only when it's needed.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4e2fc5d9872c9a0c9c052a2e124f8a9b87de9b4,Fixed #22669 -- Fixed QuerySet.bulk_create() with empty model fields on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6789ded0a6ab797f0dcdfa6ad5d1cfa46e23abcd,"Fixed #12990, Refs #27694 -- Added JSONField model field.

Thanks to Adam Johnson, Carlton Gibson, Mariusz Felisiak, and Raphael
Michel for mentoring this Google Summer of Code 2019 project and
everyone else who helped with the patch.

Special thanks to Mads Jensen, Nick Pope, and Simon Charette for
extensive reviews.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c6a3546093bebae8225a2c5b7e0836a2b0617ee5,"Fixed #28451 -- Restored pre-Django 1.11 Oracle sequence/trigger naming.

Regression in 69b7d4b116e3b70b250c77829e11038d5d55c2a8.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b059ddf0660adf12a8bc0ea57fc0b9d1db9aed74,"Fixed #27561 -- Added Oracle support for binary ""or"" operator.

Removed DatabaseFeatures.supports_bitwise_or feature (unused, always True).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,79065b55a70cd220820a260a1c54851b7be0615a,"Refs #20010 -- Unified DatabaseOperations.last_executed_query() on Oracle with other db backends.

Thanks Simon Charette for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8005829bb9d9e0a14d73c9375bb55eb05daa46e1,"Simplified DatabaseOperations.sql_flush() on Oracle and PostgreSQL.

Added early return to decrease an indentation level.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,21e559495b8255bba1e8a4429cd083246ab90457,"Fixed #29979, Refs #17337 -- Extracted AutoField field logic into a mixin and refactored AutoFields.

This reduces duplication by allowing AutoField, BigAutoField and
SmallAutoField to inherit from IntegerField, BigIntegerField and
SmallIntegerField respectively. Doing so also allows for enabling the
max_length warning check and minimum/maximum value validation for auto
fields, as well as providing a mixin that can be used for other possible
future auto field types such as a theoretical UUIDAutoField.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,555bebe7749ab1a72d5141a00f9ce7a602c72298,Fixed #30987 -- Added models.PositiveBigIntegerField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2dc93bb10ab1c2af1df9977f1b51d47cadab7b21,"Fixed #22316 -- Added time filters to TimeField on SQLite.

This was implemented for non-SQLite backends in 1.7 (as a
side effect of #16187).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,00aa562884a418c4ee20e223ab82c3455997ee7d,Fixed #23493 -- Added bilateral attribute to Transform,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,233c70f0479beb3bff9027e6cff680882978fd4d,Fixed #29658 -- Registered model lookups in tests with a context manager.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,20bab2cf9d02a5c6477d8aac066a635986e0d3f3,"Fixed #16187 -- refactored ORM lookup system

Allowed users to specify which lookups or transforms (""nested lookus"")
are available for fields. The implementation is now class based.

Squashed commit of the following:

commit fa7a7195f1952a9c8dea7f6e89ee13f81757eda7
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 18 10:53:24 2014 +0200

    Added lookup registration API docs

commit eb1c8ce164325e0d8641f14202e12486c70efdb6
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Tue Jan 14 18:59:36 2014 +0200

    Release notes and other minor docs changes

commit 11501c29c9352d17f22f3a0f59d3b805913dedcc
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 20:53:03 2014 +0200

    Forgot to add custom_lookups tests in prev commit

commit 83173b960ea7eb2b24d573f326be59948df33536
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 19:59:12 2014 +0200

    Renamed Extract -> Transform

commit 3b18d9f3a1bcdd93280f79654eba0efa209377bd
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 19:51:53 2014 +0200

    Removed suggestion of temporary lookup registration from docs

commit 21d0c7631c161fc0c67911480be5d3f13f1afa68
Merge: 2509006 f2dc442
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 09:38:23 2014 -0800

    Merge pull request #2 from mjtamlyn/lookups_3

    Reworked custom lookups docs.

commit f2dc4429a1da04c858364972eea57a35a868dab4
Author: Marc Tamlyn <marc.tamlyn@gmail.com>
Date:   Sun Jan 12 13:15:05 2014 +0000

    Reworked custom lookups docs.

    Mostly just formatting and rewording, but also replaced the example
    using ``YearExtract`` to  use an example which is unlikely to ever be
    possible directly in the ORM.

commit 250900650628d1f11beadb22814abd666029fb81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 13:19:13 2014 +0200

    Removed unused import

commit 4fba5dfaa022653ffa72497258ffd8f8b7476f92
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 22:34:41 2014 +0200

    Added docs to index

commit 6d53963f375c77a1f287833b19b976d23f36c30b
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 22:10:24 2014 +0200

    Dead code removal

commit f9cc0390078e21f1ea5a7bc1f15b09f8f6b0904d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 19:00:43 2014 +0200

    A new try for docs

commit 33aa18a6e3c831930bda0028222a26f9c1d96e66
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 14:57:12 2014 +0200

    Renamed get_cols to get_group_by_cols

commit c7d5f8661b7d364962bed2e6f81161c1b4f1bcc3
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 14:45:53 2014 +0200

    Altered query string customization for backends vendors

    The new way is trying to call first method 'as_' + connection.vendor.
    If that doesn't exist, then call as_sql().

    Also altered how lookup registration is done. There is now
    RegisterLookupMixin class that is used by Field, Extract and
    sql.Aggregate. This allows one to register lookups for extracts and
    aggregates in the same way lookup registration is done for fields.

commit 90e7004ec14e15503f828cc9bde2a7dab593814d
Merge: 66649ff f7c2c0a
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 13:21:01 2014 +0200

    Merge branch 'master' into lookups_3

commit 66649ff891c7c73c7eecf6038c9a6802611b5d8a
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 13:16:01 2014 +0200

    Some rewording in docs

commit 31b8faa62714b4b6b6057a9f5cc106c4dd73caab
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 29 15:52:29 2013 +0200

    Cleanup based on review comments

commit 1016159f34674c0df871ed891cde72be8340bb5d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 28 18:37:04 2013 +0200

    Proof-of-concept fix for #16731

    Implemented only for SQLite and PostgreSQL, and only for startswith
    and istartswith lookups.

commit 193cd097ca8f2cc6a911e57b8e3fb726f96ee6a6
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 28 17:57:58 2013 +0200

    Fixed #11722 -- iexact=F() produced invalid SQL

commit 08ed3c3b49e100ed9019831e770c25c8f61b70f9
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 23:59:52 2013 +0200

    Made Lookup and Extract available from django.db.models

commit b99c8d83c972786c6fcd0e84c9e5cb08c1368300
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 23:06:29 2013 +0200

    Fixed review notes by Loic

commit 049eebc0703c151127f4f0265beceea7b8b39e72
Merge: ed8fab7 b80a835
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 22:53:10 2013 +0200

    Merge branch 'master' into lookups_3

    Conflicts:
    	django/db/models/fields/__init__.py
    	django/db/models/sql/compiler.py
    	django/db/models/sql/query.py
    	tests/null_queries/tests.py

commit ed8fab7fe8867ff3eb801c3697a426478387bb2f
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 22:47:23 2013 +0200

    Made Extracts aware of full lookup path

commit 27a57b7aed91b2f346abc4a77da838bffa17c727
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 21:10:11 2013 +0200

    Removed debugger import

commit 074e0f5aca0572e368c11e6d2c73c9026e7d63d7
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 21:02:16 2013 +0200

    GIS lookup support added

commit 760e28e72bae475b442b026650969b0d182dbe53
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 20:04:31 2013 +0200

    Removed usage of Constraint, used Lookup instead

commit eac47766844b90e7d3269e7a8c012eee34ec0093
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 02:22:30 2013 +0200

    Minor cleanup of Lookup API

commit 2adf50428d59a783078b0da3d5d035106640c899
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 02:14:19 2013 +0200

    Added documentation, polished implementation

commit 32c04357a87e3727a34f8c5e6ec0114d1fbbb303
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Nov 30 23:10:15 2013 +0200

    Avoid OrderedDict creation on lookup aggregate check

commit 7c8b3a32cc17b4dbca160921d48125f1631e0df4
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Nov 30 23:04:34 2013 +0200

    Implemented nested lookups

    But there is no support of using lookups outside filtering yet.

commit 4d219d4cdef21d9c14e5d6b9299d583d1975fcba
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Wed Nov 27 22:07:30 2013 +0200

    Initial implementation of custom lookups",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,845042b3d9faaefef8855c2bab48bd9532cd00ca,"Refs #25705 -- Fixed invalid SQL generated by SQLFuncMixin.as_sql() in custom_lookups tests.

Generated SQL was invalid because parameters are quoted by a driver.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,af1434329fbdb295870301bd7e16e18fea95492e,Removed unnecessary type() calls for class methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,980eda01909c9fd5c5e16f276ca663e71371a0a2,"Fixed custom_lookups tests for Oracle

Refs #21821",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,534aaf56f4a8e261e111426b2a709e2f8816192f,Fixed #24629 -- Unified Transform and Expression APIs,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,219d928852c256a81d09dbaa29ed4cec42d2fdfa,"Fixed #21863 -- supplemented get_lookup() with get_transform()

Also fixed #22124 -- Expanded explanation of exactly what is going on in
as_sql() methods.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ceb1ffcc8da92a82338582bc6801de4bc8f05e32,"Fixed #23420 - broken warning for unbound naive datetime objects

Fixed issue with warning message displayed for unbound naive datetime
objects when USE_TZ is True. Adds unit test that demonstrates the issue
(discoverable when using a custom lookup in MySQL).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3f7b3275627385f8f7531fca01cdda50d4ec6b6e,"Fixed #31235 -- Made assertQuerysetEqual() compare querysets directly.

This also replaces assertQuerysetEqual() to
assertSequenceEqual()/assertCountEqual() where appropriate.

Co-authored-by: Peter Inglesby <peter.inglesby@gmail.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,08232ef84d4959826ad5136f183c9fc5bedf0599,Fixed #24744 - Fixed relabeled_clone for the Transform,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9d93dff33338c90a55f7158fbbe0d82e88e13fa3,Fixed #28665 -- Change some database exceptions to NotImplementedError per PEP 249.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7aeb7390fc4231119494a9ebdee3c6ee0d5af053,Fixed #26891 -- Fixed lookup registration for ForeignObject.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f61256da3a266c75c2f75c35172832bf2d605939,Renamed qn to compiler,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,10bfa876be59feec24bb6a40fa11bece808ee405,"Refs #27985 -- Reallowed using __exact=None as an alias for __isnull=True if a custom lookup class with lookup_name != None is registered as the exact lookup.

Regression in 58da81a5a372a69f0bac801c412b57f3cce5f188 and prerequisite
for refs #28896.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,84e7a9f4a7bb3cad2bffae97baaae99de152c451,Switched setUp() to setUpTestData() where possible in Django's tests.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a2dd618e3b4a7472fab852da450ca5eef92a922f,"Fixed #22648 -- Transform.output_type should respect overridden custom_lookup and custom_transform.

Previously, class lookups from the output_type would be used, but any
changes to custom_lookup or custom_transform would be ignored.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0c1f71635f8a3f32195e1573fe929c7d88a78511,"Fixed #27203 -- Replaced assertQuerysetEqual(..., lambda o: o) with assertSequenceEqual().",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,13dca01af02e91f25ae1d96b09b857993714c96d,Replaced try..except blocks by context manager in custom lookups tests,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6b5d82749c57a1aae8c9e81d2b85b2cadb9ef933,Fixed #16731 -- Made pattern lookups work properly with F() expressions,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b5e0eede406633b88c6222031171f80876d8f5e1,Fixed #22394 -- Refactored built-in datetime lookups to transforms.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,00aa562884a418c4ee20e223ab82c3455997ee7d,Fixed #23493 -- Added bilateral attribute to Transform,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,233c70f0479beb3bff9027e6cff680882978fd4d,Fixed #29658 -- Registered model lookups in tests with a context manager.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,20bab2cf9d02a5c6477d8aac066a635986e0d3f3,"Fixed #16187 -- refactored ORM lookup system

Allowed users to specify which lookups or transforms (""nested lookus"")
are available for fields. The implementation is now class based.

Squashed commit of the following:

commit fa7a7195f1952a9c8dea7f6e89ee13f81757eda7
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 18 10:53:24 2014 +0200

    Added lookup registration API docs

commit eb1c8ce164325e0d8641f14202e12486c70efdb6
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Tue Jan 14 18:59:36 2014 +0200

    Release notes and other minor docs changes

commit 11501c29c9352d17f22f3a0f59d3b805913dedcc
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 20:53:03 2014 +0200

    Forgot to add custom_lookups tests in prev commit

commit 83173b960ea7eb2b24d573f326be59948df33536
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 19:59:12 2014 +0200

    Renamed Extract -> Transform

commit 3b18d9f3a1bcdd93280f79654eba0efa209377bd
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 19:51:53 2014 +0200

    Removed suggestion of temporary lookup registration from docs

commit 21d0c7631c161fc0c67911480be5d3f13f1afa68
Merge: 2509006 f2dc442
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 09:38:23 2014 -0800

    Merge pull request #2 from mjtamlyn/lookups_3

    Reworked custom lookups docs.

commit f2dc4429a1da04c858364972eea57a35a868dab4
Author: Marc Tamlyn <marc.tamlyn@gmail.com>
Date:   Sun Jan 12 13:15:05 2014 +0000

    Reworked custom lookups docs.

    Mostly just formatting and rewording, but also replaced the example
    using ``YearExtract`` to  use an example which is unlikely to ever be
    possible directly in the ORM.

commit 250900650628d1f11beadb22814abd666029fb81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Jan 12 13:19:13 2014 +0200

    Removed unused import

commit 4fba5dfaa022653ffa72497258ffd8f8b7476f92
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 22:34:41 2014 +0200

    Added docs to index

commit 6d53963f375c77a1f287833b19b976d23f36c30b
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 22:10:24 2014 +0200

    Dead code removal

commit f9cc0390078e21f1ea5a7bc1f15b09f8f6b0904d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 19:00:43 2014 +0200

    A new try for docs

commit 33aa18a6e3c831930bda0028222a26f9c1d96e66
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 14:57:12 2014 +0200

    Renamed get_cols to get_group_by_cols

commit c7d5f8661b7d364962bed2e6f81161c1b4f1bcc3
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 14:45:53 2014 +0200

    Altered query string customization for backends vendors

    The new way is trying to call first method 'as_' + connection.vendor.
    If that doesn't exist, then call as_sql().

    Also altered how lookup registration is done. There is now
    RegisterLookupMixin class that is used by Field, Extract and
    sql.Aggregate. This allows one to register lookups for extracts and
    aggregates in the same way lookup registration is done for fields.

commit 90e7004ec14e15503f828cc9bde2a7dab593814d
Merge: 66649ff f7c2c0a
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 13:21:01 2014 +0200

    Merge branch 'master' into lookups_3

commit 66649ff891c7c73c7eecf6038c9a6802611b5d8a
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Jan 11 13:16:01 2014 +0200

    Some rewording in docs

commit 31b8faa62714b4b6b6057a9f5cc106c4dd73caab
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 29 15:52:29 2013 +0200

    Cleanup based on review comments

commit 1016159f34674c0df871ed891cde72be8340bb5d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 28 18:37:04 2013 +0200

    Proof-of-concept fix for #16731

    Implemented only for SQLite and PostgreSQL, and only for startswith
    and istartswith lookups.

commit 193cd097ca8f2cc6a911e57b8e3fb726f96ee6a6
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 28 17:57:58 2013 +0200

    Fixed #11722 -- iexact=F() produced invalid SQL

commit 08ed3c3b49e100ed9019831e770c25c8f61b70f9
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 23:59:52 2013 +0200

    Made Lookup and Extract available from django.db.models

commit b99c8d83c972786c6fcd0e84c9e5cb08c1368300
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 23:06:29 2013 +0200

    Fixed review notes by Loic

commit 049eebc0703c151127f4f0265beceea7b8b39e72
Merge: ed8fab7 b80a835
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 22:53:10 2013 +0200

    Merge branch 'master' into lookups_3

    Conflicts:
    	django/db/models/fields/__init__.py
    	django/db/models/sql/compiler.py
    	django/db/models/sql/query.py
    	tests/null_queries/tests.py

commit ed8fab7fe8867ff3eb801c3697a426478387bb2f
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Dec 21 22:47:23 2013 +0200

    Made Extracts aware of full lookup path

commit 27a57b7aed91b2f346abc4a77da838bffa17c727
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 21:10:11 2013 +0200

    Removed debugger import

commit 074e0f5aca0572e368c11e6d2c73c9026e7d63d7
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 21:02:16 2013 +0200

    GIS lookup support added

commit 760e28e72bae475b442b026650969b0d182dbe53
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 20:04:31 2013 +0200

    Removed usage of Constraint, used Lookup instead

commit eac47766844b90e7d3269e7a8c012eee34ec0093
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 02:22:30 2013 +0200

    Minor cleanup of Lookup API

commit 2adf50428d59a783078b0da3d5d035106640c899
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sun Dec 1 02:14:19 2013 +0200

    Added documentation, polished implementation

commit 32c04357a87e3727a34f8c5e6ec0114d1fbbb303
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Nov 30 23:10:15 2013 +0200

    Avoid OrderedDict creation on lookup aggregate check

commit 7c8b3a32cc17b4dbca160921d48125f1631e0df4
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Nov 30 23:04:34 2013 +0200

    Implemented nested lookups

    But there is no support of using lookups outside filtering yet.

commit 4d219d4cdef21d9c14e5d6b9299d583d1975fcba
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Wed Nov 27 22:07:30 2013 +0200

    Initial implementation of custom lookups",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,845042b3d9faaefef8855c2bab48bd9532cd00ca,"Refs #25705 -- Fixed invalid SQL generated by SQLFuncMixin.as_sql() in custom_lookups tests.

Generated SQL was invalid because parameters are quoted by a driver.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,af1434329fbdb295870301bd7e16e18fea95492e,Removed unnecessary type() calls for class methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,980eda01909c9fd5c5e16f276ca663e71371a0a2,"Fixed custom_lookups tests for Oracle

Refs #21821",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,534aaf56f4a8e261e111426b2a709e2f8816192f,Fixed #24629 -- Unified Transform and Expression APIs,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,219d928852c256a81d09dbaa29ed4cec42d2fdfa,"Fixed #21863 -- supplemented get_lookup() with get_transform()

Also fixed #22124 -- Expanded explanation of exactly what is going on in
as_sql() methods.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ceb1ffcc8da92a82338582bc6801de4bc8f05e32,"Fixed #23420 - broken warning for unbound naive datetime objects

Fixed issue with warning message displayed for unbound naive datetime
objects when USE_TZ is True. Adds unit test that demonstrates the issue
(discoverable when using a custom lookup in MySQL).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3f7b3275627385f8f7531fca01cdda50d4ec6b6e,"Fixed #31235 -- Made assertQuerysetEqual() compare querysets directly.

This also replaces assertQuerysetEqual() to
assertSequenceEqual()/assertCountEqual() where appropriate.

Co-authored-by: Peter Inglesby <peter.inglesby@gmail.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,08232ef84d4959826ad5136f183c9fc5bedf0599,Fixed #24744 - Fixed relabeled_clone for the Transform,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9d93dff33338c90a55f7158fbbe0d82e88e13fa3,Fixed #28665 -- Change some database exceptions to NotImplementedError per PEP 249.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7aeb7390fc4231119494a9ebdee3c6ee0d5af053,Fixed #26891 -- Fixed lookup registration for ForeignObject.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f61256da3a266c75c2f75c35172832bf2d605939,Renamed qn to compiler,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,10bfa876be59feec24bb6a40fa11bece808ee405,"Refs #27985 -- Reallowed using __exact=None as an alias for __isnull=True if a custom lookup class with lookup_name != None is registered as the exact lookup.

Regression in 58da81a5a372a69f0bac801c412b57f3cce5f188 and prerequisite
for refs #28896.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,84e7a9f4a7bb3cad2bffae97baaae99de152c451,Switched setUp() to setUpTestData() where possible in Django's tests.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a2dd618e3b4a7472fab852da450ca5eef92a922f,"Fixed #22648 -- Transform.output_type should respect overridden custom_lookup and custom_transform.

Previously, class lookups from the output_type would be used, but any
changes to custom_lookup or custom_transform would be ignored.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0c1f71635f8a3f32195e1573fe929c7d88a78511,"Fixed #27203 -- Replaced assertQuerysetEqual(..., lambda o: o) with assertSequenceEqual().",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,13dca01af02e91f25ae1d96b09b857993714c96d,Replaced try..except blocks by context manager in custom lookups tests,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6b5d82749c57a1aae8c9e81d2b85b2cadb9ef933,Fixed #16731 -- Made pattern lookups work properly with F() expressions,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b5e0eede406633b88c6222031171f80876d8f5e1,Fixed #22394 -- Refactored built-in datetime lookups to transforms.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f4b397087cd0261ce1f8c35c2014e1121f5f0f5f,"Moved postgresql backend DatabaseOperations class into a new module, postgresql/operations.py, so that it can be imported by both the postgresql and postgresql_psycopg2 backends. Hence the two backends no longer have a duplicated DatabaseOperations class

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a584a6b40f8f685f5809eb77de2c7be0b150aeda,"Fixed #10071 -- Changed some internal database data representations.

We now pass numbers used in data queries as actualy numbers (integers) to the
database backends, rather than string forms. This is easier for some of the
less flexible backeds.

Based on a patch from Leo Soto and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e74e207cce54802f897adcb42149440ee154821e,"Fixed #17260 -- Added time zone aware aggregation and lookups.

Thanks Carl Meyer for the review.

Squashed commit of the following:

commit 4f290bdb60b7d8534abf4ca901bd0844612dcbda
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 21:21:30 2013 +0100

    Used '0:00' instead of 'UTC' which doesn't always exist in Oracle.

    Thanks Ian Kelly for the suggestion.

commit 01b6366f3ce67d57a58ca8f25e5be77911748638
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 13:38:43 2013 +0100

    Made tzname a parameter of datetime_extract/trunc_sql.

    This is required to work around a bug in Oracle.

commit 924a144ef8a80ba4daeeafbe9efaa826566e9d02
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 14:47:44 2013 +0100

    Added support for parameters in SELECT clauses.

commit b4351d2890cd1090d3ff2d203fe148937324c935
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 22:30:22 2013 +0100

    Documented backwards incompatibilities in the two previous commits.

commit 91ef84713c81bd455f559dacf790e586d08cacb9
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:42:31 2013 +0100

    Used QuerySet.datetimes for the admin's date_hierarchy.

commit 0d0de288a5210fa106cd4350961eb2006535cc5c
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:29:38 2013 +0100

    Used QuerySet.datetimes in date-based generic views.

commit 9c0859ff7c0b00734afe7fc15609d43d83215072
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:25 2013 +0100

    Implemented QuerySet.datetimes on Oracle.

commit 68ab511a4ffbd2b811bf5da174d47e4dd90f28fc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:14 2013 +0100

    Implemented QuerySet.datetimes on MySQL.

commit 22d52681d347a8cdf568dc31ed032cbc61d049ef
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:42:29 2013 +0100

    Implemented QuerySet.datetimes on SQLite.

commit f6800fd04c93722b45f9236976389e0b2fe436f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:03 2013 +0100

    Implemented QuerySet.datetimes on PostgreSQL.

commit 0c829c23f4cf4d6804cadcc93032dd4c26b8c65e
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:41:08 2013 +0100

    Added datetime-handling infrastructure in the ORM layers.

commit 104d82a7778cf3f0f5d03dfa53709c26df45daad
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 10:05:55 2013 +0100

    Updated null_queries tests to avoid clashing with the __second lookup.

commit c01bbb32358201b3ac8cb4291ef87b7612a2b8e6
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 23:07:41 2013 +0100

    Updated tests of .dates().

    Replaced .dates() by .datetimes() for DateTimeFields.
    Replaced dates with datetimes in the expected output for DateFields.

commit 50fb7a52462fecf0127b38e7f3df322aeb287c43
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:40:09 2013 +0100

    Updated and added tests for QuerySet.datetimes.

commit a8451a5004c437190e264667b1e6fb8acc3c1eeb
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 22:34:46 2013 +0100

    Documented the new time lookups and updated the date lookups.

commit 29413eab2bd1d5e004598900c0dadc0521bbf4d3
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 16:15:49 2013 +0100

    Documented QuerySet.datetimes and updated QuerySet.dates.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b7f263551c64e3f80544892e314ed5b0b22cc7c8,Refs #33517 -- Prevented __second lookup from returning fractional seconds on PostgreSQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d549b8805053d4b064bf492ba90e90db5d7e2a6b,"Fixed #26608 -- Added support for window expressions (OVER clause).

Thanks Josh Smeaton, Mariusz Felisiak, Sergey Fedoseev, Simon Charettes,
Adam Chainz/Johnson and Tim Graham for comments and reviews and Jamie
Cockburn for initial patch.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d549b8805053d4b064bf492ba90e90db5d7e2a6b,"Fixed #26608 -- Added support for window expressions (OVER clause).

Thanks Josh Smeaton, Mariusz Felisiak, Sergey Fedoseev, Simon Charettes,
Adam Chainz/Johnson and Tim Graham for comments and reviews and Jamie
Cockburn for initial patch.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,41406bf98e64917e5804cdc6338f70f212c365d4,Increased test coverage for db/backends/base/operations.py.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4a66a69239c493c05b322815b18c605cd4c96e7c,Fixed #24887 -- Removed one-arg limit from models.aggregate,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cbb6531e5bef7ffe0c46d6c44d598d7bcdf9029e,"Fixed #31228 -- Reallowed aggregates to be used with multiple expressions and no DISTINCT on SQLite.

Regression in bc05547cd8c1dd511c6b6a6c873a1bc63417b111.

Thanks Andy Terra for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54e94640ace261b14cf8cdb1fae3dc6f068a5f87,Refs #25287 -- Added support for multiplying and dividing DurationField by scalar values on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c27932ec938217d4fbb0adad23c0d0708f83f690,"Fixed #33460 -- Used VALUES clause for insert in bulk on SQLite.

SQLite 3.7.11 introduced the ability to use multiple values directly.
SQLite 3.8.8 made multiple values not subject to the
SQLITE_LIMIT_COMPOUND_SELECT (500).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a0b19a0f5b1731cf575546175034da53f5af5367,"Refs #28643 -- Added math database functions.

Thanks Nick Pope for much review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f91b5a7e4b2ac436b1fe3065b23217543d0f54c1,"Fixed #26063 -- Crash when passing > 2000 params.

If SQLITE_MAX_VARIABLE_NUMBER (default = 999) is changed at compile time
to be greater than SQLITE_MAX_COLUMN (default = 2000), which Debian does
by setting the former to 250000, Django raised an exception on queries
containing more than 2000 parameters when DEBUG = True.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d0f569b350bca89eeb186523d8905a6e31b5a947,Refs #28459 -- Improved performance of loading DecimalField on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,335c9c94acf263901fb023404408880245b0c4b4,Simplified imports from django.db and django.contrib.gis.db.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,71ec102b01fcc85acae3819426a4e02ef423b0fa,"Fixed #32483 -- Fixed QuerySet.values()/values_list() on JSONField key transforms with booleans on SQLite.

Thanks Matthew Cornell for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6fd6d8383f48ea2fe4e058725fa30529a083e9a5,"Fixed #28915 -- Prevented SQLite from truncating trailing zeros in the fractional part of DecimalField.

This reverts commit a146b65628e702a9a3ed5be21542ca45366fbb29 and adds
a test for the regression.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2b2ae4eeb75ea53613a0992f3927e65f89affcce,"Refs #30054, #20483 -- Cached SQLite references graph retrieval on sql_flush().",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f6a7663bcddffb114f2647f9928cbf1fdd8e4b5,Refs #14091 -- Fixed connection.queries on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75866b93cc285c87cfc764a32d081493b19c1dc5,Fixed #31479 -- Added support to reset sequences on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,98abc0c90e0eb7fe3a71cfa360962cf59605f1d3,Fixed #32501 -- Added support for returning fields from INSERT statements on SQLite 3.35+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4420761ea9457d386b2000cf9df5b2f6f88f8f91,Fixed #28727 -- Fixed Cast crash on SQLite when casting a Python date/datetime to Date/DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4a66a69239c493c05b322815b18c605cd4c96e7c,Fixed #24887 -- Removed one-arg limit from models.aggregate,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f138fe5a496a81115c4fba6615a517fc62c3b17,Fixed #22288 -- Fixed F() expressions with the  __range lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cbb6531e5bef7ffe0c46d6c44d598d7bcdf9029e,"Fixed #31228 -- Reallowed aggregates to be used with multiple expressions and no DISTINCT on SQLite.

Regression in bc05547cd8c1dd511c6b6a6c873a1bc63417b111.

Thanks Andy Terra for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d992f4e3c29a81c956d3d616f0bc19701431b26e,Refs #31369 -- Removed models.NullBooleanField per deprecation timeline.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54e94640ace261b14cf8cdb1fae3dc6f068a5f87,Refs #25287 -- Added support for multiplying and dividing DurationField by scalar values on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c27932ec938217d4fbb0adad23c0d0708f83f690,"Fixed #33460 -- Used VALUES clause for insert in bulk on SQLite.

SQLite 3.7.11 introduced the ability to use multiple values directly.
SQLite 3.8.8 made multiple values not subject to the
SQLITE_LIMIT_COMPOUND_SELECT (500).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a0b19a0f5b1731cf575546175034da53f5af5367,"Refs #28643 -- Added math database functions.

Thanks Nick Pope for much review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f91b5a7e4b2ac436b1fe3065b23217543d0f54c1,"Fixed #26063 -- Crash when passing > 2000 params.

If SQLITE_MAX_VARIABLE_NUMBER (default = 999) is changed at compile time
to be greater than SQLITE_MAX_COLUMN (default = 2000), which Debian does
by setting the former to 250000, Django raised an exception on queries
containing more than 2000 parameters when DEBUG = True.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,d0f569b350bca89eeb186523d8905a6e31b5a947,Refs #28459 -- Improved performance of loading DecimalField on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,335c9c94acf263901fb023404408880245b0c4b4,Simplified imports from django.db and django.contrib.gis.db.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f3da09df0f4147223ab76a00a841586ccf11005d,Fixed #31396 -- Added binary XOR operator to F expressions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9bcbcd599abac91ea853b2fe10b784ba32df043e,"Fixed #31133 -- Fixed crash when subtracting against a subquery annotation.

The subtract_temporals() database operation was not handling expressions
returning SQL params in mixed database types.

Regression in 35431298226165986ad07e91f9d3aca721ff38ec.

Thanks Reupen Shah for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,71ec102b01fcc85acae3819426a4e02ef423b0fa,"Fixed #32483 -- Fixed QuerySet.values()/values_list() on JSONField key transforms with booleans on SQLite.

Thanks Matthew Cornell for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,6fd6d8383f48ea2fe4e058725fa30529a083e9a5,"Fixed #28915 -- Prevented SQLite from truncating trailing zeros in the fractional part of DecimalField.

This reverts commit a146b65628e702a9a3ed5be21542ca45366fbb29 and adds
a test for the regression.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2b2ae4eeb75ea53613a0992f3927e65f89affcce,"Refs #30054, #20483 -- Cached SQLite references graph retrieval on sql_flush().",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4f6a7663bcddffb114f2647f9928cbf1fdd8e4b5,Refs #14091 -- Fixed connection.queries on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,75866b93cc285c87cfc764a32d081493b19c1dc5,Fixed #31479 -- Added support to reset sequences on SQLite.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,98abc0c90e0eb7fe3a71cfa360962cf59605f1d3,Fixed #32501 -- Added support for returning fields from INSERT statements on SQLite 3.35+.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,4420761ea9457d386b2000cf9df5b2f6f88f8f91,Fixed #28727 -- Fixed Cast crash on SQLite when casting a Python date/datetime to Date/DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2dc93bb10ab1c2af1df9977f1b51d47cadab7b21,"Fixed #22316 -- Added time filters to TimeField on SQLite.

This was implemented for non-SQLite backends in 1.7 (as a
side effect of #16187).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2a4af0ea43512370764303d35bc5309f8abce666,Fixed #25774 -- Refactor datetime expressions into public API,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,43a4835edf32c57eb74c0eb207c276734a34abcf,Fixed #27473 -- Added DurationField support to Extract.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,54eb8a374d5d98594b264e8ec22337819b37443c,"Fixed CVE-2022-34265 -- Protected Trunc(kind)/Extract(lookup_name) against SQL injection.

Thanks Takuto Yoshikai (Aeye Security Lab) for the report.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2dc93bb10ab1c2af1df9977f1b51d47cadab7b21,"Fixed #22316 -- Added time filters to TimeField on SQLite.

This was implemented for non-SQLite backends in 1.7 (as a
side effect of #16187).",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,f4b397087cd0261ce1f8c35c2014e1121f5f0f5f,"Moved postgresql backend DatabaseOperations class into a new module, postgresql/operations.py, so that it can be imported by both the postgresql and postgresql_psycopg2 backends. Hence the two backends no longer have a duplicated DatabaseOperations class

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,a584a6b40f8f685f5809eb77de2c7be0b150aeda,"Fixed #10071 -- Changed some internal database data representations.

We now pass numbers used in data queries as actualy numbers (integers) to the
database backends, rather than string forms. This is easier for some of the
less flexible backeds.

Based on a patch from Leo Soto and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,e74e207cce54802f897adcb42149440ee154821e,"Fixed #17260 -- Added time zone aware aggregation and lookups.

Thanks Carl Meyer for the review.

Squashed commit of the following:

commit 4f290bdb60b7d8534abf4ca901bd0844612dcbda
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 21:21:30 2013 +0100

    Used '0:00' instead of 'UTC' which doesn't always exist in Oracle.

    Thanks Ian Kelly for the suggestion.

commit 01b6366f3ce67d57a58ca8f25e5be77911748638
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 13:38:43 2013 +0100

    Made tzname a parameter of datetime_extract/trunc_sql.

    This is required to work around a bug in Oracle.

commit 924a144ef8a80ba4daeeafbe9efaa826566e9d02
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Wed Feb 13 14:47:44 2013 +0100

    Added support for parameters in SELECT clauses.

commit b4351d2890cd1090d3ff2d203fe148937324c935
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 22:30:22 2013 +0100

    Documented backwards incompatibilities in the two previous commits.

commit 91ef84713c81bd455f559dacf790e586d08cacb9
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:42:31 2013 +0100

    Used QuerySet.datetimes for the admin's date_hierarchy.

commit 0d0de288a5210fa106cd4350961eb2006535cc5c
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 09:29:38 2013 +0100

    Used QuerySet.datetimes in date-based generic views.

commit 9c0859ff7c0b00734afe7fc15609d43d83215072
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:25 2013 +0100

    Implemented QuerySet.datetimes on Oracle.

commit 68ab511a4ffbd2b811bf5da174d47e4dd90f28fc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:14 2013 +0100

    Implemented QuerySet.datetimes on MySQL.

commit 22d52681d347a8cdf568dc31ed032cbc61d049ef
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:42:29 2013 +0100

    Implemented QuerySet.datetimes on SQLite.

commit f6800fd04c93722b45f9236976389e0b2fe436f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:43:03 2013 +0100

    Implemented QuerySet.datetimes on PostgreSQL.

commit 0c829c23f4cf4d6804cadcc93032dd4c26b8c65e
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:41:08 2013 +0100

    Added datetime-handling infrastructure in the ORM layers.

commit 104d82a7778cf3f0f5d03dfa53709c26df45daad
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Mon Feb 11 10:05:55 2013 +0100

    Updated null_queries tests to avoid clashing with the __second lookup.

commit c01bbb32358201b3ac8cb4291ef87b7612a2b8e6
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 23:07:41 2013 +0100

    Updated tests of .dates().

    Replaced .dates() by .datetimes() for DateTimeFields.
    Replaced dates with datetimes in the expected output for DateFields.

commit 50fb7a52462fecf0127b38e7f3df322aeb287c43
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 21:40:09 2013 +0100

    Updated and added tests for QuerySet.datetimes.

commit a8451a5004c437190e264667b1e6fb8acc3c1eeb
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 22:34:46 2013 +0100

    Documented the new time lookups and updated the date lookups.

commit 29413eab2bd1d5e004598900c0dadc0521bbf4d3
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sun Feb 10 16:15:49 2013 +0100

    Documented QuerySet.datetimes and updated QuerySet.dates.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,b7f263551c64e3f80544892e314ed5b0b22cc7c8,Refs #33517 -- Prevented __second lookup from returning fractional seconds on PostgreSQL.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,41406bf98e64917e5804cdc6338f70f212c365d4,Increased test coverage for db/backends/base/operations.py.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
877c800f255ccaa7abde1fb944de45d1616f5cc9,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
877c800f255ccaa7abde1fb944de45d1616f5cc9,2dc93bb10ab1c2af1df9977f1b51d47cadab7b21,"Fixed #22316 -- Added time filters to TimeField on SQLite.

This was implemented for non-SQLite backends in 1.7 (as a
side effect of #16187).",False
6872f42757d7ef6a97e0b6ec5db4d2615d8a2bd8,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6872f42757d7ef6a97e0b6ec5db4d2615d8a2bd8,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6872f42757d7ef6a97e0b6ec5db4d2615d8a2bd8,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6872f42757d7ef6a97e0b6ec5db4d2615d8a2bd8,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4d83b0163e15f8352fd17fa121e929842ff2b686,Fixed #25969 -- Replaced render_to_response() with render() in docs examples.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,89ea98ca5666c0d42b3ab77fcc48f9636dde88f1,"Fixed #14182 - documented how to modify upload handlers when using CsrfViewMiddleware

Thanks to dc for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13960 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c8c2b8a6382f255b4f0b8296906bdef8eebb5809,Fixed #9535 -- Added a reference guide for file upload classes.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,865cd35c9b357e20994f6c6a51f2ae000ba0a3ee,Made more extensive usage of context managers with open.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,9ec8aa5e5d42ac4529846f7eae6bf4982800abff,Fixed #24149 -- Normalized tuple settings to lists.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c9d6e3595cfd0aa58cde1656bd735ecfcd7a872b,Fixed #32243 -- Added docs examples for manually saving Files.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,e2f778d57947d168a875159e6df075255eea4bbc,Fixed #33172 -- Added example of modifying upload handlers on the fly for CBVs.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4d83b0163e15f8352fd17fa121e929842ff2b686,Fixed #25969 -- Replaced render_to_response() with render() in docs examples.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,89ea98ca5666c0d42b3ab77fcc48f9636dde88f1,"Fixed #14182 - documented how to modify upload handlers when using CsrfViewMiddleware

Thanks to dc for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13960 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c8c2b8a6382f255b4f0b8296906bdef8eebb5809,Fixed #9535 -- Added a reference guide for file upload classes.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,865cd35c9b357e20994f6c6a51f2ae000ba0a3ee,Made more extensive usage of context managers with open.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,9ec8aa5e5d42ac4529846f7eae6bf4982800abff,Fixed #24149 -- Normalized tuple settings to lists.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c9d6e3595cfd0aa58cde1656bd735ecfcd7a872b,Fixed #32243 -- Added docs examples for manually saving Files.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,e2f778d57947d168a875159e6df075255eea4bbc,Fixed #33172 -- Added example of modifying upload handlers on the fly for CBVs.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,62510f01e76ad0526c94ea6d1bc6399c1ddf3df4,[4.2.x] Fixed #34140 -- Reformatted code blocks in docs with blacken-docs.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,28d428270328ff75302ba4fd935a52a71a600675,"[4.2.x] Added stub release notes and release date for 4.2.1, 4.1.9, and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,28d428270328ff75302ba4fd935a52a71a600675,"[4.2.x] Added stub release notes and release date for 4.2.1, 4.1.9, and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,62510f01e76ad0526c94ea6d1bc6399c1ddf3df4,[4.2.x] Fixed #34140 -- Reformatted code blocks in docs with blacken-docs.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,28d428270328ff75302ba4fd935a52a71a600675,"[4.2.x] Added stub release notes and release date for 4.2.1, 4.1.9, and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,28d428270328ff75302ba4fd935a52a71a600675,"[4.2.x] Added stub release notes and release date for 4.2.1, 4.1.9, and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
21b1b1fc03e5f9e9f8c977ee6e35618dd3b353dd,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,2c4fe761a0e2b28e2c5c3b4bc506ee06824a443d,Fixed #20593 -- Allow blank passwords in check_password() and set_password(),False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,a4f0e9aec76ee40c938d3bf450ff63211b7ba1f1,"Fixed #28718 -- Allowed user to request a password reset if their password doesn't use an enabled hasher.

Regression in aeb1389442d0f9669edf6660b747fd10693b63a7.
Reverted changes to is_password_usable() from
703c266682be39f7153498ad0d8031231f12ee79 and documentation changes from
92f48680dbd2e02f2b33f6ad0e35b7d337889fb2.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,5411821e3b8d1427ee63a5914aed1088c04cc1ed,Refs #27656 -- Updated django.contrib docstring verb style according to PEP 257.,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,2c4fe761a0e2b28e2c5c3b4bc506ee06824a443d,Fixed #20593 -- Allow blank passwords in check_password() and set_password(),False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,a4f0e9aec76ee40c938d3bf450ff63211b7ba1f1,"Fixed #28718 -- Allowed user to request a password reset if their password doesn't use an enabled hasher.

Regression in aeb1389442d0f9669edf6660b747fd10693b63a7.
Reverted changes to is_password_usable() from
703c266682be39f7153498ad0d8031231f12ee79 and documentation changes from
92f48680dbd2e02f2b33f6ad0e35b7d337889fb2.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,5411821e3b8d1427ee63a5914aed1088c04cc1ed,Refs #27656 -- Updated django.contrib docstring verb style according to PEP 257.,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,8759778185d0539bf9c11e3fda497a9486b9acab,"Fixed #20675 -- `check_password` should work when no password is specified.

The regression was introduced by 2c4fe761a. refs #20593.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,674c23999cb6982a9d447fedec4d72e135201fee,Fixed #34565 -- Added support for async checking of user passwords.,False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,8759778185d0539bf9c11e3fda497a9486b9acab,"Fixed #20675 -- `check_password` should work when no password is specified.

The regression was introduced by 2c4fe761a. refs #20593.",False
07cefdee4a9d1fcd9a3a631cbd07c78defd1923b,674c23999cb6982a9d447fedec4d72e135201fee,Fixed #34565 -- Added support for async checking of user passwords.,False
f68e5a99164867ab0e071a936470958ed867479d,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f68e5a99164867ab0e071a936470958ed867479d,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f68e5a99164867ab0e071a936470958ed867479d,f683cb90bea2afbe0ef4c011acd4ab590c37410d,"Fixed #21924 -- Added the ability to specify a reverse order for admin_order_field.

Thanks Klemens Mantzos for the report and initial patch.",False
f68e5a99164867ab0e071a936470958ed867479d,8edfdddbc8d6a4e39c4bf175075822ca3751b054,"[1.8.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
f68e5a99164867ab0e071a936470958ed867479d,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
f68e5a99164867ab0e071a936470958ed867479d,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f68e5a99164867ab0e071a936470958ed867479d,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
f68e5a99164867ab0e071a936470958ed867479d,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f68e5a99164867ab0e071a936470958ed867479d,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
f68e5a99164867ab0e071a936470958ed867479d,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
f68e5a99164867ab0e071a936470958ed867479d,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
f68e5a99164867ab0e071a936470958ed867479d,2cad91cac6e16ae5248542c90eedb27ece0a1e42,"[1.8.x] Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.

Backport of d7848c11e008ddeb036a95d389caa3b2c97b795e from master",False
f68e5a99164867ab0e071a936470958ed867479d,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f68e5a99164867ab0e071a936470958ed867479d,f683cb90bea2afbe0ef4c011acd4ab590c37410d,"Fixed #21924 -- Added the ability to specify a reverse order for admin_order_field.

Thanks Klemens Mantzos for the report and initial patch.",False
f68e5a99164867ab0e071a936470958ed867479d,8edfdddbc8d6a4e39c4bf175075822ca3751b054,"[1.8.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
f68e5a99164867ab0e071a936470958ed867479d,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
f68e5a99164867ab0e071a936470958ed867479d,2cad91cac6e16ae5248542c90eedb27ece0a1e42,"[1.8.x] Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.

Backport of d7848c11e008ddeb036a95d389caa3b2c97b795e from master",False
f68e5a99164867ab0e071a936470958ed867479d,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,165f44aaaa0b9008f35d8f6a3474db061559ad53,"Combine consecutive with statements

Python 2.7 allows to combine several 'with' instructions.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4da29717fd46234d5b44705646f629800c80982a,"Fixed #15673 -- Allow limit_choices_to to use a tuple for __in filters. Thanks, EnTeQuAk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16078 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f212b24b6469b66424354bf970f3051df180b88d,"Cleaned up and refactored `ModelAdmin.formfield_for_dbfield`:

  * The new method uses an admin configuration option (`formfield_overrides`); this makes custom admin widgets especially easy.
  * Refactored what was left of `formfield_for_dbfield` into a handful of smaller methods so that it's easier to hook in and return custom fields where needed.
  * These `formfield_for_*` methods now pass around `request` so that you can easily modify fields based on request (as in #3987).

Fixes #8306, #3987, #9148.

Thanks to James Bennet for the original patch; Alex Gaynor and Brian Rosner also contributed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8fa974fcdde90b6719a1058e77541389ff1809b5,Refs #33211 -- Added assertCountSeleniumElements() test helper.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,676bd084f2509f4201561d5c77ed4ecbd157bfa0,"Fixed #32873 -- Deprecated settings.USE_L10N.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,249a6190aef5e3676c6d9aa6c38cecff895b5993,Fixed #30975 -- Replaced custom get_select_option with Selenium's select_by_value.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,552abffab16cbdff571486b683e7e7ef12e46066,"Fixed #29094 -- Fixed crash when entering an invalid uuid in ModelAdmin.raw_id_fields.

Regression in 2f9861d823620da7ecb291a8f005f53da12b1e89.

Thanks Carel Burger for the report and fix.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,25e06bca57c068d4b9e9b4221b16a667ccb0d38e,"Fixed #18767 -- Fixed admin calendar for other locales than English.

Refactored openCalendar function from DateTimeShortcuts.js. Now, when
entered manually in the input field, the date will show up correctly on
the calendar for locales that don't use ""-"" for separator.

Thanks charettes for revivew and Alexey Boriskin for some of the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,85c22dd4c4a406301b4378a4682456dfa1900830,Fixed #23262 -- Made SelectFilter2.js move items on enter Key press.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7e6d852bac4de2d5ed2d5ddeabf71482d644ef51,"Fixed #20663 -- ""Today"" and ""now"" admin shortcuts.

Changed the shortcuts next to date and time intput widgets
to account for the current timezone.

Refs #7717, #14253 and #18768.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c438cc2a3653644ea42987f7e65f6f638ca85f6c,"Fixed #20821 -- Added tooltips to Admin SelectBox widget

The Admin widget, which can be used to filter multiple selects
can sometimes be too narrow and hide information such as
user permissions. This commit adds tooltips to the select
options so that a user can hover over and see the hidden text.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,44c0ecdd9226d039a8c666b36ae320af2046a1c1,"Fixed #25364 -- Added generic way to test on all browsers supported by selenium.

Browser names should be passed as a comma separated list to the --selenium flag.

Thanks Tim Graham, Simon Charette and Moritz Sichert for review and discussion.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07cfe1bd822f4108b5029aef1615a17000d0b0dc,Refs #14497 -- Handled empty readonly admin FileFields,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7ac0cd445e056cac9bfc1fed11026ab6c74b8818,Fixed #25323 -- Fixed selenium test failures with chromedriver 2.18.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,995ffbb2a60c80217bf4cbe028b7712fafaf11f2,Added some Selenium tests for the admin raw id widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7c9cb1ed37354c184fe0438ecae923d5be711c86,Refs #27953 -- Removed hardcoded uses of Model.__str__() in tests.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2f02a05ffb45be68b4164b4785ff1826833150a3,"Fixed #2879 -- Added support for the integration with Selenium and other in-browser testing frameworks. Also added the first Selenium tests for `contrib.admin`. Many thanks to everyone for their contributions and feedback: Mikeal Rogers, Dirk Datzert, mir, Simon G., Almad, Russell Keith-Magee, Denis Golomazov, devin, robertrv, andrewbadr, Idan Gazit, voidspace, Tom Christie, hjwp2, Adam Nelson, Jannis Leidel, Anssi Kääriäinen, Preston Holmes, Bruno Renié and Jacob Kaplan-Moss.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17241 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,aa12cf07c9202e117712abe2621d901dd6dd94b4,Removed unnecessary numeric indexes in format strings.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d53e574676ba0809394017f1f3a5bc24512e5bed,Fixed #20865 -- Fixed raw_id_fields to work with callable limit_choices_to.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4dca9d166a42717b7d7bf5cf3c5da8149cf88cb2,"Added more thorough Selenium tests for the admin horizontal/vertical filter widgets.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c79852acee9a2ca137ff0e19657342c7406bbbb9,Fixed #14402 -- Removed clearing of help_text for ManyToManyField's raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7f155a07032caf916518beca5b33fa5a90300209,Refs #25006 -- Added a '6 p.m.' option to the admin's time picker.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e744c7e459bae0fbb656c70f368c7183fd7a6013,Imported specific models in a few tests that didn't.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b3162cab94ca2988c99afe01887a4b61d6a35c1a,Fixed #27386 -- Wrapped admin's readonly fields in <div> rather than <p>.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b9290b1d49538c1092b59c41e6046b11c25ecafb,"Fixed #26449 -- Merged admin's FORMFIELD_FOR_DBFIELD_DEFAULTS with formfield_overrides.

Useful for overriding the DateTimeField widget.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4b67e8dc75b50073a80239569016936f10a95ded,"Complemented datetime picker selenium test

This includes test coverage for the calendarMonth JS function in calendar.js",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d51c50d836c5cf8db5566da17963f871be554615,Fixed #31462 -- Allowed overriding autocomplete/raw_id_fields/filter widgets for ManyToManyFields with formfield_overrides.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7f663aeccf17a75d5fe3fee02d1ac577fdeb57f2,"Fixed #25820 -- Allowed whitespace in admin's calendar.js month/weekday names.

This is useful for certain language translations.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,525dc283a68c0d47f5eb2192cc4a20111d561ae0,Fixed #28278 -- Fixed invalid HTML for a required AdminFileWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,39a7eed1bbf12020a077e4bec3d82e08f171a021,Converted test fixtures to setUpTestData methods,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,306607d5b99b6eca6ae2c1e726d8eb32b9b2ca1b,"Fixed #32365 -- Made zoneinfo the default timezone implementation.

Thanks to Adam Johnson, Aymeric Augustin, David Smith, Mariusz Felisiak, Nick
Pope, and Paul Ganssle for reviews.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f2de5f4caba819fad10a78bfec47ae6f29cc2c29,"Added some Selenium tests for the admin's filter_horizontal and filter_vertical widgets. Ref #13614, #15220.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17579 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,015fad9060a8a6fb273a33b8e8457e504ed26131,Fixed #26175 -- Removed SHA1 password hashes in tests.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2e8bc8f9862f127b0e69766c7fc7dc92f3156d20,"Fixed #14454 -- converted admin_widgets tests from doctests to unittests.  We have always been at war with doctests.  Thanks to prestontimmons for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7bc94b58bf4e139b669d023e0fb10ce380fc89f6,"Refs #13614 -- Added test for admin's many-to-many widget data loss bug.

It looks like browsers have fixed the reported issue.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,bf33d3eb1d20157a09b4bf1f36f9c928bc1cabc7,"Fixed #12444 - Date based widgets now correctly handle input values when using locale-aware formatting. Also fixes #7656.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12029 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2ed2db2ea3246c7f985ddfbb780850a23e851f9d,Replaced selenium.find_element_by_css_selector where by_id is sufficient.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3bc6b18cb92462ff5ae54efd0fce5340e9149b0f,"Fixed selenium failure.

This fixes (at least according to tests on the ci itself)
admin_widgets.tests.RelatedFieldWidgetSeleniumFirefoxTests.test_foreign_key_using_to_field

(http://ci.djangoproject.com/job/Django/database=mysql_gis,python=python2.7/3792/testReport/junit/admin_widgets.tests/RelatedFieldWidgetSeleniumFirefoxTests/test_foreign_key_using_to_field/)

The cause for this issue seems to be that wait_page_loaded was executed before click fired
and as such no profile got saved (again just an educated guess, but with this fix I can no
longer reproduce it -- fingers crossed).",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2ccc0b22db6730ba0950b10bbc5238ae575e4a45,"Fixed #33211 -- Updated tests for Selenium 4.0.0.

Replaced deprecated `find_element[s]_by_*()` usages, in favour of
`find_element[s]()` with an explicit `By`.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b120c74032c1131e46e4073db1298cf92c4e34c3,"Changed ""date"" column to ""start_date""--Oracle won't name columns with reserved keywords.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0603f09318049e67320121ace035b7ab03f88ca3,Refs #25149 -- Fixed regression in admin datetime widget for timezones on the negative side of UTC.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4e50e4065489f06d72eed8ce2d9ae98639be5a93,Removed unneeded conditional_escapes from the testsuite.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,845817b039fc059955bb1eafa5fd78565a49159d,"Fixed #24466 -- Added JavaScript escaping in a couple places in the admin.

Thanks Aymeric Augustin and Florian Apolloner for work on the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0cc32a8f9782f0e465b4653012de9bc41e6d7db4,"Refs #22955 -- Added test for admin's many-to-many widget refresh data loss bug.

This was fixed by 4a438e400b7ce0ab9d0b6876196cbe8d620a4171.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f55f2b9d74bf59d1b3ace5df5f498998eb62cb28,"Fixed #10059: `ModelAdmin.formfield_for_dbfield` now handles custom `Field` subclasses. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8fc8c958a5840df48a2bda110c6f06656968b156,Fixed broken selenium tests after 42b9a23267f14be39b9b00958e18d5746783208e.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,04e6542b5a904762a4e723c9b04ba5650ee9dc2e,"Fixed #19423 -- Prevented ModelAdmin sharing widgets due to formfield_overrides

Thanks joebuyer at manycycles.com for the report and Simon Charette
for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2be621e44c1b5b68c895383f3e20b1f17ddb447a,"Fixed #14497 -- Improved admin widget for ""read only"" FileFields

Based on patch by Adam J Forster, Paul Collins, and Julien.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2607fa901699916c4825f145fa8a84f49b8524ff,"Fixed #21774 -- Isolate all test urls from eachother.

This (nearly) completes the work to isolate all the test modules from
each other. This is now more important as importing models from another
module will case PendingDeprecationWarnings if those modules are not in
INSTALLED_APPS. The only remaining obvious dependencies are:

- d.c.auth depends on d.c.admin (because of the is_admin flag to some
  views), but this is not so important and d.c.admin is in
  always_installed_apps
- test_client_regress depends on test_client. Eventually these should
  become a single module, as the split serves no useful purpose.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e46c2326c8cfc038e015f55fd050ab5d7eb91b62,Fixed #31536 -- Fixed rendering of disabled AdminFileWidget and ClearableFileInput.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,af67ce5e18525ba52ee4533229468ed07f912536,Fixed #4574 -- Added CSS classes to the admin calendar widget for better control over styling.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,5c9901323ec07c399efbcf0fc6886a5f8a3f8589,"Fixed #12073 -- Made `AdminDateWidget` and `AdminTimeWidget` consider user-supplied `attrs`. Thanks to elliss for the report and to koenb for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17125 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2a3a0eb09231f7cade8fd945bf4af1b251df12e3,Fixed #27905 -- Added RelatedFieldWidgetWrapper.value_omitted_from_data().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9e04c3b7444ba136efa03896a67e46d2e7045e28,"Fixed #13149 -- The admin `ForeignKeyRawIdWidget` now properly handles non-integer values.  Thanks, Chris Adams.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@13751 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,491419b5ffac3752a1c1804a763c017a2ed82e16,"Made m2m fields form help_text munging specific to admin widgets.

Refs #9321 and follow-up to e80de93af6a0a21a9063a55c4d6d20e3927243e9.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,165f44aaaa0b9008f35d8f6a3474db061559ad53,"Combine consecutive with statements

Python 2.7 allows to combine several 'with' instructions.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4da29717fd46234d5b44705646f629800c80982a,"Fixed #15673 -- Allow limit_choices_to to use a tuple for __in filters. Thanks, EnTeQuAk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16078 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f212b24b6469b66424354bf970f3051df180b88d,"Cleaned up and refactored `ModelAdmin.formfield_for_dbfield`:

  * The new method uses an admin configuration option (`formfield_overrides`); this makes custom admin widgets especially easy.
  * Refactored what was left of `formfield_for_dbfield` into a handful of smaller methods so that it's easier to hook in and return custom fields where needed.
  * These `formfield_for_*` methods now pass around `request` so that you can easily modify fields based on request (as in #3987).

Fixes #8306, #3987, #9148.

Thanks to James Bennet for the original patch; Alex Gaynor and Brian Rosner also contributed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8fa974fcdde90b6719a1058e77541389ff1809b5,Refs #33211 -- Added assertCountSeleniumElements() test helper.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,676bd084f2509f4201561d5c77ed4ecbd157bfa0,"Fixed #32873 -- Deprecated settings.USE_L10N.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,249a6190aef5e3676c6d9aa6c38cecff895b5993,Fixed #30975 -- Replaced custom get_select_option with Selenium's select_by_value.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,552abffab16cbdff571486b683e7e7ef12e46066,"Fixed #29094 -- Fixed crash when entering an invalid uuid in ModelAdmin.raw_id_fields.

Regression in 2f9861d823620da7ecb291a8f005f53da12b1e89.

Thanks Carel Burger for the report and fix.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,25e06bca57c068d4b9e9b4221b16a667ccb0d38e,"Fixed #18767 -- Fixed admin calendar for other locales than English.

Refactored openCalendar function from DateTimeShortcuts.js. Now, when
entered manually in the input field, the date will show up correctly on
the calendar for locales that don't use ""-"" for separator.

Thanks charettes for revivew and Alexey Boriskin for some of the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,85c22dd4c4a406301b4378a4682456dfa1900830,Fixed #23262 -- Made SelectFilter2.js move items on enter Key press.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7e6d852bac4de2d5ed2d5ddeabf71482d644ef51,"Fixed #20663 -- ""Today"" and ""now"" admin shortcuts.

Changed the shortcuts next to date and time intput widgets
to account for the current timezone.

Refs #7717, #14253 and #18768.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c438cc2a3653644ea42987f7e65f6f638ca85f6c,"Fixed #20821 -- Added tooltips to Admin SelectBox widget

The Admin widget, which can be used to filter multiple selects
can sometimes be too narrow and hide information such as
user permissions. This commit adds tooltips to the select
options so that a user can hover over and see the hidden text.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,44c0ecdd9226d039a8c666b36ae320af2046a1c1,"Fixed #25364 -- Added generic way to test on all browsers supported by selenium.

Browser names should be passed as a comma separated list to the --selenium flag.

Thanks Tim Graham, Simon Charette and Moritz Sichert for review and discussion.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07cfe1bd822f4108b5029aef1615a17000d0b0dc,Refs #14497 -- Handled empty readonly admin FileFields,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7ac0cd445e056cac9bfc1fed11026ab6c74b8818,Fixed #25323 -- Fixed selenium test failures with chromedriver 2.18.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,995ffbb2a60c80217bf4cbe028b7712fafaf11f2,Added some Selenium tests for the admin raw id widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7c9cb1ed37354c184fe0438ecae923d5be711c86,Refs #27953 -- Removed hardcoded uses of Model.__str__() in tests.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2f02a05ffb45be68b4164b4785ff1826833150a3,"Fixed #2879 -- Added support for the integration with Selenium and other in-browser testing frameworks. Also added the first Selenium tests for `contrib.admin`. Many thanks to everyone for their contributions and feedback: Mikeal Rogers, Dirk Datzert, mir, Simon G., Almad, Russell Keith-Magee, Denis Golomazov, devin, robertrv, andrewbadr, Idan Gazit, voidspace, Tom Christie, hjwp2, Adam Nelson, Jannis Leidel, Anssi Kääriäinen, Preston Holmes, Bruno Renié and Jacob Kaplan-Moss.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17241 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,aa12cf07c9202e117712abe2621d901dd6dd94b4,Removed unnecessary numeric indexes in format strings.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d53e574676ba0809394017f1f3a5bc24512e5bed,Fixed #20865 -- Fixed raw_id_fields to work with callable limit_choices_to.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4dca9d166a42717b7d7bf5cf3c5da8149cf88cb2,"Added more thorough Selenium tests for the admin horizontal/vertical filter widgets.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c79852acee9a2ca137ff0e19657342c7406bbbb9,Fixed #14402 -- Removed clearing of help_text for ManyToManyField's raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7f155a07032caf916518beca5b33fa5a90300209,Refs #25006 -- Added a '6 p.m.' option to the admin's time picker.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e744c7e459bae0fbb656c70f368c7183fd7a6013,Imported specific models in a few tests that didn't.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b3162cab94ca2988c99afe01887a4b61d6a35c1a,Fixed #27386 -- Wrapped admin's readonly fields in <div> rather than <p>.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b9290b1d49538c1092b59c41e6046b11c25ecafb,"Fixed #26449 -- Merged admin's FORMFIELD_FOR_DBFIELD_DEFAULTS with formfield_overrides.

Useful for overriding the DateTimeField widget.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4b67e8dc75b50073a80239569016936f10a95ded,"Complemented datetime picker selenium test

This includes test coverage for the calendarMonth JS function in calendar.js",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d51c50d836c5cf8db5566da17963f871be554615,Fixed #31462 -- Allowed overriding autocomplete/raw_id_fields/filter widgets for ManyToManyFields with formfield_overrides.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7f663aeccf17a75d5fe3fee02d1ac577fdeb57f2,"Fixed #25820 -- Allowed whitespace in admin's calendar.js month/weekday names.

This is useful for certain language translations.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,525dc283a68c0d47f5eb2192cc4a20111d561ae0,Fixed #28278 -- Fixed invalid HTML for a required AdminFileWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,39a7eed1bbf12020a077e4bec3d82e08f171a021,Converted test fixtures to setUpTestData methods,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,306607d5b99b6eca6ae2c1e726d8eb32b9b2ca1b,"Fixed #32365 -- Made zoneinfo the default timezone implementation.

Thanks to Adam Johnson, Aymeric Augustin, David Smith, Mariusz Felisiak, Nick
Pope, and Paul Ganssle for reviews.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f2de5f4caba819fad10a78bfec47ae6f29cc2c29,"Added some Selenium tests for the admin's filter_horizontal and filter_vertical widgets. Ref #13614, #15220.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17579 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,015fad9060a8a6fb273a33b8e8457e504ed26131,Fixed #26175 -- Removed SHA1 password hashes in tests.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2e8bc8f9862f127b0e69766c7fc7dc92f3156d20,"Fixed #14454 -- converted admin_widgets tests from doctests to unittests.  We have always been at war with doctests.  Thanks to prestontimmons for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,7bc94b58bf4e139b669d023e0fb10ce380fc89f6,"Refs #13614 -- Added test for admin's many-to-many widget data loss bug.

It looks like browsers have fixed the reported issue.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,bf33d3eb1d20157a09b4bf1f36f9c928bc1cabc7,"Fixed #12444 - Date based widgets now correctly handle input values when using locale-aware formatting. Also fixes #7656.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12029 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2ed2db2ea3246c7f985ddfbb780850a23e851f9d,Replaced selenium.find_element_by_css_selector where by_id is sufficient.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3bc6b18cb92462ff5ae54efd0fce5340e9149b0f,"Fixed selenium failure.

This fixes (at least according to tests on the ci itself)
admin_widgets.tests.RelatedFieldWidgetSeleniumFirefoxTests.test_foreign_key_using_to_field

(http://ci.djangoproject.com/job/Django/database=mysql_gis,python=python2.7/3792/testReport/junit/admin_widgets.tests/RelatedFieldWidgetSeleniumFirefoxTests/test_foreign_key_using_to_field/)

The cause for this issue seems to be that wait_page_loaded was executed before click fired
and as such no profile got saved (again just an educated guess, but with this fix I can no
longer reproduce it -- fingers crossed).",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2ccc0b22db6730ba0950b10bbc5238ae575e4a45,"Fixed #33211 -- Updated tests for Selenium 4.0.0.

Replaced deprecated `find_element[s]_by_*()` usages, in favour of
`find_element[s]()` with an explicit `By`.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b120c74032c1131e46e4073db1298cf92c4e34c3,"Changed ""date"" column to ""start_date""--Oracle won't name columns with reserved keywords.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0603f09318049e67320121ace035b7ab03f88ca3,Refs #25149 -- Fixed regression in admin datetime widget for timezones on the negative side of UTC.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,4e50e4065489f06d72eed8ce2d9ae98639be5a93,Removed unneeded conditional_escapes from the testsuite.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,845817b039fc059955bb1eafa5fd78565a49159d,"Fixed #24466 -- Added JavaScript escaping in a couple places in the admin.

Thanks Aymeric Augustin and Florian Apolloner for work on the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,0cc32a8f9782f0e465b4653012de9bc41e6d7db4,"Refs #22955 -- Added test for admin's many-to-many widget refresh data loss bug.

This was fixed by 4a438e400b7ce0ab9d0b6876196cbe8d620a4171.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f55f2b9d74bf59d1b3ace5df5f498998eb62cb28,"Fixed #10059: `ModelAdmin.formfield_for_dbfield` now handles custom `Field` subclasses. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8fc8c958a5840df48a2bda110c6f06656968b156,Fixed broken selenium tests after 42b9a23267f14be39b9b00958e18d5746783208e.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,04e6542b5a904762a4e723c9b04ba5650ee9dc2e,"Fixed #19423 -- Prevented ModelAdmin sharing widgets due to formfield_overrides

Thanks joebuyer at manycycles.com for the report and Simon Charette
for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2be621e44c1b5b68c895383f3e20b1f17ddb447a,"Fixed #14497 -- Improved admin widget for ""read only"" FileFields

Based on patch by Adam J Forster, Paul Collins, and Julien.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2607fa901699916c4825f145fa8a84f49b8524ff,"Fixed #21774 -- Isolate all test urls from eachother.

This (nearly) completes the work to isolate all the test modules from
each other. This is now more important as importing models from another
module will case PendingDeprecationWarnings if those modules are not in
INSTALLED_APPS. The only remaining obvious dependencies are:

- d.c.auth depends on d.c.admin (because of the is_admin flag to some
  views), but this is not so important and d.c.admin is in
  always_installed_apps
- test_client_regress depends on test_client. Eventually these should
  become a single module, as the split serves no useful purpose.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e46c2326c8cfc038e015f55fd050ab5d7eb91b62,Fixed #31536 -- Fixed rendering of disabled AdminFileWidget and ClearableFileInput.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,af67ce5e18525ba52ee4533229468ed07f912536,Fixed #4574 -- Added CSS classes to the admin calendar widget for better control over styling.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,5c9901323ec07c399efbcf0fc6886a5f8a3f8589,"Fixed #12073 -- Made `AdminDateWidget` and `AdminTimeWidget` consider user-supplied `attrs`. Thanks to elliss for the report and to koenb for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17125 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2a3a0eb09231f7cade8fd945bf4af1b251df12e3,Fixed #27905 -- Added RelatedFieldWidgetWrapper.value_omitted_from_data().,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9e04c3b7444ba136efa03896a67e46d2e7045e28,"Fixed #13149 -- The admin `ForeignKeyRawIdWidget` now properly handles non-integer values.  Thanks, Chris Adams.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@13751 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,491419b5ffac3752a1c1804a763c017a2ed82e16,"Made m2m fields form help_text munging specific to admin widgets.

Refs #9321 and follow-up to e80de93af6a0a21a9063a55c4d6d20e3927243e9.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f6a0b7cfe31367935cd124907b54fdd0b87ce261,"Fixed #14407 -- Simplified ManyToManyRawIdWidget.value_from_datadict, Thanks tyrion!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14283 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,655d5afea9d1f3d5aa55efc9fe77a14b353e35a6,"Fixed #14880 - raw_id_fields in admin does not work when limit_choices_to dictionary has value=False

Thanks to smallming for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c24bdf044ba23f2aa09ea4637a368ea86fd1c128,"Fixed #15103 - SuspiciousOperation with limit_choices_to and raw_id_fields

Thanks to natrius for the report.

This patch also fixes some unicode bugs in affected code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,94cd8efc50c717cd00244f4b2233f971a53b205e,"Fixed #14370 -- Allowed using a Select2 widget for ForeignKey and ManyToManyField in the admin.

Thanks Florian Apolloner and Tim Graham for review and
contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3a807a6f597a97b0fa514039a8ea41fb90769981,Fixed #31365 -- Removed jQuery usage in SelectFilter2.js.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a2f7433adc610cb0a85b3e23a1fec2267591f866,Fixed #29221 -- Corrected admin's autocomplete widget to add a space after custom classes.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fbb73894395b728ec96c661da6f87523718c5398,Ticket #17804 fix.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,540ae68a5cc6339c72375fad9b04dc48f3af4c93,"Fixed #27920 -- Restored empty RadioSelect choice producing value=""""

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.
Thanks Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8f6860863e34cb1cbe24161f1c4e7c79007e93dc,Fixed #30722 -- Added default rate-limiting requests to admin's Select2 widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a9f5652113f0721a7066e359ae28d14692ea3c47,Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e17088a108e604cad23b000a83189fdd02a8a2f9,Fixed #29213 -- Fixed autocomplete widget's translations for zh-hans/zh-hant.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,668571386926ff5453d0e11f59b0a89c0dc1dfa2,Fixed E127 pep8 warnings.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ba83378a7762c51be235b521aa5b48233d6c6c82,Fixed #29523 -- Removed jQuery usage in DateTimeShortcuts.js & collapse.js.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8eb56930915f8022aa27ec29ab5be7d21764608c,Fixed #33070 -- Fixed loading translations with language subtags in admin's Select2 widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,f6a0b7cfe31367935cd124907b54fdd0b87ce261,"Fixed #14407 -- Simplified ManyToManyRawIdWidget.value_from_datadict, Thanks tyrion!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14283 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,655d5afea9d1f3d5aa55efc9fe77a14b353e35a6,"Fixed #14880 - raw_id_fields in admin does not work when limit_choices_to dictionary has value=False

Thanks to smallming for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c24bdf044ba23f2aa09ea4637a368ea86fd1c128,"Fixed #15103 - SuspiciousOperation with limit_choices_to and raw_id_fields

Thanks to natrius for the report.

This patch also fixes some unicode bugs in affected code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,94cd8efc50c717cd00244f4b2233f971a53b205e,"Fixed #14370 -- Allowed using a Select2 widget for ForeignKey and ManyToManyField in the admin.

Thanks Florian Apolloner and Tim Graham for review and
contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,3a807a6f597a97b0fa514039a8ea41fb90769981,Fixed #31365 -- Removed jQuery usage in SelectFilter2.js.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a2f7433adc610cb0a85b3e23a1fec2267591f866,Fixed #29221 -- Corrected admin's autocomplete widget to add a space after custom classes.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,fbb73894395b728ec96c661da6f87523718c5398,Ticket #17804 fix.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,540ae68a5cc6339c72375fad9b04dc48f3af4c93,"Fixed #27920 -- Restored empty RadioSelect choice producing value=""""

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.
Thanks Tim Graham for the review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8f6860863e34cb1cbe24161f1c4e7c79007e93dc,Fixed #30722 -- Added default rate-limiting requests to admin's Select2 widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,a9f5652113f0721a7066e359ae28d14692ea3c47,Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e17088a108e604cad23b000a83189fdd02a8a2f9,Fixed #29213 -- Fixed autocomplete widget's translations for zh-hans/zh-hant.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,668571386926ff5453d0e11f59b0a89c0dc1dfa2,Fixed E127 pep8 warnings.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,ba83378a7762c51be235b521aa5b48233d6c6c82,Fixed #29523 -- Removed jQuery usage in DateTimeShortcuts.js & collapse.js.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,8eb56930915f8022aa27ec29ab5be7d21764608c,Fixed #33070 -- Fixed loading translations with language subtags in admin's Select2 widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
efea1ef7e2190e3f77ca0651b5458297bc0f6a9f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,667ced2abcb557c1fc8feda7c4d952193b8f5768,"Fixed #12594 -- Ensured that a meaningful exception is raised when the urlconf_module is None. Thanks to buriy for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12854 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,667ced2abcb557c1fc8feda7c4d952193b8f5768,"Fixed #12594 -- Ensured that a meaningful exception is raised when the urlconf_module is None. Thanks to buriy for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12854 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,b4cdf4d111e2a536abddeb38d029e71bb0d41ddb,"Fixed #10802 -- Handle ImportErrors and AttributeErrors gracefully when raised by the URL resolver system during startup. Many thanks, IonelMaries and Bas Peschier.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16420 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,b4cdf4d111e2a536abddeb38d029e71bb0d41ddb,"Fixed #10802 -- Handle ImportErrors and AttributeErrors gracefully when raised by the URL resolver system during startup. Many thanks, IonelMaries and Bas Peschier.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16420 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1a8c420fe4b27fb2caf5e46d23b5712fc0ac535,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
45acd6d836895a4c36575f48b3fb36a3dae98d19,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
45acd6d836895a4c36575f48b3fb36a3dae98d19,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f84657b6b2243cc787bdb9f296710c8d13ad0bd,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7fd55c3481a004afb049e15ae3b8c93ce8bf0603,"Fixed #20631 -- Increased the default EmailField max_length to 254.

Thanks pmartin for the report.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,21f333bcefccc151d6439246f8203d609ab6ca79,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4cfbde71a33973cb8c8da406b2523dfc742358e7,"Fixed #12027 -- Fixed EmailValidator to reject a trailing dot.

Thanks Klas H for the report and claudep for the patch.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7fd55c3481a004afb049e15ae3b8c93ce8bf0603,"Fixed #20631 -- Increased the default EmailField max_length to 254.

Thanks pmartin for the report.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,21f333bcefccc151d6439246f8203d609ab6ca79,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4cfbde71a33973cb8c8da406b2523dfc742358e7,"Fixed #12027 -- Fixed EmailValidator to reject a trailing dot.

Thanks Klas H for the report and claudep for the patch.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,1f8bb95cc2286a882e0f7a4692f77b285d811d11,"Corrected domain max length for EmailValidator; refs #20631.

Thanks MarkusH for the report.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,5ae0c933a8572c173401386f9037901e6b5fff2b,Fixed errors introduced in 21f333bcefccc151d6439246f8203d609ab6ca79. Refs #17751,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2b157b0adc5cbe4fb0161f8319aca809b32eeae0,"[py3] Fixed slug regex

In Python 3, \w matches any Unicode character.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,1f8bb95cc2286a882e0f7a4692f77b285d811d11,"Corrected domain max length for EmailValidator; refs #20631.

Thanks MarkusH for the report.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,5ae0c933a8572c173401386f9037901e6b5fff2b,Fixed errors introduced in 21f333bcefccc151d6439246f8203d609ab6ca79. Refs #17751,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2b157b0adc5cbe4fb0161f8319aca809b32eeae0,"[py3] Fixed slug regex

In Python 3, \w matches any Unicode character.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
574dd5e0b0fbb877ae5827b1603d298edc9bb2a0,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
70f99952965a430daf69eeb9947079aae535d2d0,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
70f99952965a430daf69eeb9947079aae535d2d0,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
70f99952965a430daf69eeb9947079aae535d2d0,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
70f99952965a430daf69eeb9947079aae535d2d0,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
70f99952965a430daf69eeb9947079aae535d2d0,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
70f99952965a430daf69eeb9947079aae535d2d0,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,cb2de5e2e983adb7b16a9978222d20e94286827e,"[1.8.x] Fixed #25421 -- Fixed test --keepdb option on Oracle.

Backport of a3a6def867c61d24dfded6cbfef7f820409dc739 from master",False
70f99952965a430daf69eeb9947079aae535d2d0,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
70f99952965a430daf69eeb9947079aae535d2d0,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
70f99952965a430daf69eeb9947079aae535d2d0,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
70f99952965a430daf69eeb9947079aae535d2d0,cb2de5e2e983adb7b16a9978222d20e94286827e,"[1.8.x] Fixed #25421 -- Fixed test --keepdb option on Oracle.

Backport of a3a6def867c61d24dfded6cbfef7f820409dc739 from master",False
70f99952965a430daf69eeb9947079aae535d2d0,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
90363e388c61874add3f3557ee654a996ec75d78,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
90363e388c61874add3f3557ee654a996ec75d78,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
90363e388c61874add3f3557ee654a996ec75d78,f12fa7750c95cafa3a317be6a62ed3a2f53caf3c,"[1.5.X] Fixed #17549 -- Added a clickable link for URLFields in admin change list.

Backport of ac2052ebc84c45709ab5f0f25e685bf656ce79bc from master.",False
90363e388c61874add3f3557ee654a996ec75d78,f12fa7750c95cafa3a317be6a62ed3a2f53caf3c,"[1.5.X] Fixed #17549 -- Added a clickable link for URLFields in admin change list.

Backport of ac2052ebc84c45709ab5f0f25e685bf656ce79bc from master.",False
90363e388c61874add3f3557ee654a996ec75d78,f12fa7750c95cafa3a317be6a62ed3a2f53caf3c,"[1.5.X] Fixed #17549 -- Added a clickable link for URLFields in admin change list.

Backport of ac2052ebc84c45709ab5f0f25e685bf656ce79bc from master.",False
90363e388c61874add3f3557ee654a996ec75d78,f12fa7750c95cafa3a317be6a62ed3a2f53caf3c,"[1.5.X] Fixed #17549 -- Added a clickable link for URLFields in admin change list.

Backport of ac2052ebc84c45709ab5f0f25e685bf656ce79bc from master.",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4a6b945dffe8d10e7cec107d93e6efaebfbded29,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4a6b945dffe8d10e7cec107d93e6efaebfbded29,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4a6b945dffe8d10e7cec107d93e6efaebfbded29,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
4a6b945dffe8d10e7cec107d93e6efaebfbded29,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
a132d411c6986418ee6c0edc331080aa792fee6e,839bcfe33059e43c382bdc5204cd08fa185a0bd6,"fixes #1161 - spaces in filenames should now be handled better (filename parameters are enclosed in """")


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
a132d411c6986418ee6c0edc331080aa792fee6e,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
a132d411c6986418ee6c0edc331080aa792fee6e,839bcfe33059e43c382bdc5204cd08fa185a0bd6,"fixes #1161 - spaces in filenames should now be handled better (filename parameters are enclosed in """")


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
a132d411c6986418ee6c0edc331080aa792fee6e,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
a132d411c6986418ee6c0edc331080aa792fee6e,ce40c4a9e2b32e8c9233e788f594ebf03cc9a7f0,"Changed unique-messages.py, compile-messages.py and make-messages.py to use 'if name == main' so they can be imported and won't mess up utilities such as pychecker

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2056 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a132d411c6986418ee6c0edc331080aa792fee6e,ce40c4a9e2b32e8c9233e788f594ebf03cc9a7f0,"Changed unique-messages.py, compile-messages.py and make-messages.py to use 'if name == main' so they can be imported and won't mess up utilities such as pychecker

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2056 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,55a0b9c32ebae957b95a9a55846692837e2ff39b,"[4.2.x] Added stub release notes and release date for 4.2.5, 4.1.11, and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,4ee877a7b08d22b5902be15379424b45072580fb,Used super() in DjangoUnicodeDecodeError.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,03281d8fe7a32f580a85235659d4fbb143eeb867,Fixed #26005 -- Fixed some percent decoding cases in uri_to_iri().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,a120fac65a17137bc8ac710477478474e3f9973e,"Introduced force_bytes and force_str.

This is consistent with the smart_* series of functions and it's going
to be used by the next commit.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,8e8c9b908a0fe0d2437fcf3f0378eb2a62b81986,"Fixed getting default encoding in get_system_username

Refs #19933.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,4ee877a7b08d22b5902be15379424b45072580fb,Used super() in DjangoUnicodeDecodeError.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,03281d8fe7a32f580a85235659d4fbb143eeb867,Fixed #26005 -- Fixed some percent decoding cases in uri_to_iri().,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,a120fac65a17137bc8ac710477478474e3f9973e,"Introduced force_bytes and force_str.

This is consistent with the smart_* series of functions and it's going
to be used by the next commit.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,8e8c9b908a0fe0d2437fcf3f0378eb2a62b81986,"Fixed getting default encoding in get_system_username

Refs #19933.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,55a0b9c32ebae957b95a9a55846692837e2ff39b,"[4.2.x] Added stub release notes and release date for 4.2.5, 4.1.11, and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,55a0b9c32ebae957b95a9a55846692837e2ff39b,"[4.2.x] Added stub release notes and release date for 4.2.5, 4.1.11, and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,55a0b9c32ebae957b95a9a55846692837e2ff39b,"[4.2.x] Added stub release notes and release date for 4.2.5, 4.1.11, and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main",False
9c51b4dcfa0cefcb48231f4d71cafa80821f87b9,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,9bcf73d788866bc93f8248cb2e9d601ecbc4b50c,Fixed imports per isort 4.3.0.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,9bcf73d788866bc93f8248cb2e9d601ecbc4b50c,Fixed imports per isort 4.3.0.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d0a42a14c06e033922f6d51e6384cba53be887b6,"Fixed imports per isort 4.3.1.

Partially reverted 9bcf73d788866bc93f8248cb2e9d601ecbc4b50c.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,932b5bd52d8d7e9255264fdbf425e322efac0b97,"[3.2.x] Added stub release notes for 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d0a42a14c06e033922f6d51e6384cba53be887b6,"Fixed imports per isort 4.3.1.

Partially reverted 9bcf73d788866bc93f8248cb2e9d601ecbc4b50c.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,932b5bd52d8d7e9255264fdbf425e322efac0b97,"[3.2.x] Added stub release notes for 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
a665ed5179f5bbd3db95ce67286d0192eff041d8,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
d17974a287a6ea2e361daff88fcc004cbd6835fa,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d17974a287a6ea2e361daff88fcc004cbd6835fa,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d17974a287a6ea2e361daff88fcc004cbd6835fa,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
d17974a287a6ea2e361daff88fcc004cbd6835fa,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
f7c494f2506250b8cb5923714360a3642ed63e0f,a89b15628429da79dd47c04bd191de566ef7eee6,"Disentangled some parts of the admin ChangeList and ListFilter's internals. With this refactoring, the query string lookups are now processed once instead of twice and some bugs (in particular the SimpleListFilter parameter name being mistaken for a model field in some cases) are avoided.

Refs #17091.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17145 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,a89b15628429da79dd47c04bd191de566ef7eee6,"Disentangled some parts of the admin ChangeList and ListFilter's internals. With this refactoring, the query string lookups are now processed once instead of twice and some bugs (in particular the SimpleListFilter parameter name being mistaken for a model field in some cases) are avoided.

Refs #17091.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17145 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
f7c494f2506250b8cb5923714360a3642ed63e0f,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
f7c494f2506250b8cb5923714360a3642ed63e0f,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f7c494f2506250b8cb5923714360a3642ed63e0f,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,03b733d8a8f5b5d8ca0a3cc32b7e6e6c046d95e2,[2.2.x] Added stub release notes for 2.2.26 release.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,03b733d8a8f5b5d8ca0a3cc32b7e6e6c046d95e2,[2.2.x] Added stub release notes for 2.2.26 release.,False
2135637fdd5ce994de110affef9e67dffdf77277,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
2135637fdd5ce994de110affef9e67dffdf77277,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
f824655bc2c50b19d2f202d7640785caabc82787,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
f824655bc2c50b19d2f202d7640785caabc82787,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
f824655bc2c50b19d2f202d7640785caabc82787,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
f824655bc2c50b19d2f202d7640785caabc82787,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
f824655bc2c50b19d2f202d7640785caabc82787,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
f824655bc2c50b19d2f202d7640785caabc82787,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
f824655bc2c50b19d2f202d7640785caabc82787,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
f824655bc2c50b19d2f202d7640785caabc82787,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
f824655bc2c50b19d2f202d7640785caabc82787,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
f824655bc2c50b19d2f202d7640785caabc82787,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
f824655bc2c50b19d2f202d7640785caabc82787,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
f824655bc2c50b19d2f202d7640785caabc82787,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
f824655bc2c50b19d2f202d7640785caabc82787,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
f824655bc2c50b19d2f202d7640785caabc82787,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
f824655bc2c50b19d2f202d7640785caabc82787,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
f824655bc2c50b19d2f202d7640785caabc82787,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
04ac1624bdc2fa737188401757cf95ced122d26d,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
04ac1624bdc2fa737188401757cf95ced122d26d,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
04ac1624bdc2fa737188401757cf95ced122d26d,4b129ac81f4fa38004950d0b307f81d1e9b44af8,Fixed #26325 -- Made MultiPartParser ignore filenames that normalize to an empty string.,False
04ac1624bdc2fa737188401757cf95ced122d26d,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
04ac1624bdc2fa737188401757cf95ced122d26d,4b129ac81f4fa38004950d0b307f81d1e9b44af8,Fixed #26325 -- Made MultiPartParser ignore filenames that normalize to an empty string.,False
04ac1624bdc2fa737188401757cf95ced122d26d,4036d62bda0e9e9f6172943794b744a454ca49c2,"[2.2.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
04ac1624bdc2fa737188401757cf95ced122d26d,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
04ac1624bdc2fa737188401757cf95ced122d26d,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
04ac1624bdc2fa737188401757cf95ced122d26d,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
04ac1624bdc2fa737188401757cf95ced122d26d,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
04ac1624bdc2fa737188401757cf95ced122d26d,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
04ac1624bdc2fa737188401757cf95ced122d26d,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
04ac1624bdc2fa737188401757cf95ced122d26d,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
04ac1624bdc2fa737188401757cf95ced122d26d,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
04ac1624bdc2fa737188401757cf95ced122d26d,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
04ac1624bdc2fa737188401757cf95ced122d26d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
04ac1624bdc2fa737188401757cf95ced122d26d,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
04ac1624bdc2fa737188401757cf95ced122d26d,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
04ac1624bdc2fa737188401757cf95ced122d26d,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
04ac1624bdc2fa737188401757cf95ced122d26d,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
04ac1624bdc2fa737188401757cf95ced122d26d,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
04ac1624bdc2fa737188401757cf95ced122d26d,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
04ac1624bdc2fa737188401757cf95ced122d26d,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
04ac1624bdc2fa737188401757cf95ced122d26d,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
04ac1624bdc2fa737188401757cf95ced122d26d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
04ac1624bdc2fa737188401757cf95ced122d26d,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
04ac1624bdc2fa737188401757cf95ced122d26d,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
04ac1624bdc2fa737188401757cf95ced122d26d,4036d62bda0e9e9f6172943794b744a454ca49c2,"[2.2.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
04ac1624bdc2fa737188401757cf95ced122d26d,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
04ac1624bdc2fa737188401757cf95ced122d26d,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
04ac1624bdc2fa737188401757cf95ced122d26d,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
4452642f193533e288a52c02efb5bbc766a68f95,d8767c8d2510f99d586f29b9e8f66d1e02097d33,"[4.0.x] Added stub release notes for 4.0.9 and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
4452642f193533e288a52c02efb5bbc766a68f95,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4452642f193533e288a52c02efb5bbc766a68f95,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4452642f193533e288a52c02efb5bbc766a68f95,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4452642f193533e288a52c02efb5bbc766a68f95,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4452642f193533e288a52c02efb5bbc766a68f95,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4452642f193533e288a52c02efb5bbc766a68f95,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4452642f193533e288a52c02efb5bbc766a68f95,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4452642f193533e288a52c02efb5bbc766a68f95,d8767c8d2510f99d586f29b9e8f66d1e02097d33,"[4.0.x] Added stub release notes for 4.0.9 and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
4452642f193533e288a52c02efb5bbc766a68f95,d8767c8d2510f99d586f29b9e8f66d1e02097d33,"[4.0.x] Added stub release notes for 4.0.9 and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
4452642f193533e288a52c02efb5bbc766a68f95,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4452642f193533e288a52c02efb5bbc766a68f95,d8767c8d2510f99d586f29b9e8f66d1e02097d33,"[4.0.x] Added stub release notes for 4.0.9 and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
c238701859a52d584f349cce15d56c8e8137c52b,4b3716e6540e06874b9053b59e39cd76fb48b677,"[1.11.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
c238701859a52d584f349cce15d56c8e8137c52b,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
c238701859a52d584f349cce15d56c8e8137c52b,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
c238701859a52d584f349cce15d56c8e8137c52b,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
c238701859a52d584f349cce15d56c8e8137c52b,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
c238701859a52d584f349cce15d56c8e8137c52b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
c238701859a52d584f349cce15d56c8e8137c52b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
c238701859a52d584f349cce15d56c8e8137c52b,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c238701859a52d584f349cce15d56c8e8137c52b,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c238701859a52d584f349cce15d56c8e8137c52b,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c238701859a52d584f349cce15d56c8e8137c52b,4b3716e6540e06874b9053b59e39cd76fb48b677,"[1.11.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
c238701859a52d584f349cce15d56c8e8137c52b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
c238701859a52d584f349cce15d56c8e8137c52b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
c238701859a52d584f349cce15d56c8e8137c52b,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,64f5ab67a57f7373cee2cc675ae03d74e878b645,"Changed some URL conf regexes to rawstrings for consistency

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8172 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,64f5ab67a57f7373cee2cc675ae03d74e878b645,"Changed some URL conf regexes to rawstrings for consistency

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8172 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d5d8942a160685c403d381a279e72e09de5489a9,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a1e8278c46418bde24c86a65443b0674bae65e2,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a1e8278c46418bde24c86a65443b0674bae65e2,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,15b711b5ee9ce1ddd01cf88b2bbbec4a6cbec648,Deprecated TEMPLATE_DEBUG setting.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,63143d5d9d4f0f4dc6a4948fca24d904e72f3d35,"Fixed the test added for #9005 to use the e.args[0] instead of e.message. Exceptions didn't have 'message' before Python 2.5, and it was deprecated as of Python 2.6. args[0] works without error or DeprecationWarning from Python 2.3 through 2.6.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,a3e783fe11dd25bbf84bfb6201186566ed473506,"Deprecated passing a Context to a generic Template.render.

A deprecation path is required because the return type of
django.template.loader.get_template changed during the
multiple template engines refactor.

test_csrf_token_in_404 was incorrect: it tested the case when the
hardcoded template was rendered, and that template doesn't depend on the
CSRF token. This commit makes it test the case when a custom template is
rendered.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,687d2e967dbc7c2ba29a90c74becc539d3ac2b9d,"Fixed #19827 -- Kept stacktrace in defaulttags exception reraising

Thanks Kronuz for the report and the initial patch.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,624caace17dbb9e22f5a4c6c08937d68cbdbb066,"Fixed #9005: don't wig out when reversing a URL if SETTINGS_MODULE isn't set. While I was there, I fixed #10599 by re-raising the original error message, which is almost always a better idea. Thanks, Eric

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,d3a982556d655adcf4ba331d2def685d8249170f,Deprecated TEMPLATE_STRING_IF_INVALID.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,9eeb788cfb70d07d87b3d07434d6a149ab2d7471,"Refactored getting the list of template loaders.

This provides the opportunity to move utility functions specific to the
Django Template Language outside of django.template.loader.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
1a1e8278c46418bde24c86a65443b0674bae65e2,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,15b711b5ee9ce1ddd01cf88b2bbbec4a6cbec648,Deprecated TEMPLATE_DEBUG setting.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,63143d5d9d4f0f4dc6a4948fca24d904e72f3d35,"Fixed the test added for #9005 to use the e.args[0] instead of e.message. Exceptions didn't have 'message' before Python 2.5, and it was deprecated as of Python 2.6. args[0] works without error or DeprecationWarning from Python 2.3 through 2.6.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,a3e783fe11dd25bbf84bfb6201186566ed473506,"Deprecated passing a Context to a generic Template.render.

A deprecation path is required because the return type of
django.template.loader.get_template changed during the
multiple template engines refactor.

test_csrf_token_in_404 was incorrect: it tested the case when the
hardcoded template was rendered, and that template doesn't depend on the
CSRF token. This commit makes it test the case when a custom template is
rendered.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,687d2e967dbc7c2ba29a90c74becc539d3ac2b9d,"Fixed #19827 -- Kept stacktrace in defaulttags exception reraising

Thanks Kronuz for the report and the initial patch.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,624caace17dbb9e22f5a4c6c08937d68cbdbb066,"Fixed #9005: don't wig out when reversing a URL if SETTINGS_MODULE isn't set. While I was there, I fixed #10599 by re-raising the original error message, which is almost always a better idea. Thanks, Eric

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,d3a982556d655adcf4ba331d2def685d8249170f,Deprecated TEMPLATE_STRING_IF_INVALID.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,9eeb788cfb70d07d87b3d07434d6a149ab2d7471,"Refactored getting the list of template loaders.

This provides the opportunity to move utility functions specific to the
Django Template Language outside of django.template.loader.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
1a1e8278c46418bde24c86a65443b0674bae65e2,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,a7e89fe77683af562fa00143cd1af32e20425797,"[3.2.x] Added stub release notes for 3.2.12 and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,a7e89fe77683af562fa00143cd1af32e20425797,"[3.2.x] Added stub release notes for 3.2.12 and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a1e8278c46418bde24c86a65443b0674bae65e2,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
1a1e8278c46418bde24c86a65443b0674bae65e2,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
1a1e8278c46418bde24c86a65443b0674bae65e2,a7e89fe77683af562fa00143cd1af32e20425797,"[3.2.x] Added stub release notes for 3.2.12 and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,a7e89fe77683af562fa00143cd1af32e20425797,"[3.2.x] Added stub release notes for 3.2.12 and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
1a1e8278c46418bde24c86a65443b0674bae65e2,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
9f83fc2f66f5a0bac7c291aec55df66050bb6991,5fc9a1b8bd3eb13b7de86ed82ad281d34fa02e8c,"[1.8.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
9f83fc2f66f5a0bac7c291aec55df66050bb6991,e86b5a5aab4d322ad1c4e12a8eec1bab8338b6d5,"[1.8.x] Added stub release notes for 1.8.7.

Backport of d49b36e485d201dd230a01f6cb8ea6e8e4fddb49 from master",False
9f83fc2f66f5a0bac7c291aec55df66050bb6991,5fc9a1b8bd3eb13b7de86ed82ad281d34fa02e8c,"[1.8.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
9f83fc2f66f5a0bac7c291aec55df66050bb6991,e86b5a5aab4d322ad1c4e12a8eec1bab8338b6d5,"[1.8.x] Added stub release notes for 1.8.7.

Backport of d49b36e485d201dd230a01f6cb8ea6e8e4fddb49 from master",False
82c9169077a066995e3b00aac551bf1c8a89d98a,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
82c9169077a066995e3b00aac551bf1c8a89d98a,71820721a19f5628b3176f16813d47378cb2c3cb,Added stub release notes for 1.7.6.,False
82c9169077a066995e3b00aac551bf1c8a89d98a,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
82c9169077a066995e3b00aac551bf1c8a89d98a,71820721a19f5628b3176f16813d47378cb2c3cb,Added stub release notes for 1.7.6.,False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,77ab11be452d2da50925d5d2e3eed1b96ba7eca0,"Refs #2333 - Added 'test' target to django-admin script. Includes addition of --verbosity and --noinput options to django-admin, and a new TEST_RUNNER setting to control the tool used to execute tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,8c705f02a9fa7c912eb5beb907f767936d36c68c,"Added command line flag to disable use of auto-reloader on development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,00c6acaaf30adfb77dd38bf2064ed33d314258d9,"Fixed #360 -- runserver now takes optional 'ip:port' in addition to 'port'. Thanks, benno@jeamland.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,77ab11be452d2da50925d5d2e3eed1b96ba7eca0,"Refs #2333 - Added 'test' target to django-admin script. Includes addition of --verbosity and --noinput options to django-admin, and a new TEST_RUNNER setting to control the tool used to execute tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,8c705f02a9fa7c912eb5beb907f767936d36c68c,"Added command line flag to disable use of auto-reloader on development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,00c6acaaf30adfb77dd38bf2064ed33d314258d9,"Fixed #360 -- runserver now takes optional 'ip:port' in addition to 'port'. Thanks, benno@jeamland.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,f07e5d4f5df5ca9ca3366d7ecc4b01c490c13198,"Fixed #627 -- BACKWARDS-INCOMPATIBLE CHANGE. Admin is now an app, not a middleware. See BackwardsIncompatibleChanges for a full list of changes and information on how to update your code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@948 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,f07e5d4f5df5ca9ca3366d7ecc4b01c490c13198,"Fixed #627 -- BACKWARDS-INCOMPATIBLE CHANGE. Admin is now an app, not a middleware. See BackwardsIncompatibleChanges for a full list of changes and information on how to update your code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@948 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da85d76fd6ca846f3b0ff414e042ddb5e62e2e69,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,602b7bca7aa0b94bb38ba16735635959e04d91ab,"Fixed #6082: file-based sessions now verify that SESSION_FILE_PATH is a valid storage location, and raise ImproperlyConfigured if not. Thanks, jags78.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,602b7bca7aa0b94bb38ba16735635959e04d91ab,"Fixed #6082: file-based sessions now verify that SESSION_FILE_PATH is a valid storage location, and raise ImproperlyConfigured if not. Thanks, jags78.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
194566480b15cf4e294d3f03ff587019b74044b2,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b45c377f8f488955e0c7069cad3f3dd21910b071,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,80f08dbdbc1f9c8b4ed75298955016feb697c4a1,"[1.7.x] Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/
Backport of 6ca6c36f82b from master.",False
e63363f8e075fa8d66326ad6a1cc3391cc95cd97,80f08dbdbc1f9c8b4ed75298955016feb697c4a1,"[1.7.x] Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/
Backport of 6ca6c36f82b from master.",False
aee48854a164382c655acb9f18b3c06c3d238e81,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,1687b025dc2a03e9ef111b8fd3db63fce48b77b7,"Part 3 of pedant day: replaced all tabs in Django with spaces.  Python the way Guido intended it, baby!


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3415 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,1687b025dc2a03e9ef111b8fd3db63fce48b77b7,"Part 3 of pedant day: replaced all tabs in Django with spaces.  Python the way Guido intended it, baby!


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3415 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aee48854a164382c655acb9f18b3c06c3d238e81,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f588c444fd94e07d202cbc207ac32ec2dfed49e6,"[5.0.x] Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f588c444fd94e07d202cbc207ac32ec2dfed49e6,"[5.0.x] Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f588c444fd94e07d202cbc207ac32ec2dfed49e6,"[5.0.x] Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,f588c444fd94e07d202cbc207ac32ec2dfed49e6,"[5.0.x] Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
16a8fe18a3b81250f4fa57e3f93f0599dc4895bc,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,6ca6c36f82b97eafeada61384b2e2f1d0587da86,"Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/",False
5447709a571cd5d95971f1d5d21d4a7edcf85bbd,6ca6c36f82b97eafeada61384b2e2f1d0587da86,"Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/",False
8e7a44e4bec0f11474699c3111a5e0a45afe7f49,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8e7a44e4bec0f11474699c3111a5e0a45afe7f49,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8e7a44e4bec0f11474699c3111a5e0a45afe7f49,8c660fb59239828583f17cdede3b64f208b8752c,"Fixed CVE-2023-23969 -- Prevented DoS with pathological values for Accept-Language.

The parsed values of Accept-Language headers are cached in order to
avoid repetitive parsing. This leads to a potential denial-of-service
vector via excessive memory usage if the raw value of Accept-Language
headers is very large.

Accept-Language headers are now limited to a maximum length in order
to avoid this issue.",False
8e7a44e4bec0f11474699c3111a5e0a45afe7f49,8c660fb59239828583f17cdede3b64f208b8752c,"Fixed CVE-2023-23969 -- Prevented DoS with pathological values for Accept-Language.

The parsed values of Accept-Language headers are cached in order to
avoid repetitive parsing. This leads to a potential denial-of-service
vector via excessive memory usage if the raw value of Accept-Language
headers is very large.

Accept-Language headers are now limited to a maximum length in order
to avoid this issue.",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,821d8aaaaad3f4d11f29eb54a7812f363b5f07cb,"Fixed #15266 -- Applied login_required decorator to password_change_done view. Thanks, lasko.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,ec193224d3580fbcfa78da96a6a7fc4343929dd8,"Fixed #12534 -- Loosened the the security check for ""next"" redirects after logins slightly to allow paths that contain spaces. Thanks for the patch, jnns and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15702 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,bcd63cbfb0590a2e2bed3e4beab3f467279ad3db,"Fixed #6160, #9111 -- Consistently apply conditional_escape to form errors and labels when outputing them as HTML.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9365 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,4c457bca85b5410c47860ee4c5df0b47d48f2603,"Fixed #16789 -- Added names to URLs in convenience contrib.auth urls.py.

Thanks wim AT go2people DOT nl for the report, cmheisel for the patch and
fcurella for reviewing it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16901 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,bb00b2839980145984c487410fc65fbc0c94be3d,"Added login_url argument to login_required decorator. Thanks mhlakhani and ericflo for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13723 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,abb1c508cc95d5cf55e8ab63d6bafe17ac095f95,"Tests for password change process. Thanks, Mike Richardson. Fixed #8402.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8497 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,821d8aaaaad3f4d11f29eb54a7812f363b5f07cb,"Fixed #15266 -- Applied login_required decorator to password_change_done view. Thanks, lasko.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,ec193224d3580fbcfa78da96a6a7fc4343929dd8,"Fixed #12534 -- Loosened the the security check for ""next"" redirects after logins slightly to allow paths that contain spaces. Thanks for the patch, jnns and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15702 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,bcd63cbfb0590a2e2bed3e4beab3f467279ad3db,"Fixed #6160, #9111 -- Consistently apply conditional_escape to form errors and labels when outputing them as HTML.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9365 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,4c457bca85b5410c47860ee4c5df0b47d48f2603,"Fixed #16789 -- Added names to URLs in convenience contrib.auth urls.py.

Thanks wim AT go2people DOT nl for the report, cmheisel for the patch and
fcurella for reviewing it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16901 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,bb00b2839980145984c487410fc65fbc0c94be3d,"Added login_url argument to login_required decorator. Thanks mhlakhani and ericflo for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13723 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,abb1c508cc95d5cf55e8ab63d6bafe17ac095f95,"Tests for password change process. Thanks, Mike Richardson. Fixed #8402.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8497 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,fce1fa0f7fb984d4e76eb81ffc3cb9826046c3b5,[1.5.X] Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,fce1fa0f7fb984d4e76eb81ffc3cb9826046c3b5,[1.5.X] Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,c98f446c188596d4ba6de71d1b77b4a6c5c2a007,[3.2.x] Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,c98f446c188596d4ba6de71d1b77b4a6c5c2a007,[3.2.x] Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
8d2f7cff76200cbd2337b2cf1707e383eb1fb54b,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
3394fc6132436eca89e997083bae9985fb7e761e,acb20016c0567876e7fc8144ecbe77905ee8388a,"Fixed #6668 -- Optimized utils.text wrap function

This fixes a failing test after applying an optimization of the
utils.text.wrap function by user SmileyChris.",False
3394fc6132436eca89e997083bae9985fb7e761e,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,5a468b4c085900ba28b7f8dfa2cb0b50d7699aa6,Fixed #32859 -- Simplified compress_string() by using gzip.compress().,False
3394fc6132436eca89e997083bae9985fb7e761e,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
3394fc6132436eca89e997083bae9985fb7e761e,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
3394fc6132436eca89e997083bae9985fb7e761e,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
3394fc6132436eca89e997083bae9985fb7e761e,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
3394fc6132436eca89e997083bae9985fb7e761e,9108696a7553123f57c5d42f9c4a90cad44532f4,"Refs #19705 -- Changed gzip modification times to 0.

This makes gzip output deterministic, which allows
ConditionalGetMiddleware to reliably compare ETags on gzipped
content (views using the gzip_page() decorator in particular).",False
3394fc6132436eca89e997083bae9985fb7e761e,a6f429e37e7fe9cf8801c8fbce4c40af7e0cec0c,"Added consistent support for double- and single-quote delimiters in templates.

Some template filters and tags understood single-quoted arguments, others
didn't. This makes everything consistent. Based on a patch from akaihola.

Fixed #7295.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10118 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,b906c3db63deb5ee58ab91fe6a7144ff6f8b6300,Removed duplicate lines in slugify().,False
3394fc6132436eca89e997083bae9985fb7e761e,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,c8cd8b80aa90f463814e1957d26e4a11f2f94414,"Fixed #12119. Changed smart_split to stop splitting on whitespace in quotes. Thanks, emulbreh.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12581 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
3394fc6132436eca89e997083bae9985fb7e761e,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
3394fc6132436eca89e997083bae9985fb7e761e,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
3394fc6132436eca89e997083bae9985fb7e761e,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,acb20016c0567876e7fc8144ecbe77905ee8388a,"Fixed #6668 -- Optimized utils.text wrap function

This fixes a failing test after applying an optimization of the
utils.text.wrap function by user SmileyChris.",False
3394fc6132436eca89e997083bae9985fb7e761e,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,5a468b4c085900ba28b7f8dfa2cb0b50d7699aa6,Fixed #32859 -- Simplified compress_string() by using gzip.compress().,False
3394fc6132436eca89e997083bae9985fb7e761e,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
3394fc6132436eca89e997083bae9985fb7e761e,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
3394fc6132436eca89e997083bae9985fb7e761e,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
3394fc6132436eca89e997083bae9985fb7e761e,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
3394fc6132436eca89e997083bae9985fb7e761e,9108696a7553123f57c5d42f9c4a90cad44532f4,"Refs #19705 -- Changed gzip modification times to 0.

This makes gzip output deterministic, which allows
ConditionalGetMiddleware to reliably compare ETags on gzipped
content (views using the gzip_page() decorator in particular).",False
3394fc6132436eca89e997083bae9985fb7e761e,a6f429e37e7fe9cf8801c8fbce4c40af7e0cec0c,"Added consistent support for double- and single-quote delimiters in templates.

Some template filters and tags understood single-quoted arguments, others
didn't. This makes everything consistent. Based on a patch from akaihola.

Fixed #7295.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10118 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,b906c3db63deb5ee58ab91fe6a7144ff6f8b6300,Removed duplicate lines in slugify().,False
3394fc6132436eca89e997083bae9985fb7e761e,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
3394fc6132436eca89e997083bae9985fb7e761e,c8cd8b80aa90f463814e1957d26e4a11f2f94414,"Fixed #12119. Changed smart_split to stop splitting on whitespace in quotes. Thanks, emulbreh.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12581 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
3394fc6132436eca89e997083bae9985fb7e761e,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
3394fc6132436eca89e997083bae9985fb7e761e,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
3394fc6132436eca89e997083bae9985fb7e761e,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
3394fc6132436eca89e997083bae9985fb7e761e,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3394fc6132436eca89e997083bae9985fb7e761e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9305c0e12d43c4df999c3301a1f0c742264a657e,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9305c0e12d43c4df999c3301a1f0c742264a657e,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ec808e807ad711b993f199f6b4165ac6d0e1125b,"Fixed urlize regression with entities in query strings

Refs #22267.
Thanks Shai Berger for spotting the issue and Tim Graham for the
initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c12c225a66df0c48bc00cc4b418c383d5516e668,"Fixed a bunch of errors detected by pychecker -- unneeded imports and shadows of builtin variable names

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,c28beb429107956f8bde8053936502124c964bec,Refactored and commented strip_tags utility,False
7285644640f085f41d60ab0c8ae4e9153f0485db,1f9874d4ca3e7376036646aedf6ac3060f22fd69,"Refs #33245 -- Minor edits to django.utils.html.urlize() changes.

Follow up to ad81b606a2b5276397460a654fc7ad901a54b91e.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8c709d79cbd1a7bb975f58090c17a1178a0efb80,Fixed #17419 -- Added json_tag template filter.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,44767f2caf028d89e1a283d04bb552d0e18bb936,Use unicode.translate to speed up js escaping.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,6ae1b04fb584db0fdb22b8e287784c4ed3ac62ac,Fixed #27900 -- Made escapejs escape backticks for use in ES6 template literals.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,4b8a1d2c0d1a8c5107f3aef01597db78d2a2a5ce,"Fixed #22267 -- Fixed unquote/quote in smart_urlquote

Thanks Md. Enzam Hossain for the report and initial patch, and
Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4b78420d250df5e21763633871e486ee76728cc4,"Fixed CVE-2019-14233 -- Prevented excessive HTMLParser recursion in strip_tags() when handling incomplete HTML entities.

Thanks to Guido Vranken for initial report.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ad81b606a2b5276397460a654fc7ad901a54b91e,"Fixed #33245 -- Made django.utils.html.urlize() thread-safe.

Regression in e567670b1abe61af4acfaa6a6a7e92a7acfa8b00.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
7285644640f085f41d60ab0c8ae4e9153f0485db,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,abb636c1af7b2fd00a624985f60b7aff07374580,Improved performance of utils.html.escape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ec808e807ad711b993f199f6b4165ac6d0e1125b,"Fixed urlize regression with entities in query strings

Refs #22267.
Thanks Shai Berger for spotting the issue and Tim Graham for the
initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c12c225a66df0c48bc00cc4b418c383d5516e668,"Fixed a bunch of errors detected by pychecker -- unneeded imports and shadows of builtin variable names

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
7285644640f085f41d60ab0c8ae4e9153f0485db,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,c28beb429107956f8bde8053936502124c964bec,Refactored and commented strip_tags utility,False
7285644640f085f41d60ab0c8ae4e9153f0485db,1f9874d4ca3e7376036646aedf6ac3060f22fd69,"Refs #33245 -- Minor edits to django.utils.html.urlize() changes.

Follow up to ad81b606a2b5276397460a654fc7ad901a54b91e.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8c709d79cbd1a7bb975f58090c17a1178a0efb80,Fixed #17419 -- Added json_tag template filter.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,44767f2caf028d89e1a283d04bb552d0e18bb936,Use unicode.translate to speed up js escaping.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,6ae1b04fb584db0fdb22b8e287784c4ed3ac62ac,Fixed #27900 -- Made escapejs escape backticks for use in ES6 template literals.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,4b8a1d2c0d1a8c5107f3aef01597db78d2a2a5ce,"Fixed #22267 -- Fixed unquote/quote in smart_urlquote

Thanks Md. Enzam Hossain for the report and initial patch, and
Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,4b78420d250df5e21763633871e486ee76728cc4,"Fixed CVE-2019-14233 -- Prevented excessive HTMLParser recursion in strip_tags() when handling incomplete HTML entities.

Thanks to Guido Vranken for initial report.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,ad81b606a2b5276397460a654fc7ad901a54b91e,"Fixed #33245 -- Made django.utils.html.urlize() thread-safe.

Regression in e567670b1abe61af4acfaa6a6a7e92a7acfa8b00.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
7285644640f085f41d60ab0c8ae4e9153f0485db,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,abb636c1af7b2fd00a624985f60b7aff07374580,Improved performance of utils.html.escape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7285644640f085f41d60ab0c8ae4e9153f0485db,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7285644640f085f41d60ab0c8ae4e9153f0485db,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
7285644640f085f41d60ab0c8ae4e9153f0485db,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7285644640f085f41d60ab0c8ae4e9153f0485db,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7285644640f085f41d60ab0c8ae4e9153f0485db,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,04c155fd06484058d5677f61f6931f7f5da0922f,"Fixed #3017 -- Added tests for humanize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,018ece8dc8d564b18d35b7bcd468eaf619fa1385,"Negligible formatting change to humanize tests.py (from [4880])

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4892 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,3cf8502d35cdfbb4f868a848b1f38dcc275f6be1,"Fixed #4976 -- Stopped humanize template tags to raise a TypeError if passed a value of ``None``. Thanks, Simon G. and Adam Vandenberg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15000 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,64e16c094b3b4f551798f3dbff496fe5c6798f3b,"Add a test for the intcomma regression described in #16404/#16562, fixed in r16726. Refs #16404.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16736 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,7e6ad76b24a003bfb4ced8d9b3b22a46c1590e02,Fixed #19282 -- Restored ability to pass Decimals to intcomma filter,False
c1171ffbd570db90ca206c30f8e2b9f691243820,a0157da26f143c2b78e98837d1ef5501beaba776,"Fixed #3518: Added unit tests for the humanize filters. Major thanks to Jyrki Pulliainen for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4571 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,04c155fd06484058d5677f61f6931f7f5da0922f,"Fixed #3017 -- Added tests for humanize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,018ece8dc8d564b18d35b7bcd468eaf619fa1385,"Negligible formatting change to humanize tests.py (from [4880])

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4892 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,3cf8502d35cdfbb4f868a848b1f38dcc275f6be1,"Fixed #4976 -- Stopped humanize template tags to raise a TypeError if passed a value of ``None``. Thanks, Simon G. and Adam Vandenberg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15000 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,64e16c094b3b4f551798f3dbff496fe5c6798f3b,"Add a test for the intcomma regression described in #16404/#16562, fixed in r16726. Refs #16404.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16736 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,7e6ad76b24a003bfb4ced8d9b3b22a46c1590e02,Fixed #19282 -- Restored ability to pass Decimals to intcomma filter,False
c1171ffbd570db90ca206c30f8e2b9f691243820,a0157da26f143c2b78e98837d1ef5501beaba776,"Fixed #3518: Added unit tests for the humanize filters. Major thanks to Jyrki Pulliainen for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4571 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
c1171ffbd570db90ca206c30f8e2b9f691243820,9dc345643e94f3a48d58fe7547fbc88ce8dab6e9,"[3.2.x] Added stub release notes 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
c1171ffbd570db90ca206c30f8e2b9f691243820,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
c1171ffbd570db90ca206c30f8e2b9f691243820,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
c1171ffbd570db90ca206c30f8e2b9f691243820,9dc345643e94f3a48d58fe7547fbc88ce8dab6e9,"[3.2.x] Added stub release notes 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
c1171ffbd570db90ca206c30f8e2b9f691243820,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c1171ffbd570db90ca206c30f8e2b9f691243820,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
c1171ffbd570db90ca206c30f8e2b9f691243820,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
7b7b909579c8311c140c89b8a9431bf537febf93,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
7b7b909579c8311c140c89b8a9431bf537febf93,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
7b7b909579c8311c140c89b8a9431bf537febf93,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7b7b909579c8311c140c89b8a9431bf537febf93,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7b7b909579c8311c140c89b8a9431bf537febf93,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
7b7b909579c8311c140c89b8a9431bf537febf93,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7b7b909579c8311c140c89b8a9431bf537febf93,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7b7b909579c8311c140c89b8a9431bf537febf93,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
7b7b909579c8311c140c89b8a9431bf537febf93,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7b7b909579c8311c140c89b8a9431bf537febf93,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7b7b909579c8311c140c89b8a9431bf537febf93,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
7b7b909579c8311c140c89b8a9431bf537febf93,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
7b7b909579c8311c140c89b8a9431bf537febf93,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
7b7b909579c8311c140c89b8a9431bf537febf93,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
7b7b909579c8311c140c89b8a9431bf537febf93,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
7b7b909579c8311c140c89b8a9431bf537febf93,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
7b7b909579c8311c140c89b8a9431bf537febf93,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
7b7b909579c8311c140c89b8a9431bf537febf93,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
7b7b909579c8311c140c89b8a9431bf537febf93,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
7b7b909579c8311c140c89b8a9431bf537febf93,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7b7b909579c8311c140c89b8a9431bf537febf93,7285644640f085f41d60ab0c8ae4e9153f0485db,"[5.0.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
7b7b909579c8311c140c89b8a9431bf537febf93,7285644640f085f41d60ab0c8ae4e9153f0485db,"[5.0.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3b48fe413f91612fb8c43fe9d489860d10c84bf7,"[4.1.x] Added stub release notes for 4.1.10 and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3b48fe413f91612fb8c43fe9d489860d10c84bf7,"[4.1.x] Added stub release notes for 4.1.10 and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3b48fe413f91612fb8c43fe9d489860d10c84bf7,"[4.1.x] Added stub release notes for 4.1.10 and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
beb3f3d55940d9aa7198bf9d424ab74e873aec3d,3b48fe413f91612fb8c43fe9d489860d10c84bf7,"[4.1.x] Added stub release notes for 4.1.10 and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
1ca63a66ef3163149ad822701273e8a1844192c2,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
1ca63a66ef3163149ad822701273e8a1844192c2,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ca63a66ef3163149ad822701273e8a1844192c2,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
fc6d147a63f89795dbcdecb0559256470fff4380,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
fc6d147a63f89795dbcdecb0559256470fff4380,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,601107524523bca02376a0ddc1a06c6fdb8f22f3,"[1.6.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,601107524523bca02376a0ddc1a06c6fdb8f22f3,"[1.6.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,72e0b033662faa11bb7f516f18a132728aa0ae28,"[1.6.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,d9061c01a975c3313a815f793cd773d3e657c3cf,"Fixed #5964 -- Added unicode-aware versions of urlunquote and urlunquote_plus.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,243d0bec1954ad7fab44625f1440a8ce580df26c,"Fixed #15617 - CSRF referer checking too strict

Thanks to adam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15840 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,6fb4f6e2996cf442b614a073f30839419d9db030,"Fixed #13765 - 'safe' parameter for urlencode filter

Thanks to KyleMac for the suggestion and SmileyChris for the patch

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13849 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,f2303b6f7aa744f8edf4ecf28b7c88db222386f8,"Fixed #4402 -- Modified test client to allow multi-valued inputs on GET requests. Thanks for the suggestion, eddymul@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,a2f2a399566dd68ce7e312fff5a5ba857066797d,Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
5510f070711540aaa8d3707776cd77494e688ef9,d9061c01a975c3313a815f793cd773d3e657c3cf,"Fixed #5964 -- Added unicode-aware versions of urlunquote and urlunquote_plus.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,243d0bec1954ad7fab44625f1440a8ce580df26c,"Fixed #15617 - CSRF referer checking too strict

Thanks to adam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15840 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,6fb4f6e2996cf442b614a073f30839419d9db030,"Fixed #13765 - 'safe' parameter for urlencode filter

Thanks to KyleMac for the suggestion and SmileyChris for the patch

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13849 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,f2303b6f7aa744f8edf4ecf28b7c88db222386f8,"Fixed #4402 -- Modified test client to allow multi-valued inputs on GET requests. Thanks for the suggestion, eddymul@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5510f070711540aaa8d3707776cd77494e688ef9,a2f2a399566dd68ce7e312fff5a5ba857066797d,Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
5510f070711540aaa8d3707776cd77494e688ef9,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
5510f070711540aaa8d3707776cd77494e688ef9,79594b40c087c19fecc72af042c835b11a519b78,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,72e0b033662faa11bb7f516f18a132728aa0ae28,"[1.6.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,72e0b033662faa11bb7f516f18a132728aa0ae28,"[1.6.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
5510f070711540aaa8d3707776cd77494e688ef9,79594b40c087c19fecc72af042c835b11a519b78,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
5510f070711540aaa8d3707776cd77494e688ef9,72e0b033662faa11bb7f516f18a132728aa0ae28,"[1.6.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,93974e00d35a4bb14a4322009dfcdf6a987cca83,"Fixed #2148 -- Now escaping ForeignKey fields correctly in Django admin change-list pages. Thanks, rushman@mail.ru

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3124 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,3da371625272edb5af43446c32cbc7027223078d,"Fixed #10348: ChangeList no longer overwrites a select_related provided by `ModelAdmin.queryset()`.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10782 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,93974e00d35a4bb14a4322009dfcdf6a987cca83,"Fixed #2148 -- Now escaping ForeignKey fields correctly in Django admin change-list pages. Thanks, rushman@mail.ru

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3124 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a9cf3d23724ff6918103e86aa863eadd1fab811d,3da371625272edb5af43446c32cbc7027223078d,"Fixed #10348: ChangeList no longer overwrites a select_related provided by `ModelAdmin.queryset()`.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10782 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,2c4fe761a0e2b28e2c5c3b4bc506ee06824a443d,Fixed #20593 -- Allow blank passwords in check_password() and set_password(),False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,2c4fe761a0e2b28e2c5c3b4bc506ee06824a443d,Fixed #20593 -- Allow blank passwords in check_password() and set_password(),False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,8759778185d0539bf9c11e3fda497a9486b9acab,"Fixed #20675 -- `check_password` should work when no password is specified.

The regression was introduced by 2c4fe761a. refs #20593.",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
156d3186c96e3ec2ca73b8b25dc2ef366e38df14,8759778185d0539bf9c11e3fda497a9486b9acab,"Fixed #20675 -- `check_password` should work when no password is specified.

The regression was introduced by 2c4fe761a. refs #20593.",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,79f368764295df109a37192f6182fb6f361d85b5,"[4.2.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
d0a82e26a74940bf0c78204933c3bdd6a283eb88,79f368764295df109a37192f6182fb6f361d85b5,"[4.2.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
3c733c78d6f8e50296d6e248968b6516c92a53ca,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,273dc550a4eccdad958541f456332312b3369504,"Fixed #20462 -- null/non-string regex lookups are now consistent

Thanks to noirbizarre for the report and initial patch.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,f758bdab5eec3e615598948dd5bcf9bb7b910c9d,"Fixed #18271 -- Changed stage at which TransactionTestCase flushes DB tables.

Previously, the flush was done before the test case execution and now
it is performed after it.

Other changes to the testing infrastructure include:

* TransactionTestCase now doesn't reset autoincrement sequences either
  (previous behavior can achieved by using `reset_sequences`.)
  With this, no implicit such reset is performed by any of the provided
  TestCase classes.

* New ordering of test cases: All unittest tes cases are run first and
  doctests are run at the end.

THse changes could be backward-incompatible with test cases that relied
on some kind of state being preserved between tests. Please read the
relevant sections of the release notes and testing documentation for
further details.

Thanks Andreas Pelme for the initial patch. Karen Tracey and Anssi
Kääriäinen for the feedback and Anssi for reviewing.

This also fixes #12408.",True
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,39d95fb6ada99c59d47fa0eae6d3128abafe2d58,"Fixed #24092 -- Widened base field support for ArrayField.

Several issues resolved here, following from a report that a base_field
of GenericIpAddressField was failing.

We were using get_prep_value instead of get_db_prep_value in ArrayField
which was bypassing any extra modifications to the value being made in
the base field's get_db_prep_value. Changing this broke datetime
support, so the postgres backend has gained the relevant operation
methods to send dates/times/datetimes directly to the db backend instead
of casting them to strings. Similarly, a new database feature has been
added allowing the uuid to be passed directly to the backend, as we do
with timedeltas.

On the other side, psycopg2 expects an Inet() instance for IP address
fields, so we add a value_to_db_ipaddress method to wrap the strings on
postgres. We also have to manually add a database adapter to psycopg2,
as we do not wish to use the built in adapter which would turn
everything into Inet() instances.

Thanks to smclenithan for the report.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,65246de7b1d70d25831ab394c4f4a75813f629fe,Fixed #24031 -- Added CASE expressions to the ORM.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,f0a68c25118786d47041d0a435b2afa953be3c86,Fixed #28702 -- Made query lookups for CIText fields use citext.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,d7b2aa24f75434c2ce50100cfef3586071e0747a,Fixed #28982 -- Simplified code with and/or.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,3df72660560730393fc958700d2a3ab975c4b361,"Fixed #3575: use UPPER() instead ILIKE for postgres case-insensitive comparisons.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,661316b066923493ff91d6d2aa92e463f595a6b1,"Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,273dc550a4eccdad958541f456332312b3369504,"Fixed #20462 -- null/non-string regex lookups are now consistent

Thanks to noirbizarre for the report and initial patch.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,f758bdab5eec3e615598948dd5bcf9bb7b910c9d,"Fixed #18271 -- Changed stage at which TransactionTestCase flushes DB tables.

Previously, the flush was done before the test case execution and now
it is performed after it.

Other changes to the testing infrastructure include:

* TransactionTestCase now doesn't reset autoincrement sequences either
  (previous behavior can achieved by using `reset_sequences`.)
  With this, no implicit such reset is performed by any of the provided
  TestCase classes.

* New ordering of test cases: All unittest tes cases are run first and
  doctests are run at the end.

THse changes could be backward-incompatible with test cases that relied
on some kind of state being preserved between tests. Please read the
relevant sections of the release notes and testing documentation for
further details.

Thanks Andreas Pelme for the initial patch. Karen Tracey and Anssi
Kääriäinen for the feedback and Anssi for reviewing.

This also fixes #12408.",True
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,39d95fb6ada99c59d47fa0eae6d3128abafe2d58,"Fixed #24092 -- Widened base field support for ArrayField.

Several issues resolved here, following from a report that a base_field
of GenericIpAddressField was failing.

We were using get_prep_value instead of get_db_prep_value in ArrayField
which was bypassing any extra modifications to the value being made in
the base field's get_db_prep_value. Changing this broke datetime
support, so the postgres backend has gained the relevant operation
methods to send dates/times/datetimes directly to the db backend instead
of casting them to strings. Similarly, a new database feature has been
added allowing the uuid to be passed directly to the backend, as we do
with timedeltas.

On the other side, psycopg2 expects an Inet() instance for IP address
fields, so we add a value_to_db_ipaddress method to wrap the strings on
postgres. We also have to manually add a database adapter to psycopg2,
as we do not wish to use the built in adapter which would turn
everything into Inet() instances.

Thanks to smclenithan for the report.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,65246de7b1d70d25831ab394c4f4a75813f629fe,Fixed #24031 -- Added CASE expressions to the ORM.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,f0a68c25118786d47041d0a435b2afa953be3c86,Fixed #28702 -- Made query lookups for CIText fields use citext.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,d7b2aa24f75434c2ce50100cfef3586071e0747a,Fixed #28982 -- Simplified code with and/or.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,0f6946495a8ec955b471ca1baaf408ceb53d4796,"Fixed #31685 -- Added support for updating conflicts to QuerySet.bulk_create().

Thanks Florian Apolloner, Chris Jerdonek, Hannes Ljungberg, Nick Pope,
and Mariusz Felisiak for reviews.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,3df72660560730393fc958700d2a3ab975c4b361,"Fixed #3575: use UPPER() instead ILIKE for postgres case-insensitive comparisons.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b3b04ad2111f1e3eb0640cd5d51d4391655317ce,Refs #28574 -- Added test for XML format output to Queryset.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,6e9189c0807a8b4818e77c2d83618a788b2ba906,Refs #30897 -- Added test for SETTINGS option to Queryset.explain() on PostgreSQL 12+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,5371342ed66f5ff9feae9dc4586ec43830bbeca6,Fixed #32357 -- Dropped support for PostgreSQL 9.6 and PostGIS 2.3.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b3124215117541a86b0740314ef991e1d521da69,Refs #30897 -- Added test for WAL option to Queryset.explain() on PostgreSQL 13+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,aba9c2de669dcc0278c7ffde7981be91801be00b,Fixed #32226 -- Fixed JSON format of QuerySet.explain() on PostgreSQL.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b3b04ad2111f1e3eb0640cd5d51d4391655317ce,Refs #28574 -- Added test for XML format output to Queryset.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,6e9189c0807a8b4818e77c2d83618a788b2ba906,Refs #30897 -- Added test for SETTINGS option to Queryset.explain() on PostgreSQL 12+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,5371342ed66f5ff9feae9dc4586ec43830bbeca6,Fixed #32357 -- Dropped support for PostgreSQL 9.6 and PostGIS 2.3.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,b3124215117541a86b0740314ef991e1d521da69,Refs #30897 -- Added test for WAL option to Queryset.explain() on PostgreSQL 13+.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,aba9c2de669dcc0278c7ffde7981be91801be00b,Fixed #32226 -- Fixed JSON format of QuerySet.explain() on PostgreSQL.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,847f46e9bf88964484c8b76a10af753ea1018311,"Removed redundant QuerySet.all() calls in docs and tests.

Most QuerySet methods are mapped onto the Manager and, in general,
it isn't necessary to call .all() on the manager.",False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6723a26e59b0b5429a0c5873941e01a2e1bdbb81,847f46e9bf88964484c8b76a10af753ea1018311,"Removed redundant QuerySet.all() calls in docs and tests.

Most QuerySet methods are mapped onto the Manager and, in general,
it isn't necessary to call .all() on the manager.",False
de67dedc771ad2edec15c1d00c083a1a084e1e89,e7b0cace455c2da24492660636bfd48c45a19cdf,"[1.7.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
de67dedc771ad2edec15c1d00c083a1a084e1e89,e7b0cace455c2da24492660636bfd48c45a19cdf,"[1.7.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bc48c7dfd65dcfabbeb6aa5f0a5627038d2b7351,"[4.1.x] Adjusted release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of d8e1442ce2c56282785dd806e5c1147975e8c857 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9d7bd5a56b1ce0576e8e07a8001373576d277942,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9d7bd5a56b1ce0576e8e07a8001373576d277942,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9d7bd5a56b1ce0576e8e07a8001373576d277942,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9d7bd5a56b1ce0576e8e07a8001373576d277942,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bc48c7dfd65dcfabbeb6aa5f0a5627038d2b7351,"[4.1.x] Adjusted release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of d8e1442ce2c56282785dd806e5c1147975e8c857 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9d7bd5a56b1ce0576e8e07a8001373576d277942,bb59ef749fa1257e185bda34dc17843773ad7cde,"[4.1.x] Set date and added stub release notes for 4.1.6, 4.0.9, and 3.2.17.

Backport of 1df963ad2476726d63be132c0cee47e07b8250d7 from main",False
21e7622dec1f8612c85c2fc37fe8efbfd3311e37,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
21e7622dec1f8612c85c2fc37fe8efbfd3311e37,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,821d8aaaaad3f4d11f29eb54a7812f363b5f07cb,"Fixed #15266 -- Applied login_required decorator to password_change_done view. Thanks, lasko.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,ec193224d3580fbcfa78da96a6a7fc4343929dd8,"Fixed #12534 -- Loosened the the security check for ""next"" redirects after logins slightly to allow paths that contain spaces. Thanks for the patch, jnns and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15702 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,bcd63cbfb0590a2e2bed3e4beab3f467279ad3db,"Fixed #6160, #9111 -- Consistently apply conditional_escape to form errors and labels when outputing them as HTML.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9365 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,4c457bca85b5410c47860ee4c5df0b47d48f2603,"Fixed #16789 -- Added names to URLs in convenience contrib.auth urls.py.

Thanks wim AT go2people DOT nl for the report, cmheisel for the patch and
fcurella for reviewing it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16901 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,bb00b2839980145984c487410fc65fbc0c94be3d,"Added login_url argument to login_required decorator. Thanks mhlakhani and ericflo for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13723 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,abb1c508cc95d5cf55e8ab63d6bafe17ac095f95,"Tests for password change process. Thanks, Mike Richardson. Fixed #8402.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8497 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,821d8aaaaad3f4d11f29eb54a7812f363b5f07cb,"Fixed #15266 -- Applied login_required decorator to password_change_done view. Thanks, lasko.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,ec193224d3580fbcfa78da96a6a7fc4343929dd8,"Fixed #12534 -- Loosened the the security check for ""next"" redirects after logins slightly to allow paths that contain spaces. Thanks for the patch, jnns and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15702 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,bcd63cbfb0590a2e2bed3e4beab3f467279ad3db,"Fixed #6160, #9111 -- Consistently apply conditional_escape to form errors and labels when outputing them as HTML.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9365 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,4c457bca85b5410c47860ee4c5df0b47d48f2603,"Fixed #16789 -- Added names to URLs in convenience contrib.auth urls.py.

Thanks wim AT go2people DOT nl for the report, cmheisel for the patch and
fcurella for reviewing it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16901 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,bb00b2839980145984c487410fc65fbc0c94be3d,"Added login_url argument to login_required decorator. Thanks mhlakhani and ericflo for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13723 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,abb1c508cc95d5cf55e8ab63d6bafe17ac095f95,"Tests for password change process. Thanks, Mike Richardson. Fixed #8402.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8497 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,b2ae0a63aeec741f1e51bac9a95a27fd635f9652,[1.4.X] Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,b2ae0a63aeec741f1e51bac9a95a27fd635f9652,[1.4.X] Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
da33d67181b53fe6cc737ac1220153814a1509f6,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
da33d67181b53fe6cc737ac1220153814a1509f6,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
da33d67181b53fe6cc737ac1220153814a1509f6,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da33d67181b53fe6cc737ac1220153814a1509f6,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
40cd19055773705301c3428ed5e08a036d2091f3,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
40cd19055773705301c3428ed5e08a036d2091f3,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
40cd19055773705301c3428ed5e08a036d2091f3,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
40cd19055773705301c3428ed5e08a036d2091f3,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
36f580a17f0b3cb087deadf3b65eea024f479c21,1d61a1eb2a21b550e8e4e63fbb27cbe05ed2aa00,"Fixed #11600 -- Fixed placement of 'View on site' in stacked inline admin template. Thanks, seanbrant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12149 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,85691576649121ff3aaef2bc609282fae0683de4,"Fixed #9276 -- Corrected the way the CSS class is rolled out in a stacked edit-inline template. Thanks to creecode@gmail.com for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9877 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,1d61a1eb2a21b550e8e4e63fbb27cbe05ed2aa00,"Fixed #11600 -- Fixed placement of 'View on site' in stacked inline admin template. Thanks, seanbrant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12149 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,85691576649121ff3aaef2bc609282fae0683de4,"Fixed #9276 -- Corrected the way the CSS class is rolled out in a stacked edit-inline template. Thanks to creecode@gmail.com for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9877 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c14937cf7a1e8c25702e89485cc2dd33aa0d3a16,"Fixed #12508 - Added ability to dynamically add inlines in the admin app.

Refs #13. Also introduces an ``empty_form`` attribute on formsets to make it easier to implement dynamic forms.

Many thanks to Zain Memon for the initial patch from his Summer of Code 2009 project, Stanislaus Madueke for his django-dynamic-formset app and all the other people helping out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12297 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,ef2512b2ffdb719e5c0fb82142f9ce8478282823,"Fixed #25790 -- Allowed disable column sorting in the admin changelist.

Thanks Ramiro Morales for completing the patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b0acb1e73ef32e368a8a6213e300e66981f976d7,Fixed #26779 -- Added extra_context parameter to admin's i18n_javascript view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,1e82094f1b6690018228e688303295f83e1c3d9a,"Fixed #21927 -- Made application and instance namespaces more distinct.

Made URL application namespaces be set in the included URLconf and
instance namespaces in the call to include(). Deprecated other ways
to set application and instance namespaces.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,08572e8d125da204fab230be5d1fdcc5d8d22256,Fixed #24294 -- Allowed staff_member_required decorator to handle args.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,553617e61324dd5d9b34c47ceb2b6f20888daf20,"Fixed #29487 -- Accounted for object level permissions when calculating change view's read-only fields.

Thanks Matthew Frazier for the report and fix.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,d73d0e071c1b4c86d57994a0ab55a74cfe80cdf5,"Fixed #22218 -- Deprecated django.conf.urls.patterns.

Thanks Carl Meyer for the suggestion and Alex Gaynor and Carl for reviews.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,474bd7a5d4b0b47eeedc03ad471ae9e630e95258,Used a separate admin site for autocomplete tests.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,ef2512b2ffdb719e5c0fb82142f9ce8478282823,"Fixed #25790 -- Allowed disable column sorting in the admin changelist.

Thanks Ramiro Morales for completing the patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b0acb1e73ef32e368a8a6213e300e66981f976d7,Fixed #26779 -- Added extra_context parameter to admin's i18n_javascript view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,1e82094f1b6690018228e688303295f83e1c3d9a,"Fixed #21927 -- Made application and instance namespaces more distinct.

Made URL application namespaces be set in the included URLconf and
instance namespaces in the call to include(). Deprecated other ways
to set application and instance namespaces.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,08572e8d125da204fab230be5d1fdcc5d8d22256,Fixed #24294 -- Allowed staff_member_required decorator to handle args.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,553617e61324dd5d9b34c47ceb2b6f20888daf20,"Fixed #29487 -- Accounted for object level permissions when calculating change view's read-only fields.

Thanks Matthew Frazier for the report and fix.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,d73d0e071c1b4c86d57994a0ab55a74cfe80cdf5,"Fixed #22218 -- Deprecated django.conf.urls.patterns.

Thanks Carl Meyer for the suggestion and Alex Gaynor and Carl for reviews.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,474bd7a5d4b0b47eeedc03ad471ae9e630e95258,Used a separate admin site for autocomplete tests.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,043bd709425149b8eff3fb821cba5c23aaebd0df,Updated test URL patterns to use path() and re_path().,False
36f580a17f0b3cb087deadf3b65eea024f479c21,a7284cc0c3620030b43034cdf41216c0941bf411,"Fixed #29809 -- Fixed a crash when a ""view only"" user POSTs to the admin user change form.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c2d59e556499ecee3d8a1fc684f49a21463ab1c1,"[py3] Fixed admin_views tests

Also changed several occurrences of 'request' to 'response'.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,ad769efa85e0296033572315025fed9fa9aefade,"Expanded tests added when fixing #14529.

To make sure changes in 35d1cd0 don't break anything. Refs #19505.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
36f580a17f0b3cb087deadf3b65eea024f479c21,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c2d59e556499ecee3d8a1fc684f49a21463ab1c1,"[py3] Fixed admin_views tests

Also changed several occurrences of 'request' to 'response'.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,ad769efa85e0296033572315025fed9fa9aefade,"Expanded tests added when fixing #14529.

To make sure changes in 35d1cd0 don't break anything. Refs #19505.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
36f580a17f0b3cb087deadf3b65eea024f479c21,f5e7506cffc7f2c37718a0ca55de2dedbad3e23a,Refs #27804 -- Used subTest in AdminViewPermissionsTest.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,97e637a87fb45c4de970cca6cb783d93473c9d15,Fixed typos in comments and docs.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,405ec5b9c6996bf4e5fba68a9bad76d17e146327,Fixed typo in tests/admin_views/tests.py.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5a72589d7acb3abdd62e95bd30eba5ac038861a2,"Fixed #7984 -- 'View on site' links now work in inlines. Thanks philwo for the report and initial patch by julianb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5a72589d7acb3abdd62e95bd30eba5ac038861a2,"Fixed #7984 -- 'View on site' links now work in inlines. Thanks philwo for the report and initial patch by julianb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5dd68fa74ae6f3f401649c73e0f450b35d291d9c,"Marked a couple of unmarked strings in edit_inline templates and corrected a marked string.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8587 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c2e19e26bc33d34eff57079bd1a6838ff64d9e81,"Fixed #17856 -- Passed obj to get_inline_instances

Thanks ybon, quinode and sjaensch for the patch, and Tim Graham
for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c7a19f42030c15ad3b3475ad9a4854e10733ff74,"Fixed #23857 -- Fixed admin crash with ""save as new"" and deleting inline.

Thanks amarandon for the report.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,f67fb604ea4cebe2dcc2b3bc8d017bdae546a7a5,"Fixed #8341 -- Allow simpler subclassing of ModelAdmin and InlineModelAdmin when overriding get_form and get_formset and needing to pass keyword argument on to the factory functions. Thanks ciantic for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8396 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,8f30556329b64005d63b66859a74752a0b261315,"Renamed Field.rel attribute to remote_field

Field.rel is now deprecated. Rel objects have now also remote_field
attribute. This means that self == self.remote_field.remote_field.

In addition, made the Rel objects a bit more like Field objects. Still,
marked ManyToManyFields as null=True.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3be368c73e8e6696e7cc74421aeb4d06d8e828c8,Fix #20111 Added more precise message level for succcess and warning messages,False
36f580a17f0b3cb087deadf3b65eea024f479c21,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b91787910c9d5a036674d46a73d1b48ca33123a3,"Fixed #20642 -- Deprecated `Option.get_(add|change|delete)_permission`.

Those methods were only used by `contrib.admin` internally and exclusively
related to `contrib.auth`. Since they were undocumented but used
in the wild the raised deprecation warning point to an also undocumented
alternative that lives in `contrib.auth`.

Also did some PEP8 and other cleanups in the affected modules.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,7d1b4295b9779788b4cbd4b7bb99240807c62aa3,"Fixed #9036: unified the permission checking in `AdminSite`, pushing it down to the `ModelAdmin` where it belongs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10451 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
36f580a17f0b3cb087deadf3b65eea024f479c21,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c2e19e26bc33d34eff57079bd1a6838ff64d9e81,"Fixed #17856 -- Passed obj to get_inline_instances

Thanks ybon, quinode and sjaensch for the patch, and Tim Graham
for the review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c7a19f42030c15ad3b3475ad9a4854e10733ff74,"Fixed #23857 -- Fixed admin crash with ""save as new"" and deleting inline.

Thanks amarandon for the report.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,f67fb604ea4cebe2dcc2b3bc8d017bdae546a7a5,"Fixed #8341 -- Allow simpler subclassing of ModelAdmin and InlineModelAdmin when overriding get_form and get_formset and needing to pass keyword argument on to the factory functions. Thanks ciantic for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8396 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,8f30556329b64005d63b66859a74752a0b261315,"Renamed Field.rel attribute to remote_field

Field.rel is now deprecated. Rel objects have now also remote_field
attribute. This means that self == self.remote_field.remote_field.

In addition, made the Rel objects a bit more like Field objects. Still,
marked ManyToManyFields as null=True.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3be368c73e8e6696e7cc74421aeb4d06d8e828c8,Fix #20111 Added more precise message level for succcess and warning messages,False
36f580a17f0b3cb087deadf3b65eea024f479c21,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b91787910c9d5a036674d46a73d1b48ca33123a3,"Fixed #20642 -- Deprecated `Option.get_(add|change|delete)_permission`.

Those methods were only used by `contrib.admin` internally and exclusively
related to `contrib.auth`. Since they were undocumented but used
in the wild the raised deprecation warning point to an also undocumented
alternative that lives in `contrib.auth`.

Also did some PEP8 and other cleanups in the affected modules.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,7d1b4295b9779788b4cbd4b7bb99240807c62aa3,"Fixed #9036: unified the permission checking in `AdminSite`, pushing it down to the `ModelAdmin` where it belongs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10451 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
36f580a17f0b3cb087deadf3b65eea024f479c21,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
36f580a17f0b3cb087deadf3b65eea024f479c21,fd8a7a5313f5e223212085b2e470e43c0047e066,"Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

* Refs #27991 -- Added testing for ModelAdmin.get_inline_instances() if the inline's has_add_permission() doesn't accept 'obj'.

* Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,cd790ed1a6dbdf910c41da44c306ddae6ea6fd4d,Refs #8936 -- Added ModelAdmin.has_view_or_change_permission().,False
36f580a17f0b3cb087deadf3b65eea024f479c21,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,4082f078bce6ef937f604cd6270676700607b20f,"[2.2.x] Added stub release notes for 2.1.15.

Backport of e9def97d1095efed15a109d82fe0498ebd56fa04 from master",False
36f580a17f0b3cb087deadf3b65eea024f479c21,90c730d96360d6047fdcf645ef453c4230b219bf,"[2.2.x] Added stub release notes for 2.2.8 release.

Backport of 30359496a3f3d9af0b02afc334710f7e24c74f5b from master",False
36f580a17f0b3cb087deadf3b65eea024f479c21,90c730d96360d6047fdcf645ef453c4230b219bf,"[2.2.x] Added stub release notes for 2.2.8 release.

Backport of 30359496a3f3d9af0b02afc334710f7e24c74f5b from master",False
36f580a17f0b3cb087deadf3b65eea024f479c21,622158b371ade0e76e84d93ce18fc8caef911d22,"[2.2.x] Refs #29926 -- Doc'd Python 3.8 compatibility in Django 2.2.x.

Backport of b93a0e34d9b9b99d41103782b7e7aeabf47517e3 from master.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,c14937cf7a1e8c25702e89485cc2dd33aa0d3a16,"Fixed #12508 - Added ability to dynamically add inlines in the admin app.

Refs #13. Also introduces an ``empty_form`` attribute on formsets to make it easier to implement dynamic forms.

Many thanks to Zain Memon for the initial patch from his Summer of Code 2009 project, Stanislaus Madueke for his django-dynamic-formset app and all the other people helping out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12297 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,043bd709425149b8eff3fb821cba5c23aaebd0df,Updated test URL patterns to use path() and re_path().,False
36f580a17f0b3cb087deadf3b65eea024f479c21,a7284cc0c3620030b43034cdf41216c0941bf411,"Fixed #29809 -- Fixed a crash when a ""view only"" user POSTs to the admin user change form.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,f5e7506cffc7f2c37718a0ca55de2dedbad3e23a,Refs #27804 -- Used subTest in AdminViewPermissionsTest.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,97e637a87fb45c4de970cca6cb783d93473c9d15,Fixed typos in comments and docs.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,405ec5b9c6996bf4e5fba68a9bad76d17e146327,Fixed typo in tests/admin_views/tests.py.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,09ee3b6fe3c4d80bb445835f88148d6f48cde3ff,Fixed #29663 -- Made admin change view redirect to changelist with view permission.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,5dd68fa74ae6f3f401649c73e0f450b35d291d9c,"Marked a couple of unmarked strings in edit_inline templates and corrected a marked string.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8587 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
36f580a17f0b3cb087deadf3b65eea024f479c21,fd8a7a5313f5e223212085b2e470e43c0047e066,"Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

* Refs #27991 -- Added testing for ModelAdmin.get_inline_instances() if the inline's has_add_permission() doesn't accept 'obj'.

* Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.",False
36f580a17f0b3cb087deadf3b65eea024f479c21,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
36f580a17f0b3cb087deadf3b65eea024f479c21,cd790ed1a6dbdf910c41da44c306ddae6ea6fd4d,Refs #8936 -- Added ModelAdmin.has_view_or_change_permission().,False
36f580a17f0b3cb087deadf3b65eea024f479c21,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
36f580a17f0b3cb087deadf3b65eea024f479c21,4082f078bce6ef937f604cd6270676700607b20f,"[2.2.x] Added stub release notes for 2.1.15.

Backport of e9def97d1095efed15a109d82fe0498ebd56fa04 from master",False
36f580a17f0b3cb087deadf3b65eea024f479c21,622158b371ade0e76e84d93ce18fc8caef911d22,"[2.2.x] Refs #29926 -- Doc'd Python 3.8 compatibility in Django 2.2.x.

Backport of b93a0e34d9b9b99d41103782b7e7aeabf47517e3 from master.",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,79594b40c087c19fecc72af042c835b11a519b78,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
601107524523bca02376a0ddc1a06c6fdb8f22f3,79594b40c087c19fecc72af042c835b11a519b78,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
601107524523bca02376a0ddc1a06c6fdb8f22f3,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
bcfb47780ce7caecb409a9e9c1c314266e41d392,8a9c8bb90736451e6bdea82723cbb23a695146fb,"Fixed #21568 -- Added missing ModelMultipleChoiceField to_python method

Thanks dibrovsd at gmail.com for the report and Simon Charette
for the review.",False
bcfb47780ce7caecb409a9e9c1c314266e41d392,34daa0804c768a6cdeb31d123833b66b5ad89f3c,"Fixed #14144 -- Made sure custom validators are called in ModelMultipleChoiceFields. Thanks, matiasb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14886 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bcfb47780ce7caecb409a9e9c1c314266e41d392,8a9c8bb90736451e6bdea82723cbb23a695146fb,"Fixed #21568 -- Added missing ModelMultipleChoiceField to_python method

Thanks dibrovsd at gmail.com for the report and Simon Charette
for the review.",False
bcfb47780ce7caecb409a9e9c1c314266e41d392,34daa0804c768a6cdeb31d123833b66b5ad89f3c,"Fixed #14144 -- Made sure custom validators are called in ModelMultipleChoiceFields. Thanks, matiasb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14886 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5e2f4ddf2940704a26a4ac782b851989668d74db,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,0f6d51e6a0a22e37e45c4bf452ddb49723e2f956,"Fixed #25470 -- Avoided unnecessary, expensive DATETIME typecast on MySQL.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,877c800f255ccaa7abde1fb944de45d1616f5cc9,"Refs CVE-2022-34265 -- Properly escaped Extract() and Trunc() parameters.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
5e2f4ddf2940704a26a4ac782b851989668d74db,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
5e2f4ddf2940704a26a4ac782b851989668d74db,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,c7f6ffbdcf9ca8df905aebf73336ef9905771f7c,"Fixed #28103 -- Added quarter extract, truncation, and lookup.

Thanks Mariusz Felisiak, Tim Graham, and Adam Johnson for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,082c52dbedd76c312cebf3b23e04c449a94c20b6,"Refs #25774, #26348 -- Allowed Trunc functions to operate with time fields.

Thanks Josh for the amazing testing setup and Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,28308078f397d1de36fd0da417ac7da2544ba12d,Fixed #22603 -- Reorganized classes in django.db.backends.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,cef3f2d3c64055c9fc1757fd61dba24b557a2add,"Fixed #28373 -- Used connection timezone instead of UTC when making dates timezone-aware on MySQL, SQLite, and Oracle.

Thanks vtalpaert for the initial patch.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
5e2f4ddf2940704a26a4ac782b851989668d74db,c4a876a0c1ad5e671c26898ccabb1e03837f6fcf,Refs #17260 -- Prevented Oracle timezone conversion from stripping microseonds.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,44f3ee77166bd5c0e8a4604f2d96015268dce100,Fixed #9596 -- Added date transform for DateTimeField.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,b1a4b1f0bdf05adbd3dc4dde14228e68da54c1a3,Fixed #32722 -- Fixed comparing to TruncTime() on Oracle.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,ee005328c8eec5c013c6bf9d6fbb2ae9d540df14,Fixed #31640 -- Made Trunc() truncate datetimes to Date/TimeField in a specific timezone.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,1446902be48ebf19bfe484371897a2815dd21fca,"Fixed #25240 -- Added ExtractWeek and exposed it through the __week lookup.

Thanks to Mariusz Felisiak and Tim Graham for review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,8a4f017f4565c51c83aabb61a816e334e8638432,"Fixed #26348 -- Added TruncTime and exposed it through the __time lookup.

Thanks Tim for the review.",False
5e2f4ddf2940704a26a4ac782b851989668d74db,a455e732a0011dfbd15eddaa4fe60cb9439326e0,Fixed #28650 -- Added TruncWeek database function.,False
5e2f4ddf2940704a26a4ac782b851989668d74db,877c800f255ccaa7abde1fb944de45d1616f5cc9,"Refs CVE-2022-34265 -- Properly escaped Extract() and Trunc() parameters.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
5e2f4ddf2940704a26a4ac782b851989668d74db,877c800f255ccaa7abde1fb944de45d1616f5cc9,"Refs CVE-2022-34265 -- Properly escaped Extract() and Trunc() parameters.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
5e2f4ddf2940704a26a4ac782b851989668d74db,877c800f255ccaa7abde1fb944de45d1616f5cc9,"Refs CVE-2022-34265 -- Properly escaped Extract() and Trunc() parameters.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
09186a13d975de6d049f8b3e05484f66b01ece62,f6e2b556e0e26433f97ae0a316d06c3906eaea95,"[2.1.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
09186a13d975de6d049f8b3e05484f66b01ece62,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
09186a13d975de6d049f8b3e05484f66b01ece62,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
09186a13d975de6d049f8b3e05484f66b01ece62,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
09186a13d975de6d049f8b3e05484f66b01ece62,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
09186a13d975de6d049f8b3e05484f66b01ece62,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
09186a13d975de6d049f8b3e05484f66b01ece62,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
09186a13d975de6d049f8b3e05484f66b01ece62,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
09186a13d975de6d049f8b3e05484f66b01ece62,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
09186a13d975de6d049f8b3e05484f66b01ece62,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
09186a13d975de6d049f8b3e05484f66b01ece62,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
09186a13d975de6d049f8b3e05484f66b01ece62,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
09186a13d975de6d049f8b3e05484f66b01ece62,f6e2b556e0e26433f97ae0a316d06c3906eaea95,"[2.1.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
09186a13d975de6d049f8b3e05484f66b01ece62,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
09186a13d975de6d049f8b3e05484f66b01ece62,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
09186a13d975de6d049f8b3e05484f66b01ece62,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,a2355740ed76ca9461b34d65beb450c0156f3224,"[1.11.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
f4cff43bf921fcea6a29b726eb66767f67753fa2,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
f4cff43bf921fcea6a29b726eb66767f67753fa2,a2355740ed76ca9461b34d65beb450c0156f3224,"[1.11.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d356bb653f4d90ae9809e5a051791ded39010c38,Fixed #26460 -- Issued a single warning for invalid cache key,False
84b2da5552e100ae3294f564f6c862fef8d0e693,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,40c60efecc0fc73f0b2320b44d684586b52ee799,"Refs #23947 -- Isolated some cache tests.

Thanks Diego Guimarãesi and Florian Apolloner.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,9136ceb6fb8225625631671147ff70c1fcfbbcdc,Replaced router.routers usage with override_settings(DATABASE_ROUTERS); refs #23933.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d038c547b5ce585cbf9ef5bb7e5298f52e4a243b,Removed django.core.cache.get_cache() per deprecation timeline; refs #21012.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,51890ce8898f821d28f2f6fb6071c936e9bd88f0,Applied ignore_warnings to Django tests,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d362c1546f8ad62811e5dee3cf0b43170e6e1c4c,"Convert much of the regression tests to use absolute imports.  There's still work to be done though.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16976 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,e021b87c0009c11aa2e62b62fc40b4b0209a8e5d,"Fixed a few more imports of django.utils.unittest.

One import per line please! Refs #20680.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,7cb140e6d86e9c592983ddb50bfd82480ecec7eb,"Fixed #16003 -- Restored compatibility of the admin when using USE_ETAGS. Thanks for the initial patch, pterk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16729 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,34cc21983ce0124a94d01120431f35ac0653c60f,"Removed `vary_delim_re` in `django/utils/cache.py` in favor of existing `cc_delim_re` since the latter is more correct in parsing the header (allows whitespace before and after comma separators instead of just after).  As a bonus, tests added for `patch_vary_headers()`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6696 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,6fe22b30e007b7ac49eae48a53e7ba0a4ee79a4b,"Fixed #22085 -- Added a feature for setting non-expiring keys as the default.

This feature allows the default `TIMEOUT` Cache argument to be set to `None`,
so that cache instances can set a non-expiring key as the default,
instead of using the default value of 5 minutes.

Previously, this was possible only by passing `None` as an argument to
the set() method of objects of type `BaseCache` (and subtypes).",False
84b2da5552e100ae3294f564f6c862fef8d0e693,638dbc3e8320652ba3bd759e0ac1d28590402096,"Fixed #6464 -- Added incr() and decr() operations on cache backends. Atomic on Memcache; implemented as a 2 stage retrieve/update on other backends. Includes refactor of the cache tests to ensure all the backends are actually tested, and a fix to the DB cache backend that was discovered as a result. Thanks to Michael Malone for the original patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10031 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,ffc37e2343a93cf6d44247e20cd263b41f931716,"Fixed #21012 -- New API to access cache backends.

Thanks Curtis Malony and Florian Apolloner.

Squashed commit of the following:

commit 3380495e93f5e81b80a251b03ddb0a80b17685f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:18:07 2013 +0100

    Looked up the template_fragments cache at runtime.

commit 905a74f52b24a198f802520ff06290a94dedc687
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:19:48 2013 +0100

    Removed all uses of create_cache.

    Refactored the cache tests significantly.

    Made it safe to override the CACHES setting.

commit 35e289fe9285feffed3c60657af9279a6a2cfccc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:23:57 2013 +0100

    Removed create_cache function.

commit 8e274f747a1f1c0c0e6c37873e29067f7fa022e8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:04:52 2013 +0100

    Updated docs to describe a simplified cache backend API.

commit ee7eb0f73e6d4699edcf5d357dce715224525cf6
Author: Curtis Maloney <curtis@tinbrain.net>
Date:   Sat Oct 19 09:49:24 2013 +1100

    Fixed #21012 -- Thread-local caches, like databases.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,bc8abe36ba5508fe788f6d49a26749268d368583,"Fixed #16358 - Made memcache backend delete old value on a failure to set.

Default Memcached configuration allows for a maximum object of 1MB and
will fail to set the key if it is too large. The key will be deleted from
memcached if it fails to be set. This is needed to avoid an issue with
cache_db session backend using the old value stored in memcached, instead
of the newer value stored in the database.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,09f865276554f35060ff939722ec4cefd578edf6,"Use assertIsInstance in tests.

Gives much nicer errors when it fails.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,00c0d3c44ebc4e3461653ec96cd47023cc0a6e5b,Made warning assertions work with or without -Wall python switch,False
84b2da5552e100ae3294f564f6c862fef8d0e693,10cf3c64273db407402ea9723569dfc8d059e186,Used catch_warnings instead of save/restore methods. Refs #17049.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,40c60efecc0fc73f0b2320b44d684586b52ee799,"Refs #23947 -- Isolated some cache tests.

Thanks Diego Guimarãesi and Florian Apolloner.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,9136ceb6fb8225625631671147ff70c1fcfbbcdc,Replaced router.routers usage with override_settings(DATABASE_ROUTERS); refs #23933.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d038c547b5ce585cbf9ef5bb7e5298f52e4a243b,Removed django.core.cache.get_cache() per deprecation timeline; refs #21012.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,51890ce8898f821d28f2f6fb6071c936e9bd88f0,Applied ignore_warnings to Django tests,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d362c1546f8ad62811e5dee3cf0b43170e6e1c4c,"Convert much of the regression tests to use absolute imports.  There's still work to be done though.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16976 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,e021b87c0009c11aa2e62b62fc40b4b0209a8e5d,"Fixed a few more imports of django.utils.unittest.

One import per line please! Refs #20680.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,7cb140e6d86e9c592983ddb50bfd82480ecec7eb,"Fixed #16003 -- Restored compatibility of the admin when using USE_ETAGS. Thanks for the initial patch, pterk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16729 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,34cc21983ce0124a94d01120431f35ac0653c60f,"Removed `vary_delim_re` in `django/utils/cache.py` in favor of existing `cc_delim_re` since the latter is more correct in parsing the header (allows whitespace before and after comma separators instead of just after).  As a bonus, tests added for `patch_vary_headers()`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6696 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,6fe22b30e007b7ac49eae48a53e7ba0a4ee79a4b,"Fixed #22085 -- Added a feature for setting non-expiring keys as the default.

This feature allows the default `TIMEOUT` Cache argument to be set to `None`,
so that cache instances can set a non-expiring key as the default,
instead of using the default value of 5 minutes.

Previously, this was possible only by passing `None` as an argument to
the set() method of objects of type `BaseCache` (and subtypes).",False
84b2da5552e100ae3294f564f6c862fef8d0e693,638dbc3e8320652ba3bd759e0ac1d28590402096,"Fixed #6464 -- Added incr() and decr() operations on cache backends. Atomic on Memcache; implemented as a 2 stage retrieve/update on other backends. Includes refactor of the cache tests to ensure all the backends are actually tested, and a fix to the DB cache backend that was discovered as a result. Thanks to Michael Malone for the original patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10031 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,ffc37e2343a93cf6d44247e20cd263b41f931716,"Fixed #21012 -- New API to access cache backends.

Thanks Curtis Malony and Florian Apolloner.

Squashed commit of the following:

commit 3380495e93f5e81b80a251b03ddb0a80b17685f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:18:07 2013 +0100

    Looked up the template_fragments cache at runtime.

commit 905a74f52b24a198f802520ff06290a94dedc687
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:19:48 2013 +0100

    Removed all uses of create_cache.

    Refactored the cache tests significantly.

    Made it safe to override the CACHES setting.

commit 35e289fe9285feffed3c60657af9279a6a2cfccc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:23:57 2013 +0100

    Removed create_cache function.

commit 8e274f747a1f1c0c0e6c37873e29067f7fa022e8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:04:52 2013 +0100

    Updated docs to describe a simplified cache backend API.

commit ee7eb0f73e6d4699edcf5d357dce715224525cf6
Author: Curtis Maloney <curtis@tinbrain.net>
Date:   Sat Oct 19 09:49:24 2013 +1100

    Fixed #21012 -- Thread-local caches, like databases.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,bc8abe36ba5508fe788f6d49a26749268d368583,"Fixed #16358 - Made memcache backend delete old value on a failure to set.

Default Memcached configuration allows for a maximum object of 1MB and
will fail to set the key if it is too large. The key will be deleted from
memcached if it fails to be set. This is needed to avoid an issue with
cache_db session backend using the old value stored in memcached, instead
of the newer value stored in the database.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,09f865276554f35060ff939722ec4cefd578edf6,"Use assertIsInstance in tests.

Gives much nicer errors when it fails.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,00c0d3c44ebc4e3461653ec96cd47023cc0a6e5b,Made warning assertions work with or without -Wall python switch,False
84b2da5552e100ae3294f564f6c862fef8d0e693,10cf3c64273db407402ea9723569dfc8d059e186,Used catch_warnings instead of save/restore methods. Refs #17049.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,cfd1f93d55d3b9317bdf26b426fe21d935ab3399,"Refs #19914 -- Split the test_invalid_keys cache test into two.

The first half of the test fails when using pylibmc (so will need
to be skipped).",False
84b2da5552e100ae3294f564f6c862fef8d0e693,674e3fe13e5156344bfafbea59018b8837eb3044,Fixed #19914 -- Fixed test failures with pylibmc.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,75ab212d12058494eaf171acfc762206d8a62d47,"Fixed #12399 -- Added handling for memcache timeouts longer than 30 days. Thanks to houdinihound for the report, and gciotta for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12408 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,89955cc35f3636684ea6f2a6c9504b35a3050f0f,"Fixed #9595 -- Allow non-expiring cache timeouts.

Also, streamline the use of 0 and None between cache backends.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,75ab212d12058494eaf171acfc762206d8a62d47,"Fixed #12399 -- Added handling for memcache timeouts longer than 30 days. Thanks to houdinihound for the report, and gciotta for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12408 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,89955cc35f3636684ea6f2a6c9504b35a3050f0f,"Fixed #9595 -- Allow non-expiring cache timeouts.

Also, streamline the use of 0 and None between cache backends.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,fdd7a355bf053217d25b8d2189e37069c1304283,"Deprecated django.utils.importlib

This was a shim for pre-Python 2.7 support.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,fdd7a355bf053217d25b8d2189e37069c1304283,"Deprecated django.utils.importlib

This was a shim for pre-Python 2.7 support.",False
84b2da5552e100ae3294f564f6c862fef8d0e693,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,36ded01527b690b5df0574492af9cfcc2ea3d1dc,Fixed #21302 -- Fixed unused imports and import *.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,7da3923ba0c569aa23d0ab0a47a124af60a18f5b,Sorted imports in __init__.py files.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,d356bb653f4d90ae9809e5a051791ded39010c38,Fixed #26460 -- Issued a single warning for invalid cache key,False
84b2da5552e100ae3294f564f6c862fef8d0e693,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,cfd1f93d55d3b9317bdf26b426fe21d935ab3399,"Refs #19914 -- Split the test_invalid_keys cache test into two.

The first half of the test fails when using pylibmc (so will need
to be skipped).",False
84b2da5552e100ae3294f564f6c862fef8d0e693,674e3fe13e5156344bfafbea59018b8837eb3044,Fixed #19914 -- Fixed test failures with pylibmc.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
84b2da5552e100ae3294f564f6c862fef8d0e693,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,36ded01527b690b5df0574492af9cfcc2ea3d1dc,Fixed #21302 -- Fixed unused imports and import *.,False
84b2da5552e100ae3294f564f6c862fef8d0e693,7da3923ba0c569aa23d0ab0a47a124af60a18f5b,Sorted imports in __init__.py files.,False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,73350a63698199c9f1269647722ea96c7f9a8aa0,"[3.2.x] Added stub release notes for 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,73350a63698199c9f1269647722ea96c7f9a8aa0,"[3.2.x] Added stub release notes for 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
6f030b1149bd8fa4ba90452e77cb3edc095ce54e,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,d811fa1d1012e746719aa3af351f56ad21f92610,Added stub release notes for Django 3.2.10.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,d811fa1d1012e746719aa3af351f56ad21f92610,Added stub release notes for Django 3.2.10.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
d4dcd5b9dd9e462fec8220e33e3e6c822b7e88a6,ae4077e13ea2e4c460c3f21b9aab93a696590851,"Added stub release notes and release date for 3.2.10, 3.1.14 and 2.2.25.",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,d77236960a5d3792bf9514fb7834d2813f531054,"Fixed #9548 -- Correctly detect existence of empty sessions with cache backend.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ac7c3a110f906e4dfed3a17451bf7fd9fcb81296,d77236960a5d3792bf9514fb7834d2813f531054,"Fixed #9548 -- Correctly detect existence of empty sessions with cache backend.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,2a979d2a7bec485e4b90b7ae99ace0dd16faa948,Updated contrib.admin to use Email/URLInputs; refs #16630,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,2a979d2a7bec485e4b90b7ae99ace0dd16faa948,Updated contrib.admin to use Email/URLInputs; refs #16630,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,271bcda04af23bd4deb9656edd59038537f301c5,"Fixed #7190 -- Corrected a problem with Boolean value handling on the MySQL backend. Thanks to George Vilches for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12900 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,271bcda04af23bd4deb9656edd59038537f301c5,"Fixed #7190 -- Corrected a problem with Boolean value handling on the MySQL backend. Thanks to George Vilches for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12900 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
985434fb1d6bf2335bf96c6ebf91c3674f1f399f,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad0410ec4f458aa39803e5f6b9a3736527062dcd,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad0410ec4f458aa39803e5f6b9a3736527062dcd,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2360ba22742c3ee8729697bfe2d508110465af56,"Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad0410ec4f458aa39803e5f6b9a3736527062dcd,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad0410ec4f458aa39803e5f6b9a3736527062dcd,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2360ba22742c3ee8729697bfe2d508110465af56,"Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2360ba22742c3ee8729697bfe2d508110465af56,"Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.",False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
ad0410ec4f458aa39803e5f6b9a3736527062dcd,2360ba22742c3ee8729697bfe2d508110465af56,"Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.",False
d7a06ee7e571b6dad07c0f5b519b1db02e2a476c,34daa0804c768a6cdeb31d123833b66b5ad89f3c,"Fixed #14144 -- Made sure custom validators are called in ModelMultipleChoiceFields. Thanks, matiasb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14886 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7a06ee7e571b6dad07c0f5b519b1db02e2a476c,34c4b93c84e86665d66d0b31da8e30fd581d5b5f,"[1.6.x] Fixed #21568 -- Added missing ModelMultipleChoiceField to_python method

Thanks dibrovsd at gmail.com for the report and Simon Charette
for the review.
Backport of 8a9c8bb90 from master.",False
d7a06ee7e571b6dad07c0f5b519b1db02e2a476c,34daa0804c768a6cdeb31d123833b66b5ad89f3c,"Fixed #14144 -- Made sure custom validators are called in ModelMultipleChoiceFields. Thanks, matiasb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14886 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7a06ee7e571b6dad07c0f5b519b1db02e2a476c,34c4b93c84e86665d66d0b31da8e30fd581d5b5f,"[1.6.x] Fixed #21568 -- Added missing ModelMultipleChoiceField to_python method

Thanks dibrovsd at gmail.com for the report and Simon Charette
for the review.
Backport of 8a9c8bb90 from master.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,a89b15628429da79dd47c04bd191de566ef7eee6,"Disentangled some parts of the admin ChangeList and ListFilter's internals. With this refactoring, the query string lookups are now processed once instead of twice and some bugs (in particular the SimpleListFilter parameter name being mistaken for a model field in some cases) are avoided.

Refs #17091.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17145 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,a89b15628429da79dd47c04bd191de566ef7eee6,"Disentangled some parts of the admin ChangeList and ListFilter's internals. With this refactoring, the query string lookups are now processed once instead of twice and some bugs (in particular the SimpleListFilter parameter name being mistaken for a model field in some cases) are avoided.

Refs #17091.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17145 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,8ef060e0e67ae30cc1a0fee9c679f116d3cc24f1,Fixed a test failure introduced in 55a11683f7b094ae4fd0b9fa030d18a12657ba98.,False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,8ef060e0e67ae30cc1a0fee9c679f116d3cc24f1,Fixed a test failure introduced in 55a11683f7b094ae4fd0b9fa030d18a12657ba98.,False
2b31342cdf14fc20e07c43d258f1e7334ad664a6,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,925c711cf75072526ced0ae8f18d561dca612092,"Fixed #2503 -- Fixed HttpResponse.delete_cookie() to work properly. It now takes path and domain as optional keyword arguments.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,991bb6124206a503545f5963e5048af45b1751eb,"Fixed #736 -- Changed behavior of QueryDict items() to be more consistent, fixed mutability holes, gave MultiValueDict many more dictionary methods and added unit tests. Thanks, Kieran Holland. This is slightly backwards-incompatible if you happened to rely on the behavior of QueryDict.items(), which is highly unlikely.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1504 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4100eab823202a26a7b8227d9b2d1a8c7811c1d7,"Fixed the breakage in [6164] in a different, better way: HttpResponse now implements __contains__ along with __get/set/delitem__, as it should. This is a bit more robust, and should prevent similar breakage from user code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e2b4eddc11b391bc0047032776e9ca7c2f9328b3,Used the decorator syntax for properties in django.http,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0ce6636102d9e1c8c158c0e3eadb5a5db6b06a71,"Fixed #17277 - Wrap IOErrors raised due to client disconnect in a specific IOError subclass so they can be distinguished from more serious errors. Thanks David Lowe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2659429df46d0d79ad7a93d50d0ccdab45b55b53,"Fixed edge case that breaks the test suite on versions of Python > 2.6.4

Before http://svn.python.org/view?view=rev&revision=74647 it was possible to
pass a SimpleCookie to load, but this no longer works due to a different bug
in Python the said revision fixed.

My guess is a SimpleCookie was never intended to be passed through load which
is perfectly reasonable.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,db2f9bfae173b565215a9f7320d7a45d0532f2fe,"Fixed #16178 - Cleanup request classes' `__repr__()`

Thanks to julien for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,136752ca9a87be908f9ec1e398bbd56b0c75222c,"Added 'method' attribute to HttpRequest objects

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,87e6939372790662752e227557415d3f4e180992,"Fixed #10267 -- Correctly handle IRIs in HttpResponse.build_absolute_uri().

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bce890ace4a97ab7a7a9b918f1452c6592d9b08e,"Fixed #16584 -- Fixed a bunch of typos in code comments. Thanks, Bernhard Essl.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e60c26d5bb9960866700eccd3392711e523a90e6,"Fixed #5562 -- Changed settings of Expires heading when expiring a cookie to
work with non-compliant browsers (also removes a non-compliance feature of our
own). Thanks, caifen1985@gmail.com and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6549 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5bdf1da730368a16beaa077d91457ff625f06bc4,"Fixed #394 -- Trailing-slash redirects now retain duplicate name-value query-string pairs, instead of the first of each pair. Added a QueryDict.urlencode() method to accomplish this. Updated the docs. Thanks for the good catch, mlambert

git-svn-id: http://code.djangoproject.com/svn/django/trunk@613 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ca07fda2efea24cb43423b884fa4648d44e52963,"[py3] Switched to Python 3-compatible imports.

xrange/range will be dealt with in a separate commit due to the huge
number of changes.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bfb4ed1425adb38e5c7b57a2aa9ab5479fc2123c,"Negligible spacing fixes to comments in django/http/__init__.py

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,23f94f0741100233862922a8e77a3ac9dc1833e9,Fixed #18561 -- Made HttpResponse.tell() support non-ascii chars,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3bb340271ceb5ac398a2386f64f7e903571bc8ac,"Changed settings imports from [2639] to use 'from django.conf import settings', to make it easier to merge to magic-removal

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c3d7aad6d0911bb84120d7c8d41923c895784b21,"Fixed #2560 -- Add close() support to HttpResponse iterators. Thanks, Ivan
Sagalaev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3791 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,646f2f6101cda3e20908928de44739dfff596b0f,"Fixed #7494 -- Fixed build_absolute_url() for some types of (uncommon) URLs.
Patch from tom@almostobsolete.net and RobotAdam.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8490 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dd799591fc9f6ab0d988e0dc82f47276bdab6b2a,"Backwards-incompatible change: renamed HttpResponse.headers to HttpResponse._headers to deliberately break anyone accessing headers directly instead of through the case-insensitive proxies on HttpResponse itself. See BackwardsIncompatibleChanges for more details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8bb46d8b7c808bb366c7e15c46e5476e2b2b51a1,"Fixed #15679 - regression in HttpRequest.POST and raw_post_data access.

Thanks to vkryachko for the report.

This also fixes a slight inconsistency with raw_post_data after parsing of a
multipart request, and adds a test for that.  (Previously accessing
raw_post_data would have returned the empty string rather than raising an
Exception).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15938 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f2477b6450afb99b5c34c54cfd121ddfbabc904e,"Fixed #7233 -- Ensured that QueryDict classes are always unpicklable. This
problem only arose on some systems, since it depends upon the order in which
the attributes are pickled. Makes reliable testing kind of tricky.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d393e1bd979984dbafa8fd040aae6223209565e,[py3] Fixed HTTP header serialization,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c8e2f7591d6ea3545aeb32fa4c92cbeb9a622546,"Fixed #17931 -- Accepted aware datetimes to set cookies expiry dates. Thanks jaddison for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,706659d2bb6af350903a5b5ee9d1e09f95f6a9a3,"Changed the way we handle HTTP headers internally so that they appear
case-insensitive, but the original case is preserved for output. This increases the chances of working with non-compliant clients without changing the external interface. Fixed #2970.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6546 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,89e0e8b6bc861bb95e55bd5e255e756fe3be1cf2,"Fixed our SimpleCookie overriding and use to be compatible with a (potential) stdlib SimpleCookie that fixes http://bugs.python.org/issue2193

The previous code tested the stdlib in a way that would always fail. It then
used an overridden SimpleCookie.load method that wouldn't work for the
stdlib. And it did some completely unnecessary monkey patching.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16485 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,363dbd920e9b77da83895598f0fc9f7f835df65d,[py3] Fixed contrib.formtools tests,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b2d2cb4a314e4d084d7d726752c93afb18c55b4e,"Improved unicode-type, ASCII-convertible header handling in
HttpResponse.

Fixed #8765. Thanks to SmileyChris and semenov for working on this one.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bc4638d722c0e48cfd6bc4d8084b41445f987004,"Fixed #1569 -- HttpResponse now accepts iterators. Thanks, Maniac

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2639 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9780247a4c21f36f67ee636482399e306154f0bc,"Removed an unnecessary default argument in one __deepcopy__() method and fixed
up the one place that was mistakenly relying on that.

Refs #6308.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3dc1ede8718056cf107abf06f6f213cbe23374c8,"Fixed #236 -- Added HttpResponse.delete_cookie() method.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@668 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,23d34597615d8209de72bd819539a696ba0d1e7f,"Fixed #17965 -- Definitely dropped support for Python 2.5. Thanks jonash for the initial patch and Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17834 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f9982c5c08f02699dddf097986a6b3bed54bf5a5,"Fixed #4270 -- Don't permit deleting of items from an immutable QueryDict.
Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c35501a1280e02638c0e5bf2530cb48e15a68ad0,[py3] Fixed HttpResponse when initialized with bytes,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d796c94b03ffbe90895ec68c5041806907cb9577,[py3] Used six.reraise wherever necessary.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0afbca9c60206d5005243cb961ff813f2cd6dbf3,"Fixed #3526 -- Added content_type as an alias for mimetype to the HttpResponse constructor. It's a slightly more accurate name. Based on a patch from Simon Willison. Fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9b07b5edeb770b037dc735d48dfd6f979422f586,"Fixed #18916 -- Allowed non-ASCII headers.

Thanks Malcolm Tredinnick for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,396fcaaef92b6e5e56175b883c2cf6fcbda7ae97,"Remove all relative imports.  We have always been at war with relative imports.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17009 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9ed4217a57efc498e60bb3a2a10c57acc1ee6962,"Fixed #4337 -- Added pop() method to QueryDict. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5289 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2d4da641a6ee6c96f38336d8dc6786c07e7b3a1f,"Allow setting HttpResponse cookie expiry times with datetime objects.

Patch from SmileyChris. Fixed #7770.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5f2d9cdbb1b1a8c91dcdd55e672801536711b5ef,[py3] Fixed another regression from 2892cb0ec4.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ca9388cdaf905e12560c751ca55f8237303e4494,"Added more dict-like methods to HttpResponse as part of the response.headers -> response._headers move, and fixed a few direct uses of response.headers in Django itself. Thanks to PhiR for tracking down and slaying these bugs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6235 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,804154b9e00e1789cdfed97f3619a146a1da1d5d,"Small importing change in django.utils.httpwrappers. Refs #736.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,214d88ce86e6257437bf2702ea6ef60e0ae23fad,"Fixed #1646 -- Added HttpResponseNotAllowed, as suggested by Ian Holsman.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3144 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dfa29161e2eff676eb4aa187f76c157556dfc5db,"Fixed #14020 -- Made the `HttpResponse` class slightly more behave like a dictionary, allowing the alternative argument to be unset. Serious thanks to schmichael and moopet.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16417 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,7cfe8e8fce7677ec696f42a7d1501a97e8191a3d,"Fixed #11340 -- Prevented HttpResponseNotModified to have content/content-type

The HTTP 1.1 spec tells that the 304 response MUST NOT contain a
message body.
Thanks aparajita for the report.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a025b75f6c3021ab400224250defa2db37b8122c,[py3] Fixed iterlists usage in QueryDict,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9305c0e12d43c4df999c3301a1f0c742264a657e,"Fixed a security issue related to password resets

Full disclosure and new release are forthcoming",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,155ab07a5d40f5e0a426423cb8df3868a37a02f8,"Fixed #10188: prevent newlines in HTTP headers. Thanks, bthomas.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10711 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2892cb0ec4ebde4955f12c92183b7804558ca381,"[py3] Fixed regression introduced in 536b030363.

Refs #18764.

Reverted 536b030363 and switched to a more explicit way of avoiding
calling bytes(<int>).

This definitely deserves a refactoring. Specifically, _get_content
should just return b''.join(self). Unfortunately that's impossible
with the current tests.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b6ec8d3a9ef9315a947535bf99f5e92ae40ce99e,"Changed HttpResponse.get() to lower case the header value before looking it up. This makes it consistent will other header accesses. Fixed #5754, #5772.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6537 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,da200c5e35cdbb617572977bcbf97fae33920b2e,"Fixed #16519 -- Deprecated mimetype kwarg of HttpResponse __init__

This keyword was already deprecated in the code (supported for
backwards compatibility only), but never formally deprecated.
Thanks Paul McMillan for the report and yasar11732 for the initial
patch.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dfd4a7175119ddb422d8426dcc15902265d5a428,"Fixed #5611 -- Restricted accepted content types in parsing POST data

Thanks paulegan for the report and Preston Holmes for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,1b745be5a1c16d6f807113013ff6234e74f1b6ec,"Fixed a typo from [6164].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0ecdad8593356086ccb9365323e0718337bb2b18,"Moved parse_sql import in django.utils.httpwrappers to the top of the module, not inside QueryDict.__init__()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1503 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,880e3cfaa6040bb745ecfdbd91be0234cdb87278,"Backed out the changes in [5482] for a bit whilst some more investigation into
side-effects is done. Refs #4565.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5511 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e9a236d86c82133ab1959e4ea4760ebe6f73bd8e,"Fixed #2092: added a ""is_secure()"" method to HttpRequest which correctly handles the subtleties of mod_python's interaction with os.environ.  This one's been bugging me for about a *year*, so many many thanks to k.shaposhnikov@gmail.com for figuring it out, and Tim Shaffer for pointing out this ticket.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3410 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5b762ca8e7e3e85ba35738f0919ed48d5e23e69c,"A few styling fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7205 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3c6609ac0cbf367f2c9f166c0001d4d18a7e9ca2,"Refactored the HttpResponse sub-classes so that adding a subclass that only
changes the HTTP status code requires less code (no need to duplicate the
__init__ method).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4865 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5c09c59bc76510a5388623259b3827ee894cd66b,"[py3] Renamed `next` to `__next__` in iterators.

See PEP 3114. `next` is retained as an alias for Python 2.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3ff5b993d361b4a0c8903022d7e894b99696657d,"Fixed #1539 in trunk

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3f003a3c4b5338915e3889da8bf10577296459b3,"Fixed #17323 -- Renamed HttpRequest.raw_post_data to request.body. Thanks for the patch, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17210 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d6f0f26508eea4a16adc4de613777b82701fd31,"Fixed #6657 -- Don't set secure attribute on cookie if `secure=False` is passed, thanks Gulopine.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9908201d7fc3340b83db21298033c5b347f38d65,"Replaced some byte strings by str() calls

This is a useful trick when Python 2 awaits byte strings and
Python 3 Unicode (regular) strings.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,fc6649092aae5667ee6ed9b16ed81ebbe41a7bf4,"Fixed an inconsistancy in redirects with `META['SERVER_PORT']` being either a string or an int.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8666 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bfcecbffd37a68b5fffe81954c17aedeacb1ba22,"Changed/fixed the way Django handles SCRIPT_NAME and PATH_INFO (or
equivalents). Basically, URL resolving will only use the PATH_INFO and the
SCRIPT_NAME will be prepended by reverse() automatically. Allows for more
portable development and installation. Also exposes SCRIPT_NAME in the
HttpRequest instance.

There are a number of cases where things don't work completely transparently,
so mod_python and fastcgi users should read the relevant docs.

Fixed #285, #1516, #3414.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8015 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,03f1eb23e5c39e130744f885d480b2aa70d93088,"Fixed #5956 -- Added a better error description for non-ASCII HTTP headers.  Patch from jvloothuis.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f6c991667f6f1ab8d2fd2afc1ee2b5801e78b7e3,"Fixed #4992 -- Respect the GET request query string when creating cache keys. Thanks PeterKz and guettli for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15705 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,6a643b03d7af5777c0729ee62d35a080158fc8af,"Fixed #3875 -- Added HttpResponseBadRequest. Thanks, Scott Barr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4866 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,269e921756371bee6d35a967bc2ffe84d1ae39eb,"Fixed #9886 -- Added a file-like interface to HttpRequest. Thanks to Ivan Sagalaev for the suggestion and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f60d42846365b2bf2f1c9bc7a3007c303122a20b,"Fixed #12417 -- Added signing functionality, including signing cookies. Many thanks to Simon, Stephan, Paul and everyone else involved.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,50255e33053714ec3b363cf39e2d9a7f4b0ed83c,"Fixed #16494 by normalizing HttpResponse behavior with non-string input. HttpResponse now always converts content to string on output, regardless of input type.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16829 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c159374a33caee14d9903de58a9f4fe879e5741c,"Fixed #15852 -- Modified cookie parsing so it can handle duplicate invalid cookie names. Thanks goes to Fredrik Stålnacke for the report and to vung for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,7dc8b1a1a8a8e2771f37568a125fd51a3283b043,"Added a parameter to HttpResponse's constructor to enable explicit status code
setting. This will save us from being asked to add a subclass for every
possible HTTP status code.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c0537a961fcf412ff284a838e4394fc537c14dcf,"Fixed #6616 -- Added an is_ajax() method to HttpRequest that uses the de facto
standard header for detecting an XmlHttpRequest call. Thanks, Daniel Lindsley.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7334 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8f002867b2aa414c4f98bbd7992e3b44825b228a,"Cleaned up the QueryDict implementation.

- Use super().
- Don't poke at internals.
- Don't override methods for no reason.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ebc773ada3e4f40cf5084268387b873d7fe22e8b,"Replaced many smart_bytes by force_bytes

In all those occurrences, we didn't care about preserving the
lazy status of the strings, but we really wanted to obtain a
real bytestring.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d7dfab59ead97b35c6f6786784225f377783e376,"Replaced cStringIO.StringIO by io.BytesIO.

Also replaced StringIO.StringIO by BytesIO in some other appropriate
places. StringIO is not available in Python 3.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,6d029359e955a6a5fd7e4024ddd9159004c30d20,"Fixed bug with our SimpleCookie regarding load/custom Morsel, and simplified implementation

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16526 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e04230e2e406dcf74eeec8d3c95c84362c7da780,"[py3] Ported django.http according to PEP 3333.

Perfomed some style cleanup while I was in the area.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3180f932369e3a6a1604c5ea98ee7063eeeaf1dd,"Fixed #13572: copies of QueryDicts now have their encoding set correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13314 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a935d436e9e11e1801ca5e9421a055e1f04eb125,"Fixed #15863 - SimpleCookies are not correctly serialized with the file or database cache backends

Thanks to rakuco for the report and for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17200 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ad077ccbc03f11c3db3951aab110ec98c5907729,"Fixed #5445: added some compatibility code for the lack of __iter__ in Jython 2.2. Thanks, Leo Soto.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6211 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8d9982c5a572358f0f3fc3402766ce9e3a06d90c,"Fixed #4815 -- Fixed decoding of request parameters when the input encoding is
not UTF-8. Thanks, Jordan Dimov.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5644 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,925c711cf75072526ced0ae8f18d561dca612092,"Fixed #2503 -- Fixed HttpResponse.delete_cookie() to work properly. It now takes path and domain as optional keyword arguments.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,991bb6124206a503545f5963e5048af45b1751eb,"Fixed #736 -- Changed behavior of QueryDict items() to be more consistent, fixed mutability holes, gave MultiValueDict many more dictionary methods and added unit tests. Thanks, Kieran Holland. This is slightly backwards-incompatible if you happened to rely on the behavior of QueryDict.items(), which is highly unlikely.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1504 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4100eab823202a26a7b8227d9b2d1a8c7811c1d7,"Fixed the breakage in [6164] in a different, better way: HttpResponse now implements __contains__ along with __get/set/delitem__, as it should. This is a bit more robust, and should prevent similar breakage from user code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e2b4eddc11b391bc0047032776e9ca7c2f9328b3,Used the decorator syntax for properties in django.http,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0ce6636102d9e1c8c158c0e3eadb5a5db6b06a71,"Fixed #17277 - Wrap IOErrors raised due to client disconnect in a specific IOError subclass so they can be distinguished from more serious errors. Thanks David Lowe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2659429df46d0d79ad7a93d50d0ccdab45b55b53,"Fixed edge case that breaks the test suite on versions of Python > 2.6.4

Before http://svn.python.org/view?view=rev&revision=74647 it was possible to
pass a SimpleCookie to load, but this no longer works due to a different bug
in Python the said revision fixed.

My guess is a SimpleCookie was never intended to be passed through load which
is perfectly reasonable.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,db2f9bfae173b565215a9f7320d7a45d0532f2fe,"Fixed #16178 - Cleanup request classes' `__repr__()`

Thanks to julien for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,136752ca9a87be908f9ec1e398bbd56b0c75222c,"Added 'method' attribute to HttpRequest objects

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,87e6939372790662752e227557415d3f4e180992,"Fixed #10267 -- Correctly handle IRIs in HttpResponse.build_absolute_uri().

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bce890ace4a97ab7a7a9b918f1452c6592d9b08e,"Fixed #16584 -- Fixed a bunch of typos in code comments. Thanks, Bernhard Essl.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e60c26d5bb9960866700eccd3392711e523a90e6,"Fixed #5562 -- Changed settings of Expires heading when expiring a cookie to
work with non-compliant browsers (also removes a non-compliance feature of our
own). Thanks, caifen1985@gmail.com and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6549 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5bdf1da730368a16beaa077d91457ff625f06bc4,"Fixed #394 -- Trailing-slash redirects now retain duplicate name-value query-string pairs, instead of the first of each pair. Added a QueryDict.urlencode() method to accomplish this. Updated the docs. Thanks for the good catch, mlambert

git-svn-id: http://code.djangoproject.com/svn/django/trunk@613 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ca07fda2efea24cb43423b884fa4648d44e52963,"[py3] Switched to Python 3-compatible imports.

xrange/range will be dealt with in a separate commit due to the huge
number of changes.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bfb4ed1425adb38e5c7b57a2aa9ab5479fc2123c,"Negligible spacing fixes to comments in django/http/__init__.py

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,23f94f0741100233862922a8e77a3ac9dc1833e9,Fixed #18561 -- Made HttpResponse.tell() support non-ascii chars,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3bb340271ceb5ac398a2386f64f7e903571bc8ac,"Changed settings imports from [2639] to use 'from django.conf import settings', to make it easier to merge to magic-removal

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c3d7aad6d0911bb84120d7c8d41923c895784b21,"Fixed #2560 -- Add close() support to HttpResponse iterators. Thanks, Ivan
Sagalaev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3791 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,646f2f6101cda3e20908928de44739dfff596b0f,"Fixed #7494 -- Fixed build_absolute_url() for some types of (uncommon) URLs.
Patch from tom@almostobsolete.net and RobotAdam.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8490 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dd799591fc9f6ab0d988e0dc82f47276bdab6b2a,"Backwards-incompatible change: renamed HttpResponse.headers to HttpResponse._headers to deliberately break anyone accessing headers directly instead of through the case-insensitive proxies on HttpResponse itself. See BackwardsIncompatibleChanges for more details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8bb46d8b7c808bb366c7e15c46e5476e2b2b51a1,"Fixed #15679 - regression in HttpRequest.POST and raw_post_data access.

Thanks to vkryachko for the report.

This also fixes a slight inconsistency with raw_post_data after parsing of a
multipart request, and adds a test for that.  (Previously accessing
raw_post_data would have returned the empty string rather than raising an
Exception).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15938 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f2477b6450afb99b5c34c54cfd121ddfbabc904e,"Fixed #7233 -- Ensured that QueryDict classes are always unpicklable. This
problem only arose on some systems, since it depends upon the order in which
the attributes are pickled. Makes reliable testing kind of tricky.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d393e1bd979984dbafa8fd040aae6223209565e,[py3] Fixed HTTP header serialization,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c8e2f7591d6ea3545aeb32fa4c92cbeb9a622546,"Fixed #17931 -- Accepted aware datetimes to set cookies expiry dates. Thanks jaddison for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,706659d2bb6af350903a5b5ee9d1e09f95f6a9a3,"Changed the way we handle HTTP headers internally so that they appear
case-insensitive, but the original case is preserved for output. This increases the chances of working with non-compliant clients without changing the external interface. Fixed #2970.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6546 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,89e0e8b6bc861bb95e55bd5e255e756fe3be1cf2,"Fixed our SimpleCookie overriding and use to be compatible with a (potential) stdlib SimpleCookie that fixes http://bugs.python.org/issue2193

The previous code tested the stdlib in a way that would always fail. It then
used an overridden SimpleCookie.load method that wouldn't work for the
stdlib. And it did some completely unnecessary monkey patching.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16485 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,363dbd920e9b77da83895598f0fc9f7f835df65d,[py3] Fixed contrib.formtools tests,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b2d2cb4a314e4d084d7d726752c93afb18c55b4e,"Improved unicode-type, ASCII-convertible header handling in
HttpResponse.

Fixed #8765. Thanks to SmileyChris and semenov for working on this one.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bc4638d722c0e48cfd6bc4d8084b41445f987004,"Fixed #1569 -- HttpResponse now accepts iterators. Thanks, Maniac

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2639 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9780247a4c21f36f67ee636482399e306154f0bc,"Removed an unnecessary default argument in one __deepcopy__() method and fixed
up the one place that was mistakenly relying on that.

Refs #6308.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3dc1ede8718056cf107abf06f6f213cbe23374c8,"Fixed #236 -- Added HttpResponse.delete_cookie() method.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@668 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,23d34597615d8209de72bd819539a696ba0d1e7f,"Fixed #17965 -- Definitely dropped support for Python 2.5. Thanks jonash for the initial patch and Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17834 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f9982c5c08f02699dddf097986a6b3bed54bf5a5,"Fixed #4270 -- Don't permit deleting of items from an immutable QueryDict.
Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c35501a1280e02638c0e5bf2530cb48e15a68ad0,[py3] Fixed HttpResponse when initialized with bytes,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d796c94b03ffbe90895ec68c5041806907cb9577,[py3] Used six.reraise wherever necessary.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0afbca9c60206d5005243cb961ff813f2cd6dbf3,"Fixed #3526 -- Added content_type as an alias for mimetype to the HttpResponse constructor. It's a slightly more accurate name. Based on a patch from Simon Willison. Fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9b07b5edeb770b037dc735d48dfd6f979422f586,"Fixed #18916 -- Allowed non-ASCII headers.

Thanks Malcolm Tredinnick for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,396fcaaef92b6e5e56175b883c2cf6fcbda7ae97,"Remove all relative imports.  We have always been at war with relative imports.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17009 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9ed4217a57efc498e60bb3a2a10c57acc1ee6962,"Fixed #4337 -- Added pop() method to QueryDict. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5289 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2d4da641a6ee6c96f38336d8dc6786c07e7b3a1f,"Allow setting HttpResponse cookie expiry times with datetime objects.

Patch from SmileyChris. Fixed #7770.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5f2d9cdbb1b1a8c91dcdd55e672801536711b5ef,[py3] Fixed another regression from 2892cb0ec4.,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ca9388cdaf905e12560c751ca55f8237303e4494,"Added more dict-like methods to HttpResponse as part of the response.headers -> response._headers move, and fixed a few direct uses of response.headers in Django itself. Thanks to PhiR for tracking down and slaying these bugs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6235 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,804154b9e00e1789cdfed97f3619a146a1da1d5d,"Small importing change in django.utils.httpwrappers. Refs #736.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,214d88ce86e6257437bf2702ea6ef60e0ae23fad,"Fixed #1646 -- Added HttpResponseNotAllowed, as suggested by Ian Holsman.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3144 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dfa29161e2eff676eb4aa187f76c157556dfc5db,"Fixed #14020 -- Made the `HttpResponse` class slightly more behave like a dictionary, allowing the alternative argument to be unset. Serious thanks to schmichael and moopet.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16417 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,7cfe8e8fce7677ec696f42a7d1501a97e8191a3d,"Fixed #11340 -- Prevented HttpResponseNotModified to have content/content-type

The HTTP 1.1 spec tells that the 304 response MUST NOT contain a
message body.
Thanks aparajita for the report.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a025b75f6c3021ab400224250defa2db37b8122c,[py3] Fixed iterlists usage in QueryDict,False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9305c0e12d43c4df999c3301a1f0c742264a657e,"Fixed a security issue related to password resets

Full disclosure and new release are forthcoming",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,155ab07a5d40f5e0a426423cb8df3868a37a02f8,"Fixed #10188: prevent newlines in HTTP headers. Thanks, bthomas.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10711 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,2892cb0ec4ebde4955f12c92183b7804558ca381,"[py3] Fixed regression introduced in 536b030363.

Refs #18764.

Reverted 536b030363 and switched to a more explicit way of avoiding
calling bytes(<int>).

This definitely deserves a refactoring. Specifically, _get_content
should just return b''.join(self). Unfortunately that's impossible
with the current tests.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b6ec8d3a9ef9315a947535bf99f5e92ae40ce99e,"Changed HttpResponse.get() to lower case the header value before looking it up. This makes it consistent will other header accesses. Fixed #5754, #5772.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6537 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,da200c5e35cdbb617572977bcbf97fae33920b2e,"Fixed #16519 -- Deprecated mimetype kwarg of HttpResponse __init__

This keyword was already deprecated in the code (supported for
backwards compatibility only), but never formally deprecated.
Thanks Paul McMillan for the report and yasar11732 for the initial
patch.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,dfd4a7175119ddb422d8426dcc15902265d5a428,"Fixed #5611 -- Restricted accepted content types in parsing POST data

Thanks paulegan for the report and Preston Holmes for the review.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,1b745be5a1c16d6f807113013ff6234e74f1b6ec,"Fixed a typo from [6164].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,0ecdad8593356086ccb9365323e0718337bb2b18,"Moved parse_sql import in django.utils.httpwrappers to the top of the module, not inside QueryDict.__init__()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1503 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,880e3cfaa6040bb745ecfdbd91be0234cdb87278,"Backed out the changes in [5482] for a bit whilst some more investigation into
side-effects is done. Refs #4565.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5511 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e9a236d86c82133ab1959e4ea4760ebe6f73bd8e,"Fixed #2092: added a ""is_secure()"" method to HttpRequest which correctly handles the subtleties of mod_python's interaction with os.environ.  This one's been bugging me for about a *year*, so many many thanks to k.shaposhnikov@gmail.com for figuring it out, and Tim Shaffer for pointing out this ticket.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3410 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5b762ca8e7e3e85ba35738f0919ed48d5e23e69c,"A few styling fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7205 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3c6609ac0cbf367f2c9f166c0001d4d18a7e9ca2,"Refactored the HttpResponse sub-classes so that adding a subclass that only
changes the HTTP status code requires less code (no need to duplicate the
__init__ method).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4865 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,5c09c59bc76510a5388623259b3827ee894cd66b,"[py3] Renamed `next` to `__next__` in iterators.

See PEP 3114. `next` is retained as an alias for Python 2.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3ff5b993d361b4a0c8903022d7e894b99696657d,"Fixed #1539 in trunk

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3f003a3c4b5338915e3889da8bf10577296459b3,"Fixed #17323 -- Renamed HttpRequest.raw_post_data to request.body. Thanks for the patch, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17210 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d6f0f26508eea4a16adc4de613777b82701fd31,"Fixed #6657 -- Don't set secure attribute on cookie if `secure=False` is passed, thanks Gulopine.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,9908201d7fc3340b83db21298033c5b347f38d65,"Replaced some byte strings by str() calls

This is a useful trick when Python 2 awaits byte strings and
Python 3 Unicode (regular) strings.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,fc6649092aae5667ee6ed9b16ed81ebbe41a7bf4,"Fixed an inconsistancy in redirects with `META['SERVER_PORT']` being either a string or an int.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8666 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,bfcecbffd37a68b5fffe81954c17aedeacb1ba22,"Changed/fixed the way Django handles SCRIPT_NAME and PATH_INFO (or
equivalents). Basically, URL resolving will only use the PATH_INFO and the
SCRIPT_NAME will be prepended by reverse() automatically. Allows for more
portable development and installation. Also exposes SCRIPT_NAME in the
HttpRequest instance.

There are a number of cases where things don't work completely transparently,
so mod_python and fastcgi users should read the relevant docs.

Fixed #285, #1516, #3414.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8015 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,03f1eb23e5c39e130744f885d480b2aa70d93088,"Fixed #5956 -- Added a better error description for non-ASCII HTTP headers.  Patch from jvloothuis.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f6c991667f6f1ab8d2fd2afc1ee2b5801e78b7e3,"Fixed #4992 -- Respect the GET request query string when creating cache keys. Thanks PeterKz and guettli for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15705 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,6a643b03d7af5777c0729ee62d35a080158fc8af,"Fixed #3875 -- Added HttpResponseBadRequest. Thanks, Scott Barr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4866 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,269e921756371bee6d35a967bc2ffe84d1ae39eb,"Fixed #9886 -- Added a file-like interface to HttpRequest. Thanks to Ivan Sagalaev for the suggestion and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f60d42846365b2bf2f1c9bc7a3007c303122a20b,"Fixed #12417 -- Added signing functionality, including signing cookies. Many thanks to Simon, Stephan, Paul and everyone else involved.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,50255e33053714ec3b363cf39e2d9a7f4b0ed83c,"Fixed #16494 by normalizing HttpResponse behavior with non-string input. HttpResponse now always converts content to string on output, regardless of input type.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16829 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c159374a33caee14d9903de58a9f4fe879e5741c,"Fixed #15852 -- Modified cookie parsing so it can handle duplicate invalid cookie names. Thanks goes to Fredrik Stålnacke for the report and to vung for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,7dc8b1a1a8a8e2771f37568a125fd51a3283b043,"Added a parameter to HttpResponse's constructor to enable explicit status code
setting. This will save us from being asked to add a subclass for every
possible HTTP status code.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c0537a961fcf412ff284a838e4394fc537c14dcf,"Fixed #6616 -- Added an is_ajax() method to HttpRequest that uses the de facto
standard header for detecting an XmlHttpRequest call. Thanks, Daniel Lindsley.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7334 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8f002867b2aa414c4f98bbd7992e3b44825b228a,"Cleaned up the QueryDict implementation.

- Use super().
- Don't poke at internals.
- Don't override methods for no reason.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ebc773ada3e4f40cf5084268387b873d7fe22e8b,"Replaced many smart_bytes by force_bytes

In all those occurrences, we didn't care about preserving the
lazy status of the strings, but we really wanted to obtain a
real bytestring.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,d7dfab59ead97b35c6f6786784225f377783e376,"Replaced cStringIO.StringIO by io.BytesIO.

Also replaced StringIO.StringIO by BytesIO in some other appropriate
places. StringIO is not available in Python 3.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,6d029359e955a6a5fd7e4024ddd9159004c30d20,"Fixed bug with our SimpleCookie regarding load/custom Morsel, and simplified implementation

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16526 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,e04230e2e406dcf74eeec8d3c95c84362c7da780,"[py3] Ported django.http according to PEP 3333.

Perfomed some style cleanup while I was in the area.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3180f932369e3a6a1604c5ea98ee7063eeeaf1dd,"Fixed #13572: copies of QueryDicts now have their encoding set correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13314 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,a935d436e9e11e1801ca5e9421a055e1f04eb125,"Fixed #15863 - SimpleCookies are not correctly serialized with the file or database cache backends

Thanks to rakuco for the report and for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17200 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,ad077ccbc03f11c3db3951aab110ec98c5907729,"Fixed #5445: added some compatibility code for the lack of __iter__ in Jython 2.2. Thanks, Leo Soto.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6211 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8d9982c5a572358f0f3fc3402766ce9e3a06d90c,"Fixed #4815 -- Fixed decoding of request parameters when the input encoding is
not UTF-8. Thanks, Jordan Dimov.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5644 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1abcf3a808b35abae5d425ed4d44cb6e886dc769,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eb31d845323618d688ad429479c6dda973056136,69331bb851c34f05bc77e9fc24020fe6908b9cd5,Added stub release notes for 3.0.3.,False
eb31d845323618d688ad429479c6dda973056136,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
eb31d845323618d688ad429479c6dda973056136,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
eb31d845323618d688ad429479c6dda973056136,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
eb31d845323618d688ad429479c6dda973056136,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
eb31d845323618d688ad429479c6dda973056136,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
eb31d845323618d688ad429479c6dda973056136,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
eb31d845323618d688ad429479c6dda973056136,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
eb31d845323618d688ad429479c6dda973056136,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
eb31d845323618d688ad429479c6dda973056136,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
eb31d845323618d688ad429479c6dda973056136,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
eb31d845323618d688ad429479c6dda973056136,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
eb31d845323618d688ad429479c6dda973056136,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,69331bb851c34f05bc77e9fc24020fe6908b9cd5,Added stub release notes for 3.0.3.,False
eb31d845323618d688ad429479c6dda973056136,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
eb31d845323618d688ad429479c6dda973056136,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
eb31d845323618d688ad429479c6dda973056136,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
c401ae9a7dfb1a94a8a61927ed541d6f93089587,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
fbe2eead2fa9d808658ca582241bcacb02618840,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,d77236960a5d3792bf9514fb7834d2813f531054,"Fixed #9548 -- Correctly detect existence of empty sessions with cache backend.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
fbe2eead2fa9d808658ca582241bcacb02618840,d77236960a5d3792bf9514fb7834d2813f531054,"Fixed #9548 -- Correctly detect existence of empty sessions with cache backend.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c716c1dc721e74ef14b2ac25e3510024c79e070,Fixed #27256 -- Changed Select widget's selected attribute to use HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3cb63b0e473568cb5158d7a4f13cb7e1c9ee89f5,Refs #26502 -- Added choices to Form.__getitem__() KeyError message.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,be29329ccd49a84d3f7238111aebf97c4aaac581,"Fixed #16820 -- Treated '0' value as True for checkbox inputs

Thanks Dan Fairs for the report and the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,eba9a9b7f72995206af867600d6685b5405f172a,Refs #32338 -- Added Boundfield.legend_tag().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1966054febbb96b713db27513617eabdbd70957b,"Fixed #22915 -- Document backward incompatible changes in the ValidationError constructor.

This patch also fixes update_error_dict to better handle the use case described
in this ticket, previously the type of the provided container could be lost in
some conditions.

Thanks Russell Keith-Magee for the report and Tim Graham for review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c8c9dbfc63b761a732d85e1ce87539f3e65e660d,Completed test coverage for BoundField.css_classes().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,49275c548887769cd70bbd85a3b125491f0c4062,Fixed #30261 -- Prevented Form._html_output() from mutating errors if hidden fields have errors.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,47d238b69602711c06c369a5555bb554a4b3f7fb,Fixed #29041 -- Changed SelectMultiple's multiple attribute to HTML5 boolean syntax.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,12806758347dfd63a3cd1bfc0d925c09fdbd9cff,"Fixed #15511 -- Allow optional fields on ``MultiValueField` subclasses.

The `MultiValueField` class gets a new ``require_all_fields`` argument that
defaults to ``True``. If set to ``False``, individual fields can be made
optional, and a new ``incomplete`` validation error will be raised if any
required fields have empty values.

The ``incomplete`` error message can be defined on a `MultiValueField`
subclass or on each individual field. Skip duplicate errors.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,74bb013cc1edb0f2fcf24c750d4d942cae507765,Fixed #26905 -- Allowed using MultiValueDict-like objects as form data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cb82ded4b26f514c11349c9d13287bb3fb9268c9,Refs #32339 -- Added rendering tests for forms with CheckboxSelectMultiple and SelectMultiple widgets.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,788441c6ab4e0167aadc155a4362a87694e38aa5,Refs #32924 -- Changed test_initial_datetime_values() to use subTests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4cccb85e292fea01b3459cd97d751ed35179a7b7,"Fixed #19997 -- Added custom EMPTY_VALUES to form fields

Thanks Loic Bistuer for the report and the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7a718f0f3a9d08b2f8159cdb8b665e5b84cab83e,"Fixed #17127 -- Made field validators list independent per form instance. Thanks claudep for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17046 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ab686022f8619b57e7f851fb2ce8617583d70d8d,"Fixed #20211: Document backwards-incompatible change in BoundField.label_tag

Also cleaned up label escaping and consolidated the test suite regarding
label_tag.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d3f5f219f5f42ac3504ed626dcb92f4ee2dc3d5f,"Fixes #10427 -- Abstract the value generation of a BoundField

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14734 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,91e8b95d5ba8e296148ba6e2a1c856319c6e6ebc,Refs #31026 -- Moved Template tests to separate class.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,65441bbdb02427655869c42791a0bc5a9c631292,Fixed #24391 -- Made BoundField.value() cache callable values.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff9e8eccf89fc1dce441736c39dcb6e218ca8940,Removed unnecessary semicolons.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5942ab5eb165ee2e759174e297148a40dd855920,"Refs #32338 -- Made RadioSelect/CheckboxSelectMultiple render in <div> tags.

This improves accessibility for screen reader users.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d368784bacc7e58b426f29937ee842aa14d439ad,Fixed #28171 -- Added an exception if Form's empty_permitted and use_required_attribute arguments conflict.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0004daa536890fdb389c895baaa21bea6a1f7073,"Used 4 space hanging indent for dictionaries.

Thanks Mariusz Felisiak for auditing.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4ca508a68916dd43da45fd6e8b9004824a62d9c8,Refs #31026 -- Added extra form render tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4dcc6493418c78db07761180bf6265f5b2bbccbf,Fixed #24497 -- Added Widget.supports_microseconds attribute,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5eb81ce44532596ecc1c781d93f3421a467a6206,"Fixed #22533 -- Added label_suffix parameter to form fields.

Fields can now receive the `label_suffix` attribute, which will override
a form's `label_suffix`.

This enhances the possibility to customize form's `label_suffix`, allowing
to use such customizations while using shortcuts such as
`{{ form.as_p }}`.

Note that the field's own customization can be overridden at runtime by
using the `label_prefix` parameter to `BoundField.label_tag()`.

Refs #18134.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ffcf1a8ebfbdc8e3afac84aed88d6ed29a57c72b,Fixed #31118 -- Made FileInput to avoid the required attribute when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b41268135995cef46d40e550f9301fab20cf330d,Fixed #26267 -- Fixed BoundField to reallow slices of subwidgets.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,5b6181f4d58f63e7d2b52ab94e162e5ce8980f12,Fixed #27922 -- Added ErrorDict.get_json_data().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,35a08b8541c856a51b2ab718e0a2fe060debfa2a,Fixed #17210 -- Made NullBooleanSelect use unknown/true/false as query data.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,469e76929976a7070b0bf6899a314d19e6e8e485,Refs #32924 -- Changed test_get_initial_for_field() to use subTests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4c60c3edff4312303e1021fca47ed52c2152d285,"Fixed #33419 -- Restored marking forms.Field.help_text as HTML safe.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.

Thanks Matt Westcott for the report.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d89053585e11e869efcc9debb1c311b47b5e20ea,Improved error message when index in __getitem__() is invalid.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8e2029f8ddd744acb97e236cb0703d94b12d5ff8,"Removed import * in tests.

Thanks to flake8 path/to/file.py | awk -F ' ' '{ print $5 }' | sort | uniq",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,eaeea6f94701547ce1b50dbcf5cf71460e9e4c91,Fixed #24714 -- Used more specific assertions than assertEqual in tests.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0dc25526d8daaaa59968d4b1b597968e197f040c,Fixed #32924 -- Changed BaseForm.get_initial_for_field() to remove microseconds when needed.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4f336f66523001b009ab038b10848508fd208b3b,Fixed #26747 -- Used more specific assertions in the Django test suite.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1ef4aeab403f7fb74c0b9b11fde854fd03afc40c,"Fixed #25078 -- Added support for disabled form fields

Thanks Keryn Knight and Tim Graham for the reviews.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,21046e77734278cea871dce922220bf29aa5b7b4,"Fixed #28249 -- Removed unnecessary dict.keys() calls.

iter(dict) is equivalent to iter(dict.keys()).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a6691e5dcfdfd1529987be3bdcf06e7ab9948356,"Fixed #23167 -- Added BaseForm.__repr__()

Thanks Keryn Knight for the idea.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,db1fc5cd3c5d36cdb5d0fe4404efd6623dd3e8fb,Fixed #32855 -- Corrected BoundWidget.id_for_label() with custom auto_id.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2fd7fc134cf0c0685ceac22fd858509aa43f819f,Refs #17413 -- Added isinstance backward compatibility on ErrorList.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,be0bab1bb8da80402248cd1fa22fd4cc09b34fe7,"Fixed #11725 -- Made possible to create widget label tag without ""for""

Thanks Denis Martinez for the report and initial patch, and
Sergey Kolosov for bringing the patch up to date.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11f0899bbe7c04dc6109f57c3b36ed8621b8f08e,"Fixed #11776 -- Added CSS class for non-field/top of form errors.

Thanks Daniel Pope for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3128f3d38d1db0bc01da9a4bf4be81119079d73a,Fixed #20618 -- Fixed regression in `BoundField.label_tag`.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f5c6d3c8d9fa2158734858fa0a7ac917c384cb97,Fixed #27068 -- Unified form field initial data retrieval.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,90a33ab2ceddef7f2cdd11612f77ea9296cc7fb9,Fixed #32920 -- Changed BaseForm to access its values through bound fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cbfb8ed53b31ec9701f5fb8e519a8644fd4c8095,"Fixed a regression in forms changed_data

Thanks Loic Bistuer for spotting the regression and the initial
patch. Refs #16612.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f563c339ca2eed81706ab17726c79a6f00d7c553,"Fixed #20867 -- Added the Form.add_error() method.

Refs #20199 #16986.

Thanks @akaariai, @bmispelon, @mjtamlyn, @timgraham for the reviews.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a350bfa6f44befff8779dbbdd72c9760bf5df959,Fixed #13009 -- Added BoundField.widget_type property.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,066bf42675040abd7b1a42e5559890e5f9881058,"Removed forced typecasting of help_text/label Field arguments

In any case, setting those variables to non-ascii utf-8 bytestrings
is now considered a programming error.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,362813d6287925b8f63f0b107c55a74d95f5825e,Fixed hanging indentation in various code.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c23b3717be71e4b2e5a32f156ef0a7b4703d012d,Fixed #21962 -- Added escape_html flag to ErrorDict.as_json(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,109b33f64c8d3f48c9e0bd3ea8d42fe6f3cb02b7,Refs #23919 -- Simplified assertRaisesRegex()'s that accounted for Python 2.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,04564eb74d2d92eaf88b22ab8cec7ef45978111e,Fixed #26129 -- Made invalid forms display initial values of disabled fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,22529d41b26137ac87c5e08a6c19e6e91552756e,"Fixed #15127 -- Properly copy the choices of choice fields. Thanks, dready and Julian Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16416 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4884a87e022056eda10534c13d74e49b8cdda632,"Fixed #33134 -- Fixed recursion depth error when rendering Form with BoundFields.

Regression in 456466d932830b096d39806e291fe23ec5ed38d5.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,a28d1b38e55cf588cfaae97de6a575d5c9f90a96,Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't share error messages.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7ac8380799eedb374621317b62ccf026d86ea245,Fixed #22318 -- Added Form.has_error() to easily check if a given error has happened.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4df7e8483b2679fc1cba3410f08960bac6f51115,Fixed #24788 -- Allowed Forms to specify a prefix at the class level.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c045d00dc37f4eb082e022ac12b659345413d7e,"Fixed #14184 -- Enabled running the validators in MultiValueFields. Thanks, paulcollins.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17430 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7d60659e22c869149cc17f2568a8e073412ea219,Fixed #25300 -- Added unit tests for BoundField.id_for_label,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c09bf8d76770d39a4d9545b67598cd05adee281b,"Fixed #28058 -- Restored empty BoundFields evaluating to True.

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dae81c6ec62a76c1f28745ae3642c2d4a37ce259,Refs #25300 -- Fixed reference to TextInput in a test.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,535809e12161d28dacaf5161436fc05a9bb064aa,Fixed #25294 -- Allowed custom BoundFields on forms.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,121fd109de09ece4e263e508f9034df9b583da46,"Fixed #5524 -- Do not remove cleaned_data when a form fails validation

cleaned_data is no longer deleted when form validation fails but only
contains the data that did validate.
Thanks to the various contributors to this patch (see ticket).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a6431db5461b88e691d770abdba6a2793ef699d,Refs #29205 -- Added MultiValueField test for rendering of optional subfields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,416a8580232075d569cf3c386a97067884c67a60,"Fixed #17922 -- Added required_css_class to form label.

Thanks hanson2010 for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,66ec9ee441618894c1ccebdcdd5eb4d7fbf4a6d3,"Fixed #22378 -- Updated \d to [0-9]+ in urlpatterns of docs and tests.

Thanks tomwys for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,aaecf038cae61f114db396f74e06759c95f21e93,Fixed #27370 -- Prevented Select widget from using 'required' with a non-empty first value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8676318d2dae9a570d2314e4e6da8c00aaf2e2a0,"Fixed #20805 -- Removed an extra colon beside checkboxes in the admin.

Thanks CollinAnderson for the report.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2366100872ec17dde06abc63c1ad74dcf746b134,Removed unneeded force_text calls in the test suite,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3ce9829b615336b0f3ac39b080c27fc8cf5af483,Fixed #17413 -- Serialization of form errors along with all metadata.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1884bf8e8e9fb3f9f44a9ec216aca96f63974268,Fixed #12437 -- Added css_classes to Form._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,053de6131af83c63ec17d38578889c71de913d24,"Fixed #5749 -- Added field_name as a key in the _html_output dict

Thanks SmileyChris for the suggestion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b8239cae19128012db453a2e17c4dd2def421018,Refs #28009 -- Added empty_value tests for CharField subclasses.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ab56e64deb64498b4acfe9e71619b45603c552f,"[4.2.x] Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,cdcf4164bec9dc09465424d7042c3f9d4f0f1fdc,Fixed #29528 -- Made URLValidator reject invalid characters in the username and password.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,46b3e3ffdc25b5a42762df20e536401fc512c5f3,Fixed #29065 -- Made django.core.validators only load Pillow if needed.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7c6b66383da5f9a67142334cd2ed2d769739e8f1,"Fixed #31311 -- Removed unneeded escapes in validator regexes.

Special characters lose their special meaning inside sets of characters.

""-"" lose its special meaning if it's placed as the first or last
character.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,681d2599ee224826de0050f92f65fdf96bb6a0ca,Fixed #28165 -- Ignored case in FileExtensionValidator's allowed_extensions.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,fc8efc2d9e693923d3da272e0978e5b0631006f9,"Fixed #19034 -- Added proper i18n pluralization for max/min length validation messages

This was made possible by commit 3f1a0c0040b9. Thanks Evil Clay
for the report and Alexey Boriskin his work on the ticket.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b1afebf882db5296cd9dcea26ee66d5250922e53,"Fixed #26204 -- Reallowed dashes in top-level domains for URLValidator.

Thanks Shai Berger for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,27c09043da52ca1f02605bf28600bfd5ace95ae4,Refs #31670 -- Renamed whitelist argument and attribute of EmailValidator.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,75ed5900321d170debef4ac452b8b3cf8a1c2384,Fixed #24636 -- Added model field validation for decimal places and max digits.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2f121dfe635b3f497fe1fe03bc8eb97cdf5083b3,"Fixed #17051 -- Removed some 'invalid' field error messages

When the 'invalid' error message is set at field level, it masks
the error message raised by the validator, if any.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e1e81aa1c4427411e3c68facdd761229ffea6f6f,"Fixed #32713, Fixed CVE-2021-32052 -- Prevented newlines and tabs from being accepted in URLValidator on Python 3.9.5+.

In Python 3.9.5+ urllib.parse() automatically removes ASCII newlines
and tabs from URLs [1, 2]. Unfortunately it created an issue in
the URLValidator. URLValidator uses urllib.urlsplit() and
urllib.urlunsplit() for creating a URL variant with Punycode which no
longer contains newlines and tabs in Python 3.9.5+. As a consequence,
the regular expression matched the URL (without unsafe characters) and
the source value (with unsafe characters) was considered valid.

[1] https://bugs.python.org/issue43882 and
[2] https://github.com/python/cpython/commit/76cd81d60310d65d01f9d7b48a8985d8ab89c8b4",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7fe60ae64ad712430bce26af7812ed4452a91af0,"Fixed #22588 -- Fix RegexValidator __eq__

Compare parameters instead of re.pattern instances, and add the other
parameters to the comparison. Also add a __ne__ to make assertNotEqual
work properly.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,34d098665d9423c0b70add5b8c8231fff9d0f774,Add a specific error message for URLValidator,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2bb1027d6bcdad59624a9d08701e0d2e4a9c0ba7,"Fixed #25322 -- Lazily compiled core.validators regular expressions.

This speeds up import of 'django.core.validators' which can save a
few hundred milliseconds when importing the module for the first
time. It can be a significant speedup to the django-admin command.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e1d787f1b36d13b95187f8f425425ae1b98da188,"Fixed CVE-2021-33571 -- Prevented leading zeros in IPv4 addresses.

validate_ipv4_address() was affected only on Python < 3.9.5, see [1].
URLValidator() uses a regular expressions and it was affected on all
Python versions.

[1] https://bugs.python.org/issue36384",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,505fec6badba0622bbf97bb659188c3d62a9bc58,"Capitalized Unicode in docs, strings, and comments.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,e8b4feddc34ffe5759ec21da8fa027e86e653f1c,Fixed #33367 -- Fixed URLValidator crash in some edge cases.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,82976e5c3f7abf20dfd4c3cc5aa586e57edef104,"Fixed #25637 -- Added URLValidator hostname length validation.

URLValidator now validates the maximum length of a hostname and the
maximum length of all labels inside the hostname.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,90d7b912b9c451dfdfb38f5f1f598af3b879257f,Fixed #28201 -- Added ProhibitNullCharactersValidator and used it on CharField form field.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4d0c5f61427a8e67552ee2d777fffbadc7aff3b2,Fixed #22255 -- Added support for specifying re flags in RegexValidator,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,f636f0bb86a5ff3a61401f5ec7ea5d3392edd30f,"Fixed #29007 -- Fixed DecimalValidator crash on NaN, SNan, Inf, and Infinity values.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,12b4280444b58c94197255655e284e4103fe00a9,Fixed #21548 -- Added FileExtensionValidator and validate_image_file_extension.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ee46722cb9c860abec4d370adff052d0c1622d34,Fixed typo in regex for IPv6 literals in EmailValidator.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,424eb67867162032d92e0bfe3403f051765de805,"Fixed validation of email addresses when the local part contains an @.

See also BaseUserManager.normalize_email -- it uses rsplit.

Refs #4833.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,3e64f3d0fc285080b42b78b67565b6ed939f9a24,"Fixed #24531 -- Improved CommaSeparatedIntegerField validation.

`','`, `'1,,1'`, `',1'` etc. are no longer considered as valid
comma-separated integer lists.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,24cae0bedc51093b363c323af555946a8edea1a1,Fixed #29860 -- Allowed BaseValidator to accept a callable limit_value.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4c97101b1f0815a3f311fc77483b935fe62966bb,remove a bunch of unnescesarry iterkeys() calls,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,bcb693ebd4d3743cb194c6fd05b2d70fb9696a4c,"Revert ""Fixed #23892 -- Made deconstructible classes forwards compatible""

This reverts commit f36151ed169813f2873e13ca9de616cfa4095321.

Adding kwargs to deconstructed objects does not achieve useful
forward-compatibility in general, since additional arguments are silently
dropped rather than having their intended effect. In fact, it can make the
failure more difficult to diagnose. Thanks Shai Berger for discussion.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,bdf3e156b4b47d45b8e37823164b598afc533ce0,Fixed #28628 -- Changed \d to [0-9] in regexes where appropriate.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,83fbaa92311dd96e330496a0e443ea71b9c183e2,Fixed #31806 -- Made validators include the value in ValidationErrors.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,014247ad1922931a2f17beaf6249247298e9dc44,"Prevented newlines from being accepted in some validators.

This is a security fix; disclosure to follow shortly.

Thanks to Sjoerd Job Postmus for the report and draft patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2cd2d188516475ddf256e6267cd82c495fb5c430,Fixed W503 flake8 warnings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,d58aaa24e31f10e56a7f05a4451cd06a3cc6e65d,Fixed #26107 -- Added option to int_list_validator() to allow negative integers.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ab56e64deb64498b4acfe9e71619b45603c552f,"[4.2.x] Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,7119f40c9881666b6f9b5cf7df09ee1d21cc8344,Refs #33476 -- Refactored code to strictly match 88 characters line length.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ec5659382a5f5fc2daf0c87ccc89d0fb07534874,Fixed #32339 -- Added div.html form template.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ab56e64deb64498b4acfe9e71619b45603c552f,"[4.2.x] Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,456466d932830b096d39806e291fe23ec5ed38d5,"Fixed #31026 -- Switched form rendering to template engine.

Thanks Carlton Gibson, Keryn Knight, Mariusz Felisiak, and Nick Pope
for reviews.

Co-authored-by: Johannes Hoppe <info@johanneshoppe.com>",False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
b7c5feb35a31799de6e582ad6a5a91a9de74e0f9,9ab56e64deb64498b4acfe9e71619b45603c552f,"[4.2.x] Added stub release notes and release date for 4.2.3, 4.1.10, and 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,9848f888badeaa84c31e5ced99a10badb0b525e4,"Made some small improvements to docs/topics/http/sessions.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10839 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,97a7dab2b19b87652bc15c5db4cb06cd7011fe4d,"Fixed #6941 -- When logging a user out, or when logging in with an existing
session and a different user id to the current session owner, flush the session
data to avoid leakage. Logging in and moving from an anonymous user to a
validated user still keeps existing session data.

Backwards incompatible if you were assuming sessions persisted past logout.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8343 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,45be33a6327bccae60319982254ee62f65bea11e,"Fixed #2523 -- Added SESSION_COOKIE_SECURE setting. Thanks, mir@noris.de

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,a7a6a1b75d985d1c9c65d935761066238e0ca9fd,"Fixed imports, indention, and a long line.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,d65526d6886067a8ef368e5b02fce80e1e4c4903,"Fixed #580 -- Added mega support for generating Vary headers, including some view decorators, and changed the CacheMiddleware to account for the Vary header. Also added GZipMiddleware and ConditionalGetMiddleware, which are no longer handled by CacheMiddleware itself. Also updated the cache.txt and middleware.txt docs. Thanks to Hugo and Sune for the excellent patches

git-svn-id: http://code.djangoproject.com/svn/django/trunk@810 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,29aa31d8f5dd10ed30e539bebc17735e3b4ae89c,"Reduced the chances of session object collision. The window of opportunity is
now about five Python instructions in get_or_create(). This doesn't guarantee
no collisions, but should fix many occurrences. Refs #1180.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4771 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,9d9435588505a9e4c46af6a774ef5fb3dadf53db,"Fixed #2133 -- Invalid session cookie no longer causes fatal error. Thanks, greg-django@abbas.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4423 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,2972e8b5d5d1cc223e81e4fceef819333bbeb075,"Improved session code to force creation of a new session key if the given session key doesn't exist -- for extra security

git-svn-id: http://code.djangoproject.com/svn/django/trunk@536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f7f812cd7087625266f69596fb914a919bc798ae,"Fixed #1137 -- Added a _contains_() method to SessionWrapper. Thanks, Brant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1793 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,39a907a051617d97a9724512791a4d9a53ee2f10,"Added request.session.delete_test_cookie()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@669 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,4c5311614471869dc7e820978c77a7d9c3b36afc,"Fixed #4338 -- Added pop() method to SessionWrapper. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bf16befc433ff9e1764db0fa57ef05b507eee0e0,"Fixed #1339 -- Added keys() and items() methods to session objects. Thanks, Ned Batchelder

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2300 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,45be33a6327bccae60319982254ee62f65bea11e,"Fixed #2523 -- Added SESSION_COOKIE_SECURE setting. Thanks, mir@noris.de

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,a7a6a1b75d985d1c9c65d935761066238e0ca9fd,"Fixed imports, indention, and a long line.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,d65526d6886067a8ef368e5b02fce80e1e4c4903,"Fixed #580 -- Added mega support for generating Vary headers, including some view decorators, and changed the CacheMiddleware to account for the Vary header. Also added GZipMiddleware and ConditionalGetMiddleware, which are no longer handled by CacheMiddleware itself. Also updated the cache.txt and middleware.txt docs. Thanks to Hugo and Sune for the excellent patches

git-svn-id: http://code.djangoproject.com/svn/django/trunk@810 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,29aa31d8f5dd10ed30e539bebc17735e3b4ae89c,"Reduced the chances of session object collision. The window of opportunity is
now about five Python instructions in get_or_create(). This doesn't guarantee
no collisions, but should fix many occurrences. Refs #1180.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4771 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,9d9435588505a9e4c46af6a774ef5fb3dadf53db,"Fixed #2133 -- Invalid session cookie no longer causes fatal error. Thanks, greg-django@abbas.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4423 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,2972e8b5d5d1cc223e81e4fceef819333bbeb075,"Improved session code to force creation of a new session key if the given session key doesn't exist -- for extra security

git-svn-id: http://code.djangoproject.com/svn/django/trunk@536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f7f812cd7087625266f69596fb914a919bc798ae,"Fixed #1137 -- Added a _contains_() method to SessionWrapper. Thanks, Brant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1793 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,39a907a051617d97a9724512791a4d9a53ee2f10,"Added request.session.delete_test_cookie()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@669 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,4c5311614471869dc7e820978c77a7d9c3b36afc,"Fixed #4338 -- Added pop() method to SessionWrapper. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bf16befc433ff9e1764db0fa57ef05b507eee0e0,"Fixed #1339 -- Added keys() and items() methods to session objects. Thanks, Ned Batchelder

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2300 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,9848f888badeaa84c31e5ced99a10badb0b525e4,"Made some small improvements to docs/topics/http/sessions.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10839 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,97a7dab2b19b87652bc15c5db4cb06cd7011fe4d,"Fixed #6941 -- When logging a user out, or when logging in with an existing
session and a different user id to the current session owner, flush the session
data to avoid leakage. Logging in and moving from an anonymous user to a
validated user still keeps existing session data.

Backwards incompatible if you were assuming sessions persisted past logout.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8343 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
575f59f9bc7c59a5e41a081d1f5f55fc859c5012,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,b0aa0709a58b9523a7a0b78088bf81c23053eba0,"[3.2.x] Added stub release notes for 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,b0aa0709a58b9523a7a0b78088bf81c23053eba0,"[3.2.x] Added stub release notes for 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,b0aa0709a58b9523a7a0b78088bf81c23053eba0,"[3.2.x] Added stub release notes for 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
a8b32fe13bcaed1c0b772fdc53de84abc224fb20,b0aa0709a58b9523a7a0b78088bf81c23053eba0,"[3.2.x] Added stub release notes for 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
e89f0a65581f82a5740bfe989136cea75d09cd67,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e89f0a65581f82a5740bfe989136cea75d09cd67,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e89f0a65581f82a5740bfe989136cea75d09cd67,aab3a418ac9293bb4abd7670f65d930cb0426d58,"Merged multi-auth branch to trunk.  See the authentication docs for the ramifications of this change.  Many, many thanks to Joseph Kocherhans for the hard work! 


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e89f0a65581f82a5740bfe989136cea75d09cd67,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e89f0a65581f82a5740bfe989136cea75d09cd67,aab3a418ac9293bb4abd7670f65d930cb0426d58,"Merged multi-auth branch to trunk.  See the authentication docs for the ramifications of this change.  Many, many thanks to Joseph Kocherhans for the hard work! 


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e89f0a65581f82a5740bfe989136cea75d09cd67,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da,f9a08eb8975d8a49bee8cc42ae207100adb6ce75,"[1.9.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da,1b72e3fbf3e4c73239683a1dd09ca8f5c120ee40,"[1.9.x] Added stub release notes for 1.8.7.

Backport of d49b36e485d201dd230a01f6cb8ea6e8e4fddb49 from master",False
3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da,f9a08eb8975d8a49bee8cc42ae207100adb6ce75,"[1.9.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
3ebbda0aef9e7a90ac6208bb8f9bc21228e2c7da,1b72e3fbf3e4c73239683a1dd09ca8f5c120ee40,"[1.9.x] Added stub release notes for 1.8.7.

Backport of d49b36e485d201dd230a01f6cb8ea6e8e4fddb49 from master",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,7930d8c477d2370d5657d61a35323c420a5d4ab8,"[1.2.X] Fixed #14012 -- Corrected the handling of the create user popup dialog in the admin. Thanks to gk@lka.hu for the report, and Ramiro Morales for the patch.

Backport of r13051 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@13502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,054c2e4af390c083a33c5a19093efd47def780de,"Fixed #6852 -- Converted the admin to use the new paginator, to remove DeprecationWarnings. Thanks for the patch, nickefford

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7363 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,054c2e4af390c083a33c5a19093efd47def780de,"Fixed #6852 -- Converted the admin to use the new paginator, to remove DeprecationWarnings. Thanks for the patch, nickefford

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7363 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,30241385d538a9d6abb89ff9f74dfd5a424c7a87,"Fixed #9252 -- Moved the try/except protecting against incorrect lookup params to where the error is now raised, and added a test for this case.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9245 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,1f84630c87f8032b0167e6db41acaf50ab710879,"Fixed #6470: made the admin use a URL resolver.

This *is* backwards compatible, but `admin.site.root()` has been deprecated. The new style is `('^admin/', include(admin.site.urls))`; users will need to update their code to take advantage of the new customizable admin URLs.

Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9739 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,7bc0878922d9d93ab8f4ef8a5c5ba7a1c671279f,"Fixed #8939: added a `list_editable` option to `ModelAdmin`; fields declared `list_editable` may be edited, in bulk, on the changelist page. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10077 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,1f84630c87f8032b0167e6db41acaf50ab710879,"Fixed #6470: made the admin use a URL resolver.

This *is* backwards compatible, but `admin.site.root()` has been deprecated. The new style is `('^admin/', include(admin.site.urls))`; users will need to update their code to take advantage of the new customizable admin URLs.

Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9739 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,7bc0878922d9d93ab8f4ef8a5c5ba7a1c671279f,"Fixed #8939: added a `list_editable` option to `ModelAdmin`; fields declared `list_editable` may be edited, in bulk, on the changelist page. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10077 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,7930d8c477d2370d5657d61a35323c420a5d4ab8,"[1.2.X] Fixed #14012 -- Corrected the handling of the create user popup dialog in the admin. Thanks to gk@lka.hu for the report, and Ramiro Morales for the patch.

Backport of r13051 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@13502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,30241385d538a9d6abb89ff9f74dfd5a424c7a87,"Fixed #9252 -- Moved the try/except protecting against incorrect lookup params to where the error is now raised, and added a test for this case.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9245 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
85207a245bf09fdebe486b4c7bbcb65300f2a693,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,db01d1d0a8b1d584b025164988de8003c2d29d1c,"Fixed #5318 -- Added __contains__ method to HttpRequest, mirroring existing has_key method. Thanks for the patch, robbie@prelab.net.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6097 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,db01d1d0a8b1d584b025164988de8003c2d29d1c,"Fixed #5318 -- Added __contains__ method to HttpRequest, mirroring existing has_key method. Thanks for the patch, robbie@prelab.net.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6097 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,6ffe1d1e1f881f7c952b7a022841d1c591f5771d,"Removed some dead code, and old/bad constructs from the HttpResponse classes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,3234a932b2054e30604d29f93e65180fa7c3fc05,"Fixed #1117 -- Added HttpResponsePermanentRedirect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1816 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,125c748cf6d59012ac6c9e6935d7692f615d0e14,"Fixed #11522: Restored ability of http redirect responses to correctly handle redirect locations with non-ASCII chars.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12659 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,6ffe1d1e1f881f7c952b7a022841d1c591f5771d,"Removed some dead code, and old/bad constructs from the HttpResponse classes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,3234a932b2054e30604d29f93e65180fa7c3fc05,"Fixed #1117 -- Added HttpResponsePermanentRedirect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1816 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,125c748cf6d59012ac6c9e6935d7692f615d0e14,"Fixed #11522: Restored ability of http redirect responses to correctly handle redirect locations with non-ASCII chars.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12659 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4dea4883e6c50d75f215a6b9bcbd95273f57c72d,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,64a94691277db17e87614f125d8da78a9995076b,"Fixed #8753: converted ""new in ..."" callouts to proper Sphinx ""versionadded/versionchanged"" directives. Thanks to Marc Fargas for all the heavy lifting here.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8843 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,64a94691277db17e87614f125d8da78a9995076b,"Fixed #8753: converted ""new in ..."" callouts to proper Sphinx ""versionadded/versionchanged"" directives. Thanks to Marc Fargas for all the heavy lifting here.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8843 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,d6e33795a90fe1cfd487acf230ddef1d9a28552a,"Fixed #11877 -- Documented that HttpRequest.get_host() fails behind multiple reverse proxies, and added an example middleware solution. Thanks to Tom Evans for the report, and arnav for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f7fadc38efa58ac0a8f93f936b82332a199f396,d6e33795a90fe1cfd487acf230ddef1d9a28552a,"Fixed #11877 -- Documented that HttpRequest.get_host() fails behind multiple reverse proxies, and added an example middleware solution. Thanks to Tom Evans for the report, and arnav for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
c7fe895bca06daf12cc1670b56eaf72a1ef27a16,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,96d1d4e29275f4f5900f0725975d2ad0a4d05816,Removed unused local variables in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,34dcf51e06fc57fc5462bd40f6a4c8ee949521da,"Fixed #19367 -- Fixed saving ContentFile in filesystem storage

This was not working properly when ContentFile was initialized with
an unicode string.
Thanks Alexey Boriskin for the report and the test.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,af69842dbd98e69519f1263eca2619c3165ba13b,Refs #28428 -- Added test for a callable FileField.upload_to that returns pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,94b32a20ef798768029651f0e8fcc07731a62a64,"Refs #28184 -- Added test for FileField storage default.

Co-authored-by: miigotu <miigotu@gmail.com>",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3db21c351b9b1108954c388799d35c8dad7dfc19,Refs #24652 -- Enforced test isolation in file_storage tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b4cba4ed625ce7c88675616b3bbb237c28a926d1,Fixed #28144 -- Added FileSystemStorage.OS_OPEN_FLAGS to allow customization.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,35db9d58d691d90b0c33e18b613067609d9e638f,"Rearranged some file-related tests

Just moving around some tests to be more logically grouped.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,d1c2e6dd04d4ddc8ace17e6abfed16ac46459d1e,Refs #28428 -- Made FileField.upload_to support pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,210657b791fec359a9109b69e566018253edfad0,Fixed #28184 -- Allowed using a callable for FileField and ImageField storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,8f7355982305da2daccbdfa156b45d62d1cc2c99,Fixed a F811 warning introduced by 35db9d58d6.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,7fbab3ebaf8b60bbe847b772f895df47067a60d3,"Do not allow FileSystemStorage.delete to receive an empty name

Refs #20660.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,7a65c95d42af421e036c5348f205128dd455a89c,Refactored file_storage tests to avoid depending on servers tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,c4cc8756437de2c9b508910ebe84f75a8d98d699,"Fixed #16703 -- Raise an exception if the storage location of the DefaultStorageFinder is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b45852c2631d4f291fb22ef3348065f2a3c2e5e3,"Refs #26772 -- Added a test for FileField reopening closed files.

Thanks Simon Charette for review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,a7c256cb5491bf2a77abdff01638239db5bfd9d5,Fixed #9893 -- Allowed using a field's max_length in the Storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,d34bb3c833751e49d3647ae1eea837178707d803,"Fixed #16108 -- Fixed another race condition in the FileSystemStorage backend with regard to deleting a file. Refs #16082, too. Thanks, Aymeric Augustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16287 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,17752003a8c115ff79f5f21655f5e9b8b2af67f4,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,5bc0ec4ec4b7c888a291bc81b2edd72812231d96,"Removed all usages of deprecated TestCase methods (self.fail*).  This removed most of the Warnings emitted (with -Wall) during the test suite.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14803 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,fcf7fbc68cadb7efd8bc779c0e189389d6475463,"Fixes #8593 -- better handling of safe_join case sensitivity on windows. Thanks for the initial patch, ramiro.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16267 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,29f607927fe82e2c8baab171dfa8baf710cd9b83,"Fixed spelling of ""nonexistent"".",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,4d1c229ee5cb210e8b592a8d9c87d4a66864328e,Fixed #26495 -- Added name arg to Storage.save()'s File wrapping.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,c574bec0929cd2527268c96a492d25223a9fd576,"Fixed #25598 -- Added SCRIPT_NAME prefix to STATIC_URL and MEDIA_URL set to relative paths.

Thanks Florian Apolloner for reviews.

Co-authored-by: Joel Dunham <Joel.Dunham@technicalsafetybc.ca>",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,4e70ad11d29bde54b846920ce0dcf8d10741d3ae,"Made FileSystemStorage accept both text and byte streams

Thanks Alexey Boriskin for his help on the patch.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,8d7271578d7b153435b40fe40236ebec43cbf1b9,"Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,1ff6e37de46f0cbf271a287a0ca67678e741a90a,"Fixed #23832 -- Added timezone aware Storage API.

New Storage.get_{accessed,created,modified}_time() methods convert the
naive time from now-deprecated {accessed,created_modified}_time()
methods into aware objects in UTC if USE_TZ=True.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,fb9d8f06520f495d0c36236f7534dbe660c7e164,"Fixed #22717 -- Auto-corrected missing ending slash in FileSystemStorage

Thanks David Fischer for the report and Moayad Mardini for the
review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0d8d30b7ddfe83ab03120f4560c7aa153f4d0ed1,"Fixed #23157 -- Removed O(n) algorithm when uploading duplicate file names.

This is a security fix. Disclosure following shortly.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,65e86948b80262574058a94ccaae3a9b59c3faea,Corrected several typos in string literals and test names.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0f2975534dc6a010a4da28165b235f36bf1df24f,Refs #28428 -- Added tests for using FileSystemStorage with pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,170f7115bbae45f26ca8078e749dfe67445a57ea,"Fixed #24826 -- Accounted for filesystem-dependent filename max length

Thanks Raphaël Hertzog for the report and help on the patch, and Tim Graham
for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,361d6738f89f8443855d4378d3241566d9fca6e9,Fixed #11739 -- Made ContentFile support Unicode input,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2d42e23b6d8fd76f93a96b2310b2c9dfd441d009,Fixed #31941 -- Corrected FileField.deconstruct() with a callable storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b820b6108a7d3f11ec18774d16d657f4f63fe9fa,Fixed #26896 -- Allowed a lazy base_url for FileSystemStorage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,474cc420bf6bc1067e2aaa4b40cf6a08d62096f7,"Refs #32508 -- Raised Type/ValueError instead of using ""assert"" in django.core.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b5240d25c1bf724f0008478e7f6cccd0a6d6bd1e,Removed unnecessary bytes prefix for ContentFile,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,694441827714a3e08f0d02c4650dc3388a867baa,Fixed #22337: FileSystemStorage marked as deconstructible and tested.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,dfbcbf212493b9e5bb527e7ec2d97ae3cec480fa,Always close files in the file_storage tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,56c461a0d7c1cbb9d5709bda817579c7ee18d474,"Fixed #26038 -- Changed FileSystemStorage defaults on setting change.

Thanks to Dave Voutila for the report and Tim for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ac1975b18b5a33234284bec86e5a5bb44a4af976,Fixed #13809 -- Made FieldFile.open() respect its mode argument.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,39791c8e6de3a71879eb26dd9f8d01273847f395,Harmonized Windows checks in tests to a single style.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2d7fb779870583f8c6ee003f81bf67c4d7c21227,Refs #23832 -- Removed deprecated non-timezone aware Storage API.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,96d1d4e29275f4f5900f0725975d2ad0a4d05816,Removed unused local variables in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,34dcf51e06fc57fc5462bd40f6a4c8ee949521da,"Fixed #19367 -- Fixed saving ContentFile in filesystem storage

This was not working properly when ContentFile was initialized with
an unicode string.
Thanks Alexey Boriskin for the report and the test.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,af69842dbd98e69519f1263eca2619c3165ba13b,Refs #28428 -- Added test for a callable FileField.upload_to that returns pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,94b32a20ef798768029651f0e8fcc07731a62a64,"Refs #28184 -- Added test for FileField storage default.

Co-authored-by: miigotu <miigotu@gmail.com>",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3db21c351b9b1108954c388799d35c8dad7dfc19,Refs #24652 -- Enforced test isolation in file_storage tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b4cba4ed625ce7c88675616b3bbb237c28a926d1,Fixed #28144 -- Added FileSystemStorage.OS_OPEN_FLAGS to allow customization.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,35db9d58d691d90b0c33e18b613067609d9e638f,"Rearranged some file-related tests

Just moving around some tests to be more logically grouped.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,d1c2e6dd04d4ddc8ace17e6abfed16ac46459d1e,Refs #28428 -- Made FileField.upload_to support pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,210657b791fec359a9109b69e566018253edfad0,Fixed #28184 -- Allowed using a callable for FileField and ImageField storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,8f7355982305da2daccbdfa156b45d62d1cc2c99,Fixed a F811 warning introduced by 35db9d58d6.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,7fbab3ebaf8b60bbe847b772f895df47067a60d3,"Do not allow FileSystemStorage.delete to receive an empty name

Refs #20660.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,7a65c95d42af421e036c5348f205128dd455a89c,Refactored file_storage tests to avoid depending on servers tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,c4cc8756437de2c9b508910ebe84f75a8d98d699,"Fixed #16703 -- Raise an exception if the storage location of the DefaultStorageFinder is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b45852c2631d4f291fb22ef3348065f2a3c2e5e3,"Refs #26772 -- Added a test for FileField reopening closed files.

Thanks Simon Charette for review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,a7c256cb5491bf2a77abdff01638239db5bfd9d5,Fixed #9893 -- Allowed using a field's max_length in the Storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,d34bb3c833751e49d3647ae1eea837178707d803,"Fixed #16108 -- Fixed another race condition in the FileSystemStorage backend with regard to deleting a file. Refs #16082, too. Thanks, Aymeric Augustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16287 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,17752003a8c115ff79f5f21655f5e9b8b2af67f4,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,5bc0ec4ec4b7c888a291bc81b2edd72812231d96,"Removed all usages of deprecated TestCase methods (self.fail*).  This removed most of the Warnings emitted (with -Wall) during the test suite.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14803 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,fcf7fbc68cadb7efd8bc779c0e189389d6475463,"Fixes #8593 -- better handling of safe_join case sensitivity on windows. Thanks for the initial patch, ramiro.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16267 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,29f607927fe82e2c8baab171dfa8baf710cd9b83,"Fixed spelling of ""nonexistent"".",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,4d1c229ee5cb210e8b592a8d9c87d4a66864328e,Fixed #26495 -- Added name arg to Storage.save()'s File wrapping.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,c574bec0929cd2527268c96a492d25223a9fd576,"Fixed #25598 -- Added SCRIPT_NAME prefix to STATIC_URL and MEDIA_URL set to relative paths.

Thanks Florian Apolloner for reviews.

Co-authored-by: Joel Dunham <Joel.Dunham@technicalsafetybc.ca>",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,4e70ad11d29bde54b846920ce0dcf8d10741d3ae,"Made FileSystemStorage accept both text and byte streams

Thanks Alexey Boriskin for his help on the patch.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,8d7271578d7b153435b40fe40236ebec43cbf1b9,"Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,1ff6e37de46f0cbf271a287a0ca67678e741a90a,"Fixed #23832 -- Added timezone aware Storage API.

New Storage.get_{accessed,created,modified}_time() methods convert the
naive time from now-deprecated {accessed,created_modified}_time()
methods into aware objects in UTC if USE_TZ=True.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,fb9d8f06520f495d0c36236f7534dbe660c7e164,"Fixed #22717 -- Auto-corrected missing ending slash in FileSystemStorage

Thanks David Fischer for the report and Moayad Mardini for the
review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0d8d30b7ddfe83ab03120f4560c7aa153f4d0ed1,"Fixed #23157 -- Removed O(n) algorithm when uploading duplicate file names.

This is a security fix. Disclosure following shortly.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,65e86948b80262574058a94ccaae3a9b59c3faea,Corrected several typos in string literals and test names.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0f2975534dc6a010a4da28165b235f36bf1df24f,Refs #28428 -- Added tests for using FileSystemStorage with pathlib.Path.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,170f7115bbae45f26ca8078e749dfe67445a57ea,"Fixed #24826 -- Accounted for filesystem-dependent filename max length

Thanks Raphaël Hertzog for the report and help on the patch, and Tim Graham
for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,361d6738f89f8443855d4378d3241566d9fca6e9,Fixed #11739 -- Made ContentFile support Unicode input,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2d42e23b6d8fd76f93a96b2310b2c9dfd441d009,Fixed #31941 -- Corrected FileField.deconstruct() with a callable storage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b820b6108a7d3f11ec18774d16d657f4f63fe9fa,Fixed #26896 -- Allowed a lazy base_url for FileSystemStorage.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,474cc420bf6bc1067e2aaa4b40cf6a08d62096f7,"Refs #32508 -- Raised Type/ValueError instead of using ""assert"" in django.core.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b5240d25c1bf724f0008478e7f6cccd0a6d6bd1e,Removed unnecessary bytes prefix for ContentFile,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,694441827714a3e08f0d02c4650dc3388a867baa,Fixed #22337: FileSystemStorage marked as deconstructible and tested.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,dfbcbf212493b9e5bb527e7ec2d97ae3cec480fa,Always close files in the file_storage tests.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,56c461a0d7c1cbb9d5709bda817579c7ee18d474,"Fixed #26038 -- Changed FileSystemStorage defaults on setting change.

Thanks to Dave Voutila for the report and Tim for the review.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ac1975b18b5a33234284bec86e5a5bb44a4af976,Fixed #13809 -- Made FieldFile.open() respect its mode argument.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,39791c8e6de3a71879eb26dd9f8d01273847f395,Harmonized Windows checks in tests to a single style.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,2d7fb779870583f8c6ee003f81bf67c4d7c21227,Refs #23832 -- Removed deprecated non-timezone aware Storage API.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,73245b3285f63694d2c63c9b197165dc6d9cfd4e,"Prevented file_upload tests to leave files behind

Refs #19206.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,73245b3285f63694d2c63c9b197165dc6d9cfd4e,"Prevented file_upload tests to leave files behind

Refs #19206.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,72efd840a8cb6ee35a3732d8bb434e7361970b3c,"Fixed #34110 -- Added in-memory file storage.

Thanks Paolo Melchiorre, Carlton Gibson, and Mariusz Felisiak for
reviews.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b55699968fc9ee985384c64e37f6cc74a0a23683,"Fixed #32718 -- Relaxed file name validation in FileField.

- Validate filename returned by FileField.upload_to() not a filename
  passed to the FileField.generate_filename() (upload_to() may
  completely ignored passed filename).
- Allow relative paths (without dot segments) in the generated filename.

Thanks to Jakub Kleň for the report and review.
Thanks to all folks for checking this patch on existing projects.
Thanks Florian Apolloner and Markus Holtermann for the discussion and
implementation idea.

Regression in 0b79eb36915d178aef5c6a7bbce71b1e76d376d3.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,72efd840a8cb6ee35a3732d8bb434e7361970b3c,"Fixed #34110 -- Added in-memory file storage.

Thanks Paolo Melchiorre, Carlton Gibson, and Mariusz Felisiak for
reviews.",False
9f4f63e9ebb7bf6cb9547ee4e2526b9b96703270,b55699968fc9ee985384c64e37f6cc74a0a23683,"Fixed #32718 -- Relaxed file name validation in FileField.

- Validate filename returned by FileField.upload_to() not a filename
  passed to the FileField.generate_filename() (upload_to() may
  completely ignored passed filename).
- Allow relative paths (without dot segments) in the generated filename.

Thanks to Jakub Kleň for the report and review.
Thanks to all folks for checking this patch on existing projects.
Thanks Florian Apolloner and Markus Holtermann for the discussion and
implementation idea.

Regression in 0b79eb36915d178aef5c6a7bbce71b1e76d376d3.",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,be4a83c4483501102afbfd786100e46ed06cc05c,"Fixed #9315 -- Handle spaces in URL tag arguments.

Thanks Natalia Bidart and Matías Bordese for most of this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,a7cf48a2b7878bf98879f2963ab9a7d0e6493d9a,Fixed #21573 -- Improved performance of utils.text.normalize_newlines.,False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,be4a83c4483501102afbfd786100e46ed06cc05c,"Fixed #9315 -- Handle spaces in URL tag arguments.

Thanks Natalia Bidart and Matías Bordese for most of this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,a7cf48a2b7878bf98879f2963ab9a7d0e6493d9a,Fixed #21573 -- Improved performance of utils.text.normalize_newlines.,False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
072963e4c4d0b3a7a8c5412bc0c7d27d1a9c3521,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
29a6c98b4c13af82064f993f0acc6e8fafa4d3f5,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
2654e1b93923bac55f12b4e66c5e39b16695ace5,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,faceca7075d72d55f0eebc586049fb634cd46129,"Fixed #13301 -- Corrected problem with capitalization of changelist row headers in admin. Thanks to emyller for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12947 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,faceca7075d72d55f0eebc586049fb634cd46129,"Fixed #13301 -- Corrected problem with capitalization of changelist row headers in admin. Thanks to emyller for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12947 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,d345a030c2f3b332512e5091248dd8b06e859eac,"[1.7.x] Fixed #22241 -- Selectively added line breaks in admin read-only fields

When content is supposed to contain HTML, we do not try to add
line breaks in read-only contents.
Thanks Alexander Todorov for the report.
Backport of c94bff2 from master.",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,aa6853da22ea6d2fb93d6b067bb073190d86f41a,"[1.7.x] Added stub release notes for 1.7.6.

Backport of 71820721a19f5628b3176f16813d47378cb2c3cb from master",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,7b21bfc0745f92f83a6826a3d3e58797fb74e326,"Improved test isolation of the admin tests and assigned custom admin sites to
prevent test order dependant failures.

This involves introducing usage of `TestCase.urls` and implementing proper
admin.py modules for some of the test apps.

Thanks Florian Apolloner for finding the issue and contributing the patch.

Refs #15294 (it solves these problems so the fix for that ticket we are going
to commit doesn't introduce obscure and hard to reproduce test failures when
running the Django test suite.)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,d345a030c2f3b332512e5091248dd8b06e859eac,"[1.7.x] Fixed #22241 -- Selectively added line breaks in admin read-only fields

When content is supposed to contain HTML, we do not try to add
line breaks in read-only contents.
Thanks Alexander Todorov for the report.
Backport of c94bff2 from master.",False
2654e1b93923bac55f12b4e66c5e39b16695ace5,aa6853da22ea6d2fb93d6b067bb073190d86f41a,"[1.7.x] Added stub release notes for 1.7.6.

Backport of 71820721a19f5628b3176f16813d47378cb2c3cb from master",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,cce32a9b0900210d524b80160209c3e2b5dfb156,"Fixed #13166 - Added JavaScript warnings to admin changelist to help against ambiguity between action and list_editable form submission. Thanks to blinkylights and aaugustin for the report and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,93a4d46184bba069fc6a9aa5517802b2488032ac,"Fixed #14672 - Added admin handling for on_delete=PROTECT. Thanks to jtiai for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15249 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,52fc61e0cfb334af69154e862c148036d111dba6,"Fixed #14529 -- Fixed representation of model names in admin messages after model object changes when the ModelAdmin queryset() uses defer() or only(). Thanks rlaager for report and initial patch, to rasca an julien for help in tracking the problem.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15596 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,fe3c9ad55103f8fe473bdcf77d06cb958cbaf217,"Fixed #14355 -- Ensure that help_text is displayed for readonly fields in the admin. Thanks to jester for the report, and to alexbmeng, subsume, wamberg and Julien Phalip for ther work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15582 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,791ecb4be4d64618a40e1a80fad26a5e3b4d4b90,"Fixed #13126 -- Ensured that individual form errors are displayed when errors occur on a list-editable changelist. Thanks to slafs for the report, and to Julien Phalip for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15580 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,8eccb728ccd97a07b9281d3a7c2c6bac105f285f,"Fixed #15964 - Do not order admin actions by description

Thanks to julien for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,9e637d3061bfd620be3e2bb6a79e2d8d08154f91,"Fixed a number of tests that were failing in Oracle due to false assumptions about the primary keys of objects.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15779 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,cce32a9b0900210d524b80160209c3e2b5dfb156,"Fixed #13166 - Added JavaScript warnings to admin changelist to help against ambiguity between action and list_editable form submission. Thanks to blinkylights and aaugustin for the report and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,93a4d46184bba069fc6a9aa5517802b2488032ac,"Fixed #14672 - Added admin handling for on_delete=PROTECT. Thanks to jtiai for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15249 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,52fc61e0cfb334af69154e862c148036d111dba6,"Fixed #14529 -- Fixed representation of model names in admin messages after model object changes when the ModelAdmin queryset() uses defer() or only(). Thanks rlaager for report and initial patch, to rasca an julien for help in tracking the problem.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15596 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,fe3c9ad55103f8fe473bdcf77d06cb958cbaf217,"Fixed #14355 -- Ensure that help_text is displayed for readonly fields in the admin. Thanks to jester for the report, and to alexbmeng, subsume, wamberg and Julien Phalip for ther work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15582 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,791ecb4be4d64618a40e1a80fad26a5e3b4d4b90,"Fixed #13126 -- Ensured that individual form errors are displayed when errors occur on a list-editable changelist. Thanks to slafs for the report, and to Julien Phalip for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15580 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,8eccb728ccd97a07b9281d3a7c2c6bac105f285f,"Fixed #15964 - Do not order admin actions by description

Thanks to julien for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,9e637d3061bfd620be3e2bb6a79e2d8d08154f91,"Fixed a number of tests that were failing in Oracle due to false assumptions about the primary keys of objects.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15779 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a446c896e7c814661fb9c4f212b071b2a7fa446,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,76249c39641e90cc26465fbce5530e4a77c6babe,"Fixed #11158 - get_image_dimensions very slow/incorrect after 1 call

Thanks to kua for the report, and to kua, SmileyChris and SAn for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13715 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,43b6b32945cee07c3f85f1a696fca12fcba6ee2f,"Fixed #14430 - Test failure on Windows with get_image_dimensions since [13715]

Thanks to gabrielhurley for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d47b9ec2c71868105df41e50020c9ec2eae76b62,"Fixed a regression on Python < 2.6 introduced in [12552].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,76249c39641e90cc26465fbce5530e4a77c6babe,"Fixed #11158 - get_image_dimensions very slow/incorrect after 1 call

Thanks to kua for the report, and to kua, SmileyChris and SAn for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13715 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,43b6b32945cee07c3f85f1a696fca12fcba6ee2f,"Fixed #14430 - Test failure on Windows with get_image_dimensions since [13715]

Thanks to gabrielhurley for report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d47b9ec2c71868105df41e50020c9ec2eae76b62,"Fixed a regression on Python < 2.6 introduced in [12552].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,74131e82eb1a1bdad1789889c38c8d96b6ab25aa,"Fixed #11056 -- Corrected reference to File class in storage docs. Thanks to wam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10970 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,84ef4a9b1decce8e319359a018eef46a9556b630,"Fixed #8641: Documented the fact that file-saving methods must receive a File instance

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,74131e82eb1a1bdad1789889c38c8d96b6ab25aa,"Fixed #11056 -- Corrected reference to File class in storage docs. Thanks to wam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10970 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,84ef4a9b1decce8e319359a018eef46a9556b630,"Fixed #8641: Documented the fact that file-saving methods must receive a File instance

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,0ab50aad36f849d710a0ac053a99eb058e489e24,"Fixed #13605 -- Improved documentation of the django.core.files.storage module. Added documentation for DefaultStorage, get_storage_class, FileSystemStorage, and some missing public methods on Storage. New metadata targets included for everything. Thanks to kopernikus for the report and elbarto for contributing to the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14831 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
30042d475bf084c6723c6217a21598d9247a9c41,0ab50aad36f849d710a0ac053a99eb058e489e24,"Fixed #13605 -- Improved documentation of the django.core.files.storage module. Added documentation for DefaultStorage, get_storage_class, FileSystemStorage, and some missing public methods on Storage. New metadata targets included for everything. Thanks to kopernikus for the report and elbarto for contributing to the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14831 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
79f368764295df109a37192f6182fb6f361d85b5,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
79f368764295df109a37192f6182fb6f361d85b5,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
79f368764295df109a37192f6182fb6f361d85b5,ec808e807ad711b993f199f6b4165ac6d0e1125b,"Fixed urlize regression with entities in query strings

Refs #22267.
Thanks Shai Berger for spotting the issue and Tim Graham for the
initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,c12c225a66df0c48bc00cc4b418c383d5516e668,"Fixed a bunch of errors detected by pychecker -- unneeded imports and shadows of builtin variable names

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
79f368764295df109a37192f6182fb6f361d85b5,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
79f368764295df109a37192f6182fb6f361d85b5,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
79f368764295df109a37192f6182fb6f361d85b5,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
79f368764295df109a37192f6182fb6f361d85b5,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
79f368764295df109a37192f6182fb6f361d85b5,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
79f368764295df109a37192f6182fb6f361d85b5,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
79f368764295df109a37192f6182fb6f361d85b5,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
79f368764295df109a37192f6182fb6f361d85b5,c28beb429107956f8bde8053936502124c964bec,Refactored and commented strip_tags utility,False
79f368764295df109a37192f6182fb6f361d85b5,1f9874d4ca3e7376036646aedf6ac3060f22fd69,"Refs #33245 -- Minor edits to django.utils.html.urlize() changes.

Follow up to ad81b606a2b5276397460a654fc7ad901a54b91e.",False
79f368764295df109a37192f6182fb6f361d85b5,8c709d79cbd1a7bb975f58090c17a1178a0efb80,Fixed #17419 -- Added json_tag template filter.,False
79f368764295df109a37192f6182fb6f361d85b5,44767f2caf028d89e1a283d04bb552d0e18bb936,Use unicode.translate to speed up js escaping.,False
79f368764295df109a37192f6182fb6f361d85b5,6ae1b04fb584db0fdb22b8e287784c4ed3ac62ac,Fixed #27900 -- Made escapejs escape backticks for use in ES6 template literals.,False
79f368764295df109a37192f6182fb6f361d85b5,4b8a1d2c0d1a8c5107f3aef01597db78d2a2a5ce,"Fixed #22267 -- Fixed unquote/quote in smart_urlquote

Thanks Md. Enzam Hossain for the report and initial patch, and
Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,4b78420d250df5e21763633871e486ee76728cc4,"Fixed CVE-2019-14233 -- Prevented excessive HTMLParser recursion in strip_tags() when handling incomplete HTML entities.

Thanks to Guido Vranken for initial report.",False
79f368764295df109a37192f6182fb6f361d85b5,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
79f368764295df109a37192f6182fb6f361d85b5,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
79f368764295df109a37192f6182fb6f361d85b5,ad81b606a2b5276397460a654fc7ad901a54b91e,"Fixed #33245 -- Made django.utils.html.urlize() thread-safe.

Regression in e567670b1abe61af4acfaa6a6a7e92a7acfa8b00.",False
79f368764295df109a37192f6182fb6f361d85b5,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
79f368764295df109a37192f6182fb6f361d85b5,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
79f368764295df109a37192f6182fb6f361d85b5,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,abb636c1af7b2fd00a624985f60b7aff07374580,Improved performance of utils.html.escape().,False
79f368764295df109a37192f6182fb6f361d85b5,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
79f368764295df109a37192f6182fb6f361d85b5,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
79f368764295df109a37192f6182fb6f361d85b5,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
79f368764295df109a37192f6182fb6f361d85b5,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
79f368764295df109a37192f6182fb6f361d85b5,ec808e807ad711b993f199f6b4165ac6d0e1125b,"Fixed urlize regression with entities in query strings

Refs #22267.
Thanks Shai Berger for spotting the issue and Tim Graham for the
initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,c12c225a66df0c48bc00cc4b418c383d5516e668,"Fixed a bunch of errors detected by pychecker -- unneeded imports and shadows of builtin variable names

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
79f368764295df109a37192f6182fb6f361d85b5,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
79f368764295df109a37192f6182fb6f361d85b5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
79f368764295df109a37192f6182fb6f361d85b5,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
79f368764295df109a37192f6182fb6f361d85b5,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
79f368764295df109a37192f6182fb6f361d85b5,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
79f368764295df109a37192f6182fb6f361d85b5,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
79f368764295df109a37192f6182fb6f361d85b5,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
79f368764295df109a37192f6182fb6f361d85b5,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
79f368764295df109a37192f6182fb6f361d85b5,c28beb429107956f8bde8053936502124c964bec,Refactored and commented strip_tags utility,False
79f368764295df109a37192f6182fb6f361d85b5,1f9874d4ca3e7376036646aedf6ac3060f22fd69,"Refs #33245 -- Minor edits to django.utils.html.urlize() changes.

Follow up to ad81b606a2b5276397460a654fc7ad901a54b91e.",False
79f368764295df109a37192f6182fb6f361d85b5,8c709d79cbd1a7bb975f58090c17a1178a0efb80,Fixed #17419 -- Added json_tag template filter.,False
79f368764295df109a37192f6182fb6f361d85b5,44767f2caf028d89e1a283d04bb552d0e18bb936,Use unicode.translate to speed up js escaping.,False
79f368764295df109a37192f6182fb6f361d85b5,6ae1b04fb584db0fdb22b8e287784c4ed3ac62ac,Fixed #27900 -- Made escapejs escape backticks for use in ES6 template literals.,False
79f368764295df109a37192f6182fb6f361d85b5,4b8a1d2c0d1a8c5107f3aef01597db78d2a2a5ce,"Fixed #22267 -- Fixed unquote/quote in smart_urlquote

Thanks Md. Enzam Hossain for the report and initial patch, and
Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,8ef8bc0f64c463684268a7c55f3d3da4de066c0d,Refs #28909 -- Simplifed code using unpacking generalizations.,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,4b78420d250df5e21763633871e486ee76728cc4,"Fixed CVE-2019-14233 -- Prevented excessive HTMLParser recursion in strip_tags() when handling incomplete HTML entities.

Thanks to Guido Vranken for initial report.",False
79f368764295df109a37192f6182fb6f361d85b5,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
79f368764295df109a37192f6182fb6f361d85b5,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
79f368764295df109a37192f6182fb6f361d85b5,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
79f368764295df109a37192f6182fb6f361d85b5,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
79f368764295df109a37192f6182fb6f361d85b5,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
79f368764295df109a37192f6182fb6f361d85b5,ad81b606a2b5276397460a654fc7ad901a54b91e,"Fixed #33245 -- Made django.utils.html.urlize() thread-safe.

Regression in e567670b1abe61af4acfaa6a6a7e92a7acfa8b00.",False
79f368764295df109a37192f6182fb6f361d85b5,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
79f368764295df109a37192f6182fb6f361d85b5,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
79f368764295df109a37192f6182fb6f361d85b5,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
79f368764295df109a37192f6182fb6f361d85b5,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,abb636c1af7b2fd00a624985f60b7aff07374580,Improved performance of utils.html.escape().,False
79f368764295df109a37192f6182fb6f361d85b5,a4c23f70deda5321687cd1f759c65a35d161e793,Fixed flake8 warnings.,False
79f368764295df109a37192f6182fb6f361d85b5,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
79f368764295df109a37192f6182fb6f361d85b5,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
79f368764295df109a37192f6182fb6f361d85b5,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
79f368764295df109a37192f6182fb6f361d85b5,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
79f368764295df109a37192f6182fb6f361d85b5,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
79f368764295df109a37192f6182fb6f361d85b5,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
79f368764295df109a37192f6182fb6f361d85b5,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
79f368764295df109a37192f6182fb6f361d85b5,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
79f368764295df109a37192f6182fb6f361d85b5,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
79f368764295df109a37192f6182fb6f361d85b5,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
79f368764295df109a37192f6182fb6f361d85b5,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
79f368764295df109a37192f6182fb6f361d85b5,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,94047d7a3a53d4825d8e9ba1b51022005116ac34,"[1.2.X] Added explanatory note on CSRF failure page for the case of a missing Referer header.
  
This is intended to help power users who have disabled Referer headers, or
installed add-ons which have done so, and to help web site administrators
with debugging, since this problem will be browser specific and not a
programming error.

Backport of [13680] from trunk. Technically this is a (tiny) new feature,
but it has been backported because it might give significant help with
debugging rare problems with Django 1.2's new CSRF protection.


git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@13682 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,94047d7a3a53d4825d8e9ba1b51022005116ac34,"[1.2.X] Added explanatory note on CSRF failure page for the case of a missing Referer header.
  
This is intended to help power users who have disabled Referer headers, or
installed add-ons which have done so, and to help web site administrators
with debugging, since this problem will be browser specific and not a
programming error.

Backport of [13680] from trunk. Technically this is a (tiny) new feature,
but it has been backported because it might give significant help with
debugging rare problems with Django 1.2's new CSRF protection.


git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@13682 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,36dd74446047570bd6bc1a8bdb8e2eaf3eb39a44,"[1.2.X] Fixed #14565 - No csrf_token on 404 page.

This solution doesn't have the negative side-effects of [14356].

Backport of [14377] from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@14380 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,20f7e514930d108e4abb7f1af6f21edc00206030,"Reverted 10094 and 10095 (in favour of solution that will hopefully land for beta 2)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10128 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8103b7dfadb8d13cd64eab31e47b9a216f678152,"Negligible spacing changes to docs/csrf.txt to be consistent

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4224 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,bfcecfee91f7a6c051c0e7c324c8311608a712b5,"Fixed #7814 -- Fixed a number of style inconsistencies in the docs. Thanks, uzi and programmerq

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8043 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,a02a6fab66afc9462c79cc4914f4624b640165f4,"Fixed #9163 - CsrfMiddleware needs to reset ETag header

Thanks to carljm for report and patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11650 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,c568792e81c7a09e3160548e7b8dcb89e9a5fa99,"Added a reference for the claim in CSRF docs that GET requests
should be side-effect free.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5902 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,b1c0dc5a017f2464d5d77878b192beea9e278c53,"Normalized the use of ""JavaScript"" in the documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,20f7e514930d108e4abb7f1af6f21edc00206030,"Reverted 10094 and 10095 (in favour of solution that will hopefully land for beta 2)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10128 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8103b7dfadb8d13cd64eab31e47b9a216f678152,"Negligible spacing changes to docs/csrf.txt to be consistent

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4224 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,bfcecfee91f7a6c051c0e7c324c8311608a712b5,"Fixed #7814 -- Fixed a number of style inconsistencies in the docs. Thanks, uzi and programmerq

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8043 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,a02a6fab66afc9462c79cc4914f4624b640165f4,"Fixed #9163 - CsrfMiddleware needs to reset ETag header

Thanks to carljm for report and patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11650 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,c568792e81c7a09e3160548e7b8dcb89e9a5fa99,"Added a reference for the claim in CSRF docs that GET requests
should be side-effect free.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5902 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,b1c0dc5a017f2464d5d77878b192beea9e278c53,"Normalized the use of ""JavaScript"" in the documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9ec9936413a906e71ce79d1ce7d26df865891a95,"Updated csrf docs with 'versionadded' info


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,7230a995ce81a7b8dd093bd03cc5ebd34106ee80,"Moved contrib.csrf.* to core code.

There is stub code for backwards compatiblity with Django 1.1 imports.

The documentation has been updated, but has been left in
docs/contrib/csrf.txt for now, in order to avoid dead links to
documentation on the website.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11661 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,36dd74446047570bd6bc1a8bdb8e2eaf3eb39a44,"[1.2.X] Fixed #14565 - No csrf_token on 404 page.

This solution doesn't have the negative side-effects of [14356].

Backport of [14377] from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@14380 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
818e70344e7193f6ebc73c82ed574e6ce3c91afc,9ec9936413a906e71ce79d1ce7d26df865891a95,"Updated csrf docs with 'versionadded' info


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
01422046065d2b51f8f613409cad2c81b39487e5,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
01422046065d2b51f8f613409cad2c81b39487e5,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
01422046065d2b51f8f613409cad2c81b39487e5,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
01422046065d2b51f8f613409cad2c81b39487e5,cfda1fa3f8d95f0f4a369da9021dbd770e5fa44a,"Fixed #25848 -- Set template origin on each node.

Prior to 55f12f8709, the template origin was available on each node via
`self.token.source[0]`. This behavior was removed when debug handling was
simplified, but 3rd-party debugging tools still depend on its presence.
This updates the Parser to set origin on individual nodes. This enables the
source template to be determined even when template extending or including is
used.",False
01422046065d2b51f8f613409cad2c81b39487e5,9f2881deb127593e8e0fa25e978aad9029d7b562,Fixed #25423 -- Made error message for unknown template tag more helpful.,False
01422046065d2b51f8f613409cad2c81b39487e5,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
01422046065d2b51f8f613409cad2c81b39487e5,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
01422046065d2b51f8f613409cad2c81b39487e5,e643ba8bcf0b1da517cbab689ac157ee031202a3,"Fixed #27956 -- Fixed display of errors in an {% extends %} child.

Thanks Ling-Xiao Yang for the report and test, and
Preston Timmons for the fix.",False
01422046065d2b51f8f613409cad2c81b39487e5,0b4d5172631af065601370a6d35d05b53eb2f5f6,Fixed #27584 -- Fixed display of render time template errors.,False
01422046065d2b51f8f613409cad2c81b39487e5,313c3d1aa14d80922003f841c257ec4e153f8653,"Fixed #28935 -- Fixed display of errors in extended blocks.

Get the template that caused the exception and get the
exception info from that template, using the node that
caused the exception.",False
01422046065d2b51f8f613409cad2c81b39487e5,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
01422046065d2b51f8f613409cad2c81b39487e5,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
01422046065d2b51f8f613409cad2c81b39487e5,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
01422046065d2b51f8f613409cad2c81b39487e5,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
01422046065d2b51f8f613409cad2c81b39487e5,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
01422046065d2b51f8f613409cad2c81b39487e5,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
01422046065d2b51f8f613409cad2c81b39487e5,cfda1fa3f8d95f0f4a369da9021dbd770e5fa44a,"Fixed #25848 -- Set template origin on each node.

Prior to 55f12f8709, the template origin was available on each node via
`self.token.source[0]`. This behavior was removed when debug handling was
simplified, but 3rd-party debugging tools still depend on its presence.
This updates the Parser to set origin on individual nodes. This enables the
source template to be determined even when template extending or including is
used.",False
01422046065d2b51f8f613409cad2c81b39487e5,9f2881deb127593e8e0fa25e978aad9029d7b562,Fixed #25423 -- Made error message for unknown template tag more helpful.,False
01422046065d2b51f8f613409cad2c81b39487e5,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
01422046065d2b51f8f613409cad2c81b39487e5,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
01422046065d2b51f8f613409cad2c81b39487e5,e643ba8bcf0b1da517cbab689ac157ee031202a3,"Fixed #27956 -- Fixed display of errors in an {% extends %} child.

Thanks Ling-Xiao Yang for the report and test, and
Preston Timmons for the fix.",False
01422046065d2b51f8f613409cad2c81b39487e5,0b4d5172631af065601370a6d35d05b53eb2f5f6,Fixed #27584 -- Fixed display of render time template errors.,False
01422046065d2b51f8f613409cad2c81b39487e5,313c3d1aa14d80922003f841c257ec4e153f8653,"Fixed #28935 -- Fixed display of errors in extended blocks.

Get the template that caused the exception and get the
exception info from that template, using the node that
caused the exception.",False
01422046065d2b51f8f613409cad2c81b39487e5,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
01422046065d2b51f8f613409cad2c81b39487e5,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
01422046065d2b51f8f613409cad2c81b39487e5,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
01422046065d2b51f8f613409cad2c81b39487e5,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
01422046065d2b51f8f613409cad2c81b39487e5,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
01422046065d2b51f8f613409cad2c81b39487e5,b2be7e12cce8e62eeee512fbea4a32503d048120,Refs #33002 -- Made template_tests.tests.py's tests test both Lexer and DebugLexer.,False
01422046065d2b51f8f613409cad2c81b39487e5,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
01422046065d2b51f8f613409cad2c81b39487e5,c28a41f4f1d9c8f6bd0e60baa6ed79c332c89303,"[4.0.x] Added stub release notes and release date for 4.0.2, 3.2.12, and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main",False
01422046065d2b51f8f613409cad2c81b39487e5,c28a41f4f1d9c8f6bd0e60baa6ed79c332c89303,"[4.0.x] Added stub release notes and release date for 4.0.2, 3.2.12, and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main",False
01422046065d2b51f8f613409cad2c81b39487e5,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
01422046065d2b51f8f613409cad2c81b39487e5,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
01422046065d2b51f8f613409cad2c81b39487e5,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
01422046065d2b51f8f613409cad2c81b39487e5,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
01422046065d2b51f8f613409cad2c81b39487e5,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
01422046065d2b51f8f613409cad2c81b39487e5,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
01422046065d2b51f8f613409cad2c81b39487e5,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
01422046065d2b51f8f613409cad2c81b39487e5,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
01422046065d2b51f8f613409cad2c81b39487e5,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
01422046065d2b51f8f613409cad2c81b39487e5,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
01422046065d2b51f8f613409cad2c81b39487e5,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
01422046065d2b51f8f613409cad2c81b39487e5,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
01422046065d2b51f8f613409cad2c81b39487e5,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
01422046065d2b51f8f613409cad2c81b39487e5,b2be7e12cce8e62eeee512fbea4a32503d048120,Refs #33002 -- Made template_tests.tests.py's tests test both Lexer and DebugLexer.,False
01422046065d2b51f8f613409cad2c81b39487e5,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
01422046065d2b51f8f613409cad2c81b39487e5,c28a41f4f1d9c8f6bd0e60baa6ed79c332c89303,"[4.0.x] Added stub release notes and release date for 4.0.2, 3.2.12, and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main",False
01422046065d2b51f8f613409cad2c81b39487e5,c28a41f4f1d9c8f6bd0e60baa6ed79c332c89303,"[4.0.x] Added stub release notes and release date for 4.0.2, 3.2.12, and 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main",False
01422046065d2b51f8f613409cad2c81b39487e5,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
01422046065d2b51f8f613409cad2c81b39487e5,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,2c2b748d95a8284edf54e80c979ffa2170eaadba,"[4.0.x] Added release date and stub release notes for 4.0.7 and 3.2.15 releases.

Backport of 0c1675781ec5944132fe5a475ca6064edc71bd81 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,90dc60d1a81c0e39cd851ab3e4cf6e471c501b86,"[4.0.x] Added stub release notes for 4.0.7.

Backport of c6932ea2ea7ec431245b9a343c72318bb758072f from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,b8b449fe203a3d91a7fb8eda2426ba36ebc3692d,"[4.0.x] Adjusted release notes for 4.0.7 and 3.2.15.

Backport of cadd864f6878c1c02a014589876ece166befdeb3 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,90dc60d1a81c0e39cd851ab3e4cf6e471c501b86,"[4.0.x] Added stub release notes for 4.0.7.

Backport of c6932ea2ea7ec431245b9a343c72318bb758072f from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,b8b449fe203a3d91a7fb8eda2426ba36ebc3692d,"[4.0.x] Adjusted release notes for 4.0.7 and 3.2.15.

Backport of cadd864f6878c1c02a014589876ece166befdeb3 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,2eb7dedd8f40f911d581d4e7619c046cefe203ce,"[4.0.x] Adjusted version 4.0.7 release notes.

Backport of 9062c23de80e999009cbe4100d83e90dd0463612 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,2c2b748d95a8284edf54e80c979ffa2170eaadba,"[4.0.x] Added release date and stub release notes for 4.0.7 and 3.2.15 releases.

Backport of 0c1675781ec5944132fe5a475ca6064edc71bd81 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,2eb7dedd8f40f911d581d4e7619c046cefe203ce,"[4.0.x] Adjusted version 4.0.7 release notes.

Backport of 9062c23de80e999009cbe4100d83e90dd0463612 from main",False
b7d9529cbe0af4adabb6ea5d01ed8dcce3668fb3,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
17358fb35fb7217423d4c4877ccb6d1a3a40b1c3,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17358fb35fb7217423d4c4877ccb6d1a3a40b1c3,842a771e0527c36a9bcb3984057bb30903e71af3,"i18n security fix. Details will be posted shortly to the Django mailing lists and the official weblog.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17358fb35fb7217423d4c4877ccb6d1a3a40b1c3,8a7b22d4a623bcd95190d2f5a958472fb41e576d,"[4.2.x] Fixed CVE-2023-23969 -- Prevented DoS with pathological values for Accept-Language.

The parsed values of Accept-Language headers are cached in order to
avoid repetitive parsing. This leads to a potential denial-of-service
vector via excessive memory usage if the raw value of Accept-Language
headers is very large.

Accept-Language headers are now limited to a maximum length in order
to avoid this issue.",False
17358fb35fb7217423d4c4877ccb6d1a3a40b1c3,8a7b22d4a623bcd95190d2f5a958472fb41e576d,"[4.2.x] Fixed CVE-2023-23969 -- Prevented DoS with pathological values for Accept-Language.

The parsed values of Accept-Language headers are cached in order to
avoid repetitive parsing. This leads to a potential denial-of-service
vector via excessive memory usage if the raw value of Accept-Language
headers is very large.

Accept-Language headers are now limited to a maximum length in order
to avoid this issue.",False
ad32c218850ad40972dcef57beb460f8c979dd6d,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,9faa1cd9b59a2b035d6af79079c2f5eb7d43772c,"Fixed #10747: fixed the auth tests to ignore broken user-supplied login/logout templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,9faa1cd9b59a2b035d6af79079c2f5eb7d43772c,"Fixed #10747: fixed the auth tests to ignore broken user-supplied login/logout templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad32c218850ad40972dcef57beb460f8c979dd6d,1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
ad32c218850ad40972dcef57beb460f8c979dd6d,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ad32c218850ad40972dcef57beb460f8c979dd6d,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
ad32c218850ad40972dcef57beb460f8c979dd6d,1a274ccd6bc1afbdac80344c9b6e5810c1162b5f,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,f6e1789654e82bac08cead5a2d2a9132f6403f52,Fixed #28577 -- Added checks for ArrayField and JSONField to prevent mutable defaults.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,4f7467b6905482a5d826c2815dcf8c6dd332340d,Refs #28577 -- Added check for HStoreField to prevent mutable default.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,00e8e514e173dbbbc9d30f5753f4605eeffb2340,Name PostgreSQL correctly.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,4f7467b6905482a5d826c2815dcf8c6dd332340d,Refs #28577 -- Added check for HStoreField to prevent mutable default.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,00e8e514e173dbbbc9d30f5753f4605eeffb2340,Name PostgreSQL correctly.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,193c109327c5216cab1d4eed6bfdff24629b09a3,Switched TestCase to SimpleTestCase where possible in Django's tests.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,f6e1789654e82bac08cead5a2d2a9132f6403f52,Fixed #28577 -- Added checks for ArrayField and JSONField to prevent mutable defaults.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,193c109327c5216cab1d4eed6bfdff24629b09a3,Switched TestCase to SimpleTestCase where possible in Django's tests.,False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
4f5b58f5cd3c57fee9972ab074f8dc6895d8f387,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,b664cb818d2e5896df2763299ea2c61a9af069a8,Fixed #19237 (again) - Made strip_tags consistent between Python versions,False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,d1503afd66ca8f2f8d3819ba8a60727e0ee66cec,"[1.6.x] Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/
Backport of 6ca6c36f8 from master.",False
b6b3cb9899214a23ebb0f4ebf0e0b300b0ee524f,d1503afd66ca8f2f8d3819ba8a60727e0ee66cec,"[1.6.x] Improved strip_tags and clarified documentation

The fact that strip_tags cannot guarantee to really strip all
non-safe HTML content was not clear enough. Also see:
https://www.djangoproject.com/weblog/2014/mar/22/strip-tags-advisory/
Backport of 6ca6c36f8 from master.",False
b3e4494d759202a3b6bf247fd34455bf13be5b80,ad104fb50feae2312f79c710b97f99bb55f0fd23,"[3.2.x] Added stub release notes for 3.2.15 release.

Backport of 0c1675781ec5944132fe5a475ca6064edc71bd81 from main",False
b3e4494d759202a3b6bf247fd34455bf13be5b80,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
b3e4494d759202a3b6bf247fd34455bf13be5b80,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
b3e4494d759202a3b6bf247fd34455bf13be5b80,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
b3e4494d759202a3b6bf247fd34455bf13be5b80,ad104fb50feae2312f79c710b97f99bb55f0fd23,"[3.2.x] Added stub release notes for 3.2.15 release.

Backport of 0c1675781ec5944132fe5a475ca6064edc71bd81 from main",False
b3e4494d759202a3b6bf247fd34455bf13be5b80,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
20c67a0693c4ede2b09af02574823485e82e4c8f,c7fdc790cfebe52371e04c03164ac5ab93ac3e67,"[3.1.x] Added stub release notes and date for Django 3.1.12 and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
20c67a0693c4ede2b09af02574823485e82e4c8f,c7fdc790cfebe52371e04c03164ac5ab93ac3e67,"[3.1.x] Added stub release notes and date for Django 3.1.12 and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
20c67a0693c4ede2b09af02574823485e82e4c8f,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
20c67a0693c4ede2b09af02574823485e82e4c8f,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
20c67a0693c4ede2b09af02574823485e82e4c8f,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
20c67a0693c4ede2b09af02574823485e82e4c8f,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
20c67a0693c4ede2b09af02574823485e82e4c8f,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
20c67a0693c4ede2b09af02574823485e82e4c8f,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
20c67a0693c4ede2b09af02574823485e82e4c8f,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
20c67a0693c4ede2b09af02574823485e82e4c8f,c7fdc790cfebe52371e04c03164ac5ab93ac3e67,"[3.1.x] Added stub release notes and date for Django 3.1.12 and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
20c67a0693c4ede2b09af02574823485e82e4c8f,c7fdc790cfebe52371e04c03164ac5ab93ac3e67,"[3.1.x] Added stub release notes and date for Django 3.1.12 and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
20c67a0693c4ede2b09af02574823485e82e4c8f,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9ca0ff6268eeff92d0d0ac2c315d4b6a8e229155,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,2ca980195653a754a1c4726f5bb253147c6cb329,"Fixed #17810. Catch session key errors.

Catches memcached session key errors related to overly long session keys.
This is a long-standing bug, but severity was exacerbated by the addition
of cookie-backed session storage, which generates long session values. If
an installation switched from cookie-backed session store to memcached,
users would not be able to log in because of the server error from overly
long memcached keys.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
66d12d1ababa8f062857ee5eb43276493720bf16,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,2ca980195653a754a1c4726f5bb253147c6cb329,"Fixed #17810. Catch session key errors.

Catches memcached session key errors related to overly long session keys.
This is a long-standing bug, but severity was exacerbated by the addition
of cookie-backed session storage, which generates long session values. If
an installation switched from cookie-backed session store to memcached,
users would not be able to log in because of the server error from overly
long memcached keys.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
66d12d1ababa8f062857ee5eb43276493720bf16,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,ed9cd4fd8b425ab5010b27aefc7ef6e50d55fb54,Fixed #21000 -- Made cached_db session backend respect SESSION_CACHE_ALIAS,False
66d12d1ababa8f062857ee5eb43276493720bf16,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
66d12d1ababa8f062857ee5eb43276493720bf16,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,ed9cd4fd8b425ab5010b27aefc7ef6e50d55fb54,Fixed #21000 -- Made cached_db session backend respect SESSION_CACHE_ALIAS,False
66d12d1ababa8f062857ee5eb43276493720bf16,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
66d12d1ababa8f062857ee5eb43276493720bf16,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,5543b10608fc723e7245f5d57eaa22102e863d2a,"Fixed #12349: Added missing unquote in admin history view. Thanks for the report guard.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,5543b10608fc723e7245f5d57eaa22102e863d2a,"Fixed #12349: Added missing unquote in admin history view. Thanks for the report guard.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d3a45e10c8ac8268899999129daa27652ec0da35,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c5544d289233f501917e25970c03ed444abbd4f0,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
c5544d289233f501917e25970c03ed444abbd4f0,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,4ba4c07e4e3154d20513957c3ea968277d4db0c2,"[3.2.x] Added stub release notes and date for Django 3.2.4, 3.1.12, and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,4ba4c07e4e3154d20513957c3ea968277d4db0c2,"[3.2.x] Added stub release notes and date for Django 3.2.4, 3.1.12, and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,4ba4c07e4e3154d20513957c3ea968277d4db0c2,"[3.2.x] Added stub release notes and date for Django 3.2.4, 3.1.12, and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,4ba4c07e4e3154d20513957c3ea968277d4db0c2,"[3.2.x] Added stub release notes and date for Django 3.2.4, 3.1.12, and 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
dfaba12cda060b8b292ae1d271b44bf810b1c5b9,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,910df41352165072a40da80df647e62aec874989,[4.1.x] Added stub release notes for 4.1.12 and 3.2.22.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7b7024742250414e426ad49fb80db943e7ba4e8,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7b7024742250414e426ad49fb80db943e7ba4e8,f94f466cd3461527fb76a3e8951039a3c2388829,"Fixed #19496 -- Added truncatechars_html filter.

Thanks esevece for the suggestion and  Nick Sandford and Martin Warne
for the inital work on the patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,910df41352165072a40da80df647e62aec874989,[4.1.x] Added stub release notes for 4.1.12 and 3.2.22.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,f47d5aac622c334ebeba06b7460204aeb98661e2,Refs #27804 -- Used subTest() in tests.utils_tests.test_text.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,b2bd08bb7a912a1504f5fb5018f5317e6b5423cd,"Fixed #30892 -- Fixed slugify() and admin's URLify.js for ""İ"".

Thanks Luis Nell for the implementation idea and very detailed report.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
c7b7024742250414e426ad49fb80db943e7ba4e8,5d9c512e5b42e1c686300c214453bf0b820d7326,Added test for ValueErrors in unescape_string_literal().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,321e94fa41b121f65c02119c02098df327bbd569,"Refs #27392 -- Removed ""Tests that"", ""Ensures that"", etc. from test docstrings.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,9aaeec337e217109208672d8fe47eeb49ca492b5,"Fixed #26866 -- Added format_lazy function

Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).",False
c7b7024742250414e426ad49fb80db943e7ba4e8,838e432e3e5519c5383d12018e6c78f8ec7833c1,Completed test coverage for utils.text.Truncator.chars().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,e4b0a8f93c7cff2da06090726567944fcf7d04d7,"Tests for utils.text.wrap

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14752 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7b7024742250414e426ad49fb80db943e7ba4e8,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,389c3ffc04eaa6186ae0bad523995e8fcf7620df,Updated tests after French translation update,False
c7b7024742250414e426ad49fb80db943e7ba4e8,40b95a24ae159b6600457a23d6c2779a18037b7b,"Fixed #20568 -- truncatewords_html no longer splits words containing HTML entities.

Thanks yann0 at hotmail.com for the report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,847171b0d09c7da95cd404bab80f84c890fc5cfd,Fixed test failures when running in a narrow Python build.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,e1d673c373a7d032060872b690a92fc95496612e,Fixed unescape_string_literal() crash on empty strings.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,dde05e192c15158cd2ea918ce2ee7a2b9b6ceba6,Added more tests for slugify().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,caa3562d5bec1196502352a715a539bdb0f73c2d,"Fixed #24242 -- Improved efficiency of utils.text.compress_sequence()

The function no longer flushes zfile after each write as doing so can
lead to the gzipped streamed content being larger than the original
content; each flush adds a 5/6 byte type 0 block. Removing this means
buf.read() may return nothing, so only yield if that has some data.
Testing shows without the flush() the buffer is being flushed every 17k
or so and compresses the same as if it had been done as a whole string.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,f47d5aac622c334ebeba06b7460204aeb98661e2,Refs #27804 -- Used subTest() in tests.utils_tests.test_text.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,b2bd08bb7a912a1504f5fb5018f5317e6b5423cd,"Fixed #30892 -- Fixed slugify() and admin's URLify.js for ""İ"".

Thanks Luis Nell for the implementation idea and very detailed report.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
c7b7024742250414e426ad49fb80db943e7ba4e8,5d9c512e5b42e1c686300c214453bf0b820d7326,Added test for ValueErrors in unescape_string_literal().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,321e94fa41b121f65c02119c02098df327bbd569,"Refs #27392 -- Removed ""Tests that"", ""Ensures that"", etc. from test docstrings.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,9aaeec337e217109208672d8fe47eeb49ca492b5,"Fixed #26866 -- Added format_lazy function

Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).",False
c7b7024742250414e426ad49fb80db943e7ba4e8,838e432e3e5519c5383d12018e6c78f8ec7833c1,Completed test coverage for utils.text.Truncator.chars().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,e4b0a8f93c7cff2da06090726567944fcf7d04d7,"Tests for utils.text.wrap

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14752 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c7b7024742250414e426ad49fb80db943e7ba4e8,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,389c3ffc04eaa6186ae0bad523995e8fcf7620df,Updated tests after French translation update,False
c7b7024742250414e426ad49fb80db943e7ba4e8,40b95a24ae159b6600457a23d6c2779a18037b7b,"Fixed #20568 -- truncatewords_html no longer splits words containing HTML entities.

Thanks yann0 at hotmail.com for the report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,847171b0d09c7da95cd404bab80f84c890fc5cfd,Fixed test failures when running in a narrow Python build.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,e1d673c373a7d032060872b690a92fc95496612e,Fixed unescape_string_literal() crash on empty strings.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,dde05e192c15158cd2ea918ce2ee7a2b9b6ceba6,Added more tests for slugify().,False
c7b7024742250414e426ad49fb80db943e7ba4e8,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,caa3562d5bec1196502352a715a539bdb0f73c2d,"Fixed #24242 -- Improved efficiency of utils.text.compress_sequence()

The function no longer flushes zfile after each write as doing so can
lead to the gzipped streamed content being larger than the original
content; each flush adds a 5/6 byte type 0 block. Removing this means
buf.read() may return nothing, so only yield if that has some data.
Testing shows without the flush() the buffer is being flushed every 17k
or so and compresses the same as if it had been done as a whole string.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,910df41352165072a40da80df647e62aec874989,[4.1.x] Added stub release notes for 4.1.12 and 3.2.22.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,f94f466cd3461527fb76a3e8951039a3c2388829,"Fixed #19496 -- Added truncatechars_html filter.

Thanks esevece for the suggestion and  Nick Sandford and Martin Warne
for the inital work on the patch.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,910df41352165072a40da80df647e62aec874989,[4.1.x] Added stub release notes for 4.1.12 and 3.2.22.,False
c7b7024742250414e426ad49fb80db943e7ba4e8,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
c7b7024742250414e426ad49fb80db943e7ba4e8,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1ba1cdce7d58e6740fe51955d945b56ae51d072a,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
f27c38ab5d90f68c9dd60cabef248a570c0be8fc,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
1853724acaf17ed7414d54c7d2b5563a25025a71,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,6c1923029748de4a0f443260751a93c1e0ea10fa,Added stub release notes for 3.1.1.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,6c1923029748de4a0f443260751a93c1e0ea10fa,Added stub release notes for 3.1.1.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
1853724acaf17ed7414d54c7d2b5563a25025a71,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
1853724acaf17ed7414d54c7d2b5563a25025a71,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
1853724acaf17ed7414d54c7d2b5563a25025a71,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
1853724acaf17ed7414d54c7d2b5563a25025a71,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
1853724acaf17ed7414d54c7d2b5563a25025a71,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
1853724acaf17ed7414d54c7d2b5563a25025a71,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,4ea7a11659b8a0ab07b0d2e847975f7324664f10,"Added initial cut at serialization framework, along with some basic tests and a stab at some docs.  This is all a bit rough right now, so expect some bumps.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,c84ff156c190d7e425da1abef56f09127fd7e9db,"Fixed a serialization problem with objects that have a foreign key on an object whose primary key is a OneToOneField.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5371 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,375c3edf6edc0bb9f3e726f67c70fa524556713b,"Added various fixes to serializer implementations. Fixes mostly deal with handling nulls, non-integer primary key values (e.g., OneToOne fields or strings), and reconstruction of primary key references in related fields.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4718 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,c9032ab07f3694f3ae7da9b0017b764248ce28c9,"Added a JSON serializer, a few more tests, and a couple more lines of docs.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3237 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,4ea7a11659b8a0ab07b0d2e847975f7324664f10,"Added initial cut at serialization framework, along with some basic tests and a stab at some docs.  This is all a bit rough right now, so expect some bumps.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,c84ff156c190d7e425da1abef56f09127fd7e9db,"Fixed a serialization problem with objects that have a foreign key on an object whose primary key is a OneToOneField.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5371 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,375c3edf6edc0bb9f3e726f67c70fa524556713b,"Added various fixes to serializer implementations. Fixes mostly deal with handling nulls, non-integer primary key values (e.g., OneToOne fields or strings), and reconstruction of primary key references in related fields.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4718 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,c9032ab07f3694f3ae7da9b0017b764248ce28c9,"Added a JSON serializer, a few more tests, and a couple more lines of docs.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3237 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1c60d07ba23e0350351c278ad28d0bd5aa410b40,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,42e31d49220d10f475321e63c6f15b3e49e0dac2,"[3.1.x] Added stub release notes for 3.1.1.

Backport of 6c1923029748de4a0f443260751a93c1e0ea10fa from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,42e31d49220d10f475321e63c6f15b3e49e0dac2,"[3.1.x] Added stub release notes for 3.1.1.

Backport of 6c1923029748de4a0f443260751a93c1e0ea10fa from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,18e87ac85f450af8fe90a8bd01d6a92cc7b87ce4,"[3.1.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,18e87ac85f450af8fe90a8bd01d6a92cc7b87ce4,"[3.1.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,18e87ac85f450af8fe90a8bd01d6a92cc7b87ce4,"[3.1.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,18e87ac85f450af8fe90a8bd01d6a92cc7b87ce4,"[3.1.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,80e58b3211ae54754b734a409d5b944117d7963d,"Fixed #2315 -- added work around for Windows timezone setting (i.e. we can't do
it). This will work until somebody wants to write some full Win32 timezone changing code for us. Thanks to Marc Fargas and SmileyChris for the combined patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4487 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,4d59730fad1fe882ad957b7ad463398329d2c8ea,"Fixed #2934: greatly improved the accuracy if the isExistingURL check.  Also introduced a new setting, URL_VALIDATOR_USER_AGENT, which is the User-Agent that the validator will use to check for URL existance.  Thanks, Jeremy.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4035 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f71384a52b606708b3bea5e9fbe75f1de8108701,"Fixed #15229 -- Improved URLValidator to accept ftp:// links. Thanks, codefisher and crayz_train

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f71384a52b606708b3bea5e9fbe75f1de8108701,"Fixed #15229 -- Improved URLValidator to accept ftp:// links. Thanks, codefisher and crayz_train

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,d06531d3f01347f51c494b6275b89ff4607037b3,"[1.3.X] Fixes #15975 -- Test failure in model validation tests due to us now having https://www.djangoproject.com

Backport of r16163 from trunk

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.3.X@16164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f71384a52b606708b3bea5e9fbe75f1de8108701,"Fixed #15229 -- Improved URLValidator to accept ftp:// links. Thanks, codefisher and crayz_train

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,bd123104272606465dd0391f0c3650388b0fb45c,"Converted regressiontests/forms/fields.py to unittests

This makes merging in the soc2009/model-validation simpler and rids us a
little bit more of awful doctests. Thanks Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11858 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,24e0b56dcb92febdaf9ea83b394d7866c7c956a9,"Moved the test added in r15504 to a different case where it doesn't actually verify the existence of the URL by calling urlopen but only validates it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,68f216a6925e5e0d78e499157b2c2a261bb7f24c,"Fixed #12989 - Fixed verification of IDN URLs. Thanks to Fraser Nevett for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12620 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,68f216a6925e5e0d78e499157b2c2a261bb7f24c,"Fixed #12989 - Fixed verification of IDN URLs. Thanks to Fraser Nevett for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12620 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,e258d9a10b92ef581556d9f265d7798d28b3330d,"Fixed #14955 -- Made the URLValidator use a HEAD request when verifying a URL. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15500 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,516051bfd2b537f441c46359cce7eacbf15fc4b8,"A whole lotta documentation fixes: Fixes #8704, #8826, #8980, #9243, #9343, #9529,

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10303 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,516051bfd2b537f441c46359cce7eacbf15fc4b8,"A whole lotta documentation fixes: Fixes #8704, #8826, #8980, #9243, #9343, #9529,

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10303 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,cc25361b17fbc0d3622bb7562f90f1ac856aa363,"Fixed #12271 -- Fixed typo in URLField docs. Thanks, adam@andyet.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12184 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,80e58b3211ae54754b734a409d5b944117d7963d,"Fixed #2315 -- added work around for Windows timezone setting (i.e. we can't do
it). This will work until somebody wants to write some full Win32 timezone changing code for us. Thanks to Marc Fargas and SmileyChris for the combined patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4487 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,4d59730fad1fe882ad957b7ad463398329d2c8ea,"Fixed #2934: greatly improved the accuracy if the isExistingURL check.  Also introduced a new setting, URL_VALIDATOR_USER_AGENT, which is the User-Agent that the validator will use to check for URL existance.  Thanks, Jeremy.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4035 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,d06531d3f01347f51c494b6275b89ff4607037b3,"[1.3.X] Fixes #15975 -- Test failure in model validation tests due to us now having https://www.djangoproject.com

Backport of r16163 from trunk

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.3.X@16164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f71384a52b606708b3bea5e9fbe75f1de8108701,"Fixed #15229 -- Improved URLValidator to accept ftp:// links. Thanks, codefisher and crayz_train

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,bd123104272606465dd0391f0c3650388b0fb45c,"Converted regressiontests/forms/fields.py to unittests

This makes merging in the soc2009/model-validation simpler and rids us a
little bit more of awful doctests. Thanks Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11858 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,24e0b56dcb92febdaf9ea83b394d7866c7c956a9,"Moved the test added in r15504 to a different case where it doesn't actually verify the existence of the URL by calling urlopen but only validates it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,e258d9a10b92ef581556d9f265d7798d28b3330d,"Fixed #14955 -- Made the URLValidator use a HEAD request when verifying a URL. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15500 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,cc25361b17fbc0d3622bb7562f90f1ac856aa363,"Fixed #12271 -- Fixed typo in URLField docs. Thanks, adam@andyet.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12184 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1a76dbefdfc60e2d5954c0ba614c3d054ba9c3f0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,f0f8116a5f1f72617d8fbab0372f715c1036a9f6,"[1.8.x] Added stub release notes for 1.8.2.

Backport of 3cb386b8c2b2d7d72a3778c89d5d1f997fa0cad8 from master",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
31cb25adecba930bdeee4556709f5a1c42d88fd6,f0f8116a5f1f72617d8fbab0372f715c1036a9f6,"[1.8.x] Added stub release notes for 1.8.2.

Backport of 3cb386b8c2b2d7d72a3778c89d5d1f997fa0cad8 from master",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,70a0351fefaab4bce8c1085008ec5f12ba6cf279,"Fixed #18184 -- Moved algorithm identification code to hashers module

Thanks Eli Collins for the report and the patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,70a0351fefaab4bce8c1085008ec5f12ba6cf279,"Fixed #18184 -- Moved algorithm identification code to hashers module

Thanks Eli Collins for the report and the patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,dce820ff70f00e974afd3e6e310aa825bc55319f,"Renovated password hashing. Many thanks to Justine Tunney for help with the initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a8d0fc10015be745c5d274b990d94dfb7d57c9d5,"Fixed #17944 -- Prevented an error in the user change page of the admin when the content of the password field doesn't match the expected format. Thanks saxix for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17775 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,7989a78baf2c613cc3b75b923f12d178c9bbeb08,"Fixed #13000 - Use a dictionary for the error messages definition in user creation and change form. Thanks for the patch, lgs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12785 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,2619dc828510cf36791fcf87705d2f9ce3176c86,"Fixed #14674 -- Prevent user accounts with an unusable password from resetting passwords. Thanks, summerisgone, thejaswi_puthraya and lrekucki.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16455 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,7d71a9e45fa85bff15501057b69440b4dfae688d,"Fixed #9213 - Added check to prevent inactive users from resetting their password. Thanks to John Scott for report and draft patch, and Evgeny Fadeev for final patch with test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15805 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,bf65fd0a8050891cf4155eef8dbbe3d364699748,"Fixed #8901 -- Corrected typo in docstring. Thanks to Hayley Bonham <djangocode@vortex.cx> for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8207 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,c8015052d935a99a5c8f96434b2d0cd16d8a4e14,"Fixed #5786: relaxed the validation for usernames to allow more common characters '@', etc.

This is really just a stop-gap until we come up with a improved way of handling
disparate auth data, but it should help us stretch a bit more milage out of the
current system.

Thanks to alextreme, lbruno, and clayg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,70a0351fefaab4bce8c1085008ec5f12ba6cf279,"Fixed #18184 -- Moved algorithm identification code to hashers module

Thanks Eli Collins for the report and the patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,dce820ff70f00e974afd3e6e310aa825bc55319f,"Renovated password hashing. Many thanks to Justine Tunney for help with the initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a8d0fc10015be745c5d274b990d94dfb7d57c9d5,"Fixed #17944 -- Prevented an error in the user change page of the admin when the content of the password field doesn't match the expected format. Thanks saxix for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17775 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,7989a78baf2c613cc3b75b923f12d178c9bbeb08,"Fixed #13000 - Use a dictionary for the error messages definition in user creation and change form. Thanks for the patch, lgs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12785 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,2619dc828510cf36791fcf87705d2f9ce3176c86,"Fixed #14674 -- Prevent user accounts with an unusable password from resetting passwords. Thanks, summerisgone, thejaswi_puthraya and lrekucki.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16455 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,7d71a9e45fa85bff15501057b69440b4dfae688d,"Fixed #9213 - Added check to prevent inactive users from resetting their password. Thanks to John Scott for report and draft patch, and Evgeny Fadeev for final patch with test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15805 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,bf65fd0a8050891cf4155eef8dbbe3d364699748,"Fixed #8901 -- Corrected typo in docstring. Thanks to Hayley Bonham <djangocode@vortex.cx> for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8207 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,c8015052d935a99a5c8f96434b2d0cd16d8a4e14,"Fixed #5786: relaxed the validation for usernames to allow more common characters '@', etc.

This is really just a stop-gap until we come up with a improved way of handling
disparate auth data, but it should help us stretch a bit more milage out of the
current system.

Thanks to alextreme, lbruno, and clayg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,991d3d6c12296b381959ae86e74fd505604daeac,"Slightly improved the help text for the ""Password"" field in the `auth.User` admin form, and PEP8-cleaned up the area while I was there.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17326 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,70a0351fefaab4bce8c1085008ec5f12ba6cf279,"Fixed #18184 -- Moved algorithm identification code to hashers module

Thanks Eli Collins for the report and the patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,991d3d6c12296b381959ae86e74fd505604daeac,"Slightly improved the help text for the ""Password"" field in the `auth.User` admin form, and PEP8-cleaned up the area while I was there.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17326 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,703c266682be39f7153498ad0d8031231f12ee79,"Fixed #18182 -- Made is_usable_password check if hashing algorithm is correct

The display of the ReadOnlyPasswordHashWidget has also been improved to
distinguish empty/unusable password from erroneous password.
Fixed #18453 also.
Thanks danielr and Leo for the reports and Moritz Sichert for the
initial patch.",False
22b74fa09d7ccbc8c52270d648a0da7f3f0fa2bc,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
50ce7fb57d79e8940ccf6e2781f2f01df029b5c5,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
50ce7fb57d79e8940ccf6e2781f2f01df029b5c5,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,db01d1d0a8b1d584b025164988de8003c2d29d1c,"Fixed #5318 -- Added __contains__ method to HttpRequest, mirroring existing has_key method. Thanks for the patch, robbie@prelab.net.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6097 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,db01d1d0a8b1d584b025164988de8003c2d29d1c,"Fixed #5318 -- Added __contains__ method to HttpRequest, mirroring existing has_key method. Thanks for the patch, robbie@prelab.net.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6097 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,6ffe1d1e1f881f7c952b7a022841d1c591f5771d,"Removed some dead code, and old/bad constructs from the HttpResponse classes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,3234a932b2054e30604d29f93e65180fa7c3fc05,"Fixed #1117 -- Added HttpResponsePermanentRedirect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1816 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,125c748cf6d59012ac6c9e6935d7692f615d0e14,"Fixed #11522: Restored ability of http redirect responses to correctly handle redirect locations with non-ASCII chars.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12659 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,6ffe1d1e1f881f7c952b7a022841d1c591f5771d,"Removed some dead code, and old/bad constructs from the HttpResponse classes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,3234a932b2054e30604d29f93e65180fa7c3fc05,"Fixed #1117 -- Added HttpResponsePermanentRedirect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1816 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,125c748cf6d59012ac6c9e6935d7692f615d0e14,"Fixed #11522: Restored ability of http redirect responses to correctly handle redirect locations with non-ASCII chars.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12659 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e34685034b60be1112160e76091e5aee60149fa1,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
bf4888d317ba4506d091eeac6e8b4f1fcc731199,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
f4af67b9b41e0f4c117a8741da3abbd1c869ab28,39f35d4b9de223b72c67bb1d12e65669b4e1355b,Fixed #25871 -- Added expressions support to QuerySet.values().,False
f4af67b9b41e0f4c117a8741da3abbd1c869ab28,39f35d4b9de223b72c67bb1d12e65669b4e1355b,Fixed #25871 -- Added expressions support to QuerySet.values().,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,06d0a1bd56a9899c351ca047a05813e8dd6a4e17,"Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,06d0a1bd56a9899c351ca047a05813e8dd6a4e17,"Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,06d0a1bd56a9899c351ca047a05813e8dd6a4e17,"Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,06d0a1bd56a9899c351ca047a05813e8dd6a4e17,"Added stub release notes and release date for 5.0.2, 4.2.10, and 3.2.24.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
55519d6cf8998fe4c8f5c8abffc2b10a7c3d14e9,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,7e8339748cc199b4a13513891d9ac4f1e4794588,Added stub release notes for 2.2.11.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,a34fba5e596a3ec95bf284fd77b1609e71a65019,"Simplified a bit GeoAggregate classes

Thanks Josh Smeaton for the review. Refs #24152.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,a34fba5e596a3ec95bf284fd77b1609e71a65019,"Simplified a bit GeoAggregate classes

Thanks Josh Smeaton for the review. Refs #24152.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
6695d29b1c1ce979725816295a26ecc64ae0e927,f59fd15c4928caf3dfcbd50f6ab47be409a43b01,Fixed #14030 -- Allowed annotations to accept all expressions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,a34fba5e596a3ec95bf284fd77b1609e71a65019,"Simplified a bit GeoAggregate classes

Thanks Josh Smeaton for the review. Refs #24152.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,a34fba5e596a3ec95bf284fd77b1609e71a65019,"Simplified a bit GeoAggregate classes

Thanks Josh Smeaton for the review. Refs #24152.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
6695d29b1c1ce979725816295a26ecc64ae0e927,f59fd15c4928caf3dfcbd50f6ab47be409a43b01,Fixed #14030 -- Allowed annotations to accept all expressions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,335c9c94acf263901fb023404408880245b0c4b4,Simplified imports from django.db and django.contrib.gis.db.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,83b04d4f88dd65ae630a45385de34e275899dc41,Fixed #29048 -- Added **extra_context to database function as_vendor() methods.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,273918c25b203d32a7922bc7c3610e4a089fe931,Added stub release notes for 3.0.4.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,9d93dff33338c90a55f7158fbbe0d82e88e13fa3,Fixed #28665 -- Change some database exceptions to NotImplementedError per PEP 249.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,e9149d3eb0ed0ddc8b27b1990eb2b7293c1231cd,Fixed #27603 -- Fixed AsKML when queryset is evaluated more than once.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0a13b249e2e0e901d795f4198a3a5dfd1fc49554,"Fixed #26967 -- Added MySQL support for AsGeoJSON, GeoHash, IsValid functions, and isvalid lookup.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,00cb9e13b4cf06ed2be27ee9e7fc18969ae69f7d,Fixed #15165 -- Prevented wrong results with perimeter on geodetic fields.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,44bdbbc316e4e0b2f5d8c7767d04924c9e00f2da,Added Spatialite support to GIS functions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fcf494b48fea7c0c55ea29721ba0b2d250351ff8,Fixed #24688 -- Added Oracle support for new-style GIS functions.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d9ff5ef36d3f714736d633435d45f03eac9c17b5,"Fixed #24214 -- Added GIS functions to replace geoqueryset's methods

Thanks Simon Charette and Tim Graham for the reviews.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fd892f3443fe9a35684b7b798a8fe1b07d118e3c,Fixed #28006 -- Allowed using D with lookups on Distance annotations.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,3905cfa1a578275323bfbfbef09f5aee05b33301,"Fixed #28353 -- Fixed some GIS functions when queryset is evaluated more than once.

Reverted test for refs #27603 in favor of using FuncTestMixin.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,38a6df555f285cc4f1732467c4cf0617a2050124,Fixed #27602 -- Added Oracle support for BoundingCircle GIS function.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d9ff5ef36d3f714736d633435d45f03eac9c17b5,"Fixed #24214 -- Added GIS functions to replace geoqueryset's methods

Thanks Simon Charette and Tim Graham for the reviews.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,71e20814fcb5983bdc96a6b15765b8f6abd11542,Added MySQL support to GIS functions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,e9149d3eb0ed0ddc8b27b1990eb2b7293c1231cd,Fixed #27603 -- Fixed AsKML when queryset is evaluated more than once.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,0a13b249e2e0e901d795f4198a3a5dfd1fc49554,"Fixed #26967 -- Added MySQL support for AsGeoJSON, GeoHash, IsValid functions, and isvalid lookup.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,00cb9e13b4cf06ed2be27ee9e7fc18969ae69f7d,Fixed #15165 -- Prevented wrong results with perimeter on geodetic fields.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,44bdbbc316e4e0b2f5d8c7767d04924c9e00f2da,Added Spatialite support to GIS functions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fcf494b48fea7c0c55ea29721ba0b2d250351ff8,Fixed #24688 -- Added Oracle support for new-style GIS functions.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d9ff5ef36d3f714736d633435d45f03eac9c17b5,"Fixed #24214 -- Added GIS functions to replace geoqueryset's methods

Thanks Simon Charette and Tim Graham for the reviews.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fd892f3443fe9a35684b7b798a8fe1b07d118e3c,Fixed #28006 -- Allowed using D with lookups on Distance annotations.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,3905cfa1a578275323bfbfbef09f5aee05b33301,"Fixed #28353 -- Fixed some GIS functions when queryset is evaluated more than once.

Reverted test for refs #27603 in favor of using FuncTestMixin.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,38a6df555f285cc4f1732467c4cf0617a2050124,Fixed #27602 -- Added Oracle support for BoundingCircle GIS function.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d9ff5ef36d3f714736d633435d45f03eac9c17b5,"Fixed #24214 -- Added GIS functions to replace geoqueryset's methods

Thanks Simon Charette and Tim Graham for the reviews.",False
6695d29b1c1ce979725816295a26ecc64ae0e927,71e20814fcb5983bdc96a6b15765b8f6abd11542,Added MySQL support to GIS functions,False
6695d29b1c1ce979725816295a26ecc64ae0e927,83b04d4f88dd65ae630a45385de34e275899dc41,Fixed #29048 -- Added **extra_context to database function as_vendor() methods.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fcf494b48fea7c0c55ea29721ba0b2d250351ff8,Fixed #24688 -- Added Oracle support for new-style GIS functions.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,7e8339748cc199b4a13513891d9ac4f1e4794588,Added stub release notes for 2.2.11.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,335c9c94acf263901fb023404408880245b0c4b4,Simplified imports from django.db and django.contrib.gis.db.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,83b04d4f88dd65ae630a45385de34e275899dc41,Fixed #29048 -- Added **extra_context to database function as_vendor() methods.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,d5977e492e6e8eb7ba0ac81f85c27d56db85b78c,Refs #25759 -- Fixed some GIS Funcs if different database backends are used.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,273918c25b203d32a7922bc7c3610e4a089fe931,Added stub release notes for 3.0.4.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,9d93dff33338c90a55f7158fbbe0d82e88e13fa3,Fixed #28665 -- Change some database exceptions to NotImplementedError per PEP 249.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,83b04d4f88dd65ae630a45385de34e275899dc41,Fixed #29048 -- Added **extra_context to database function as_vendor() methods.,False
6695d29b1c1ce979725816295a26ecc64ae0e927,fcf494b48fea7c0c55ea29721ba0b2d250351ff8,Fixed #24688 -- Added Oracle support for new-style GIS functions.,False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,01adbb55e6698b512ff202bc5fc81f9565e4003b,"Major refactoring of django.core.management -- it's now a package rather than a 1730-line single module. All django-admin/manage.py commands are now stored in separate modules. This is backwards-incompatible for people who used django.core.management functions directly

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5898 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,01adbb55e6698b512ff202bc5fc81f9565e4003b,"Major refactoring of django.core.management -- it's now a package rather than a 1730-line single module. All django-admin/manage.py commands are now stored in separate modules. This is backwards-incompatible for people who used django.core.management functions directly

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5898 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,de64e0d57076882e6bafd414424e1cf889e319fb,"Fixed #5224 -- Corrected name of admin media option in management runserver command. Thanks for the report, alberto@ingparo.it.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,01adbb55e6698b512ff202bc5fc81f9565e4003b,"Major refactoring of django.core.management -- it's now a package rather than a 1730-line single module. All django-admin/manage.py commands are now stored in separate modules. This is backwards-incompatible for people who used django.core.management functions directly

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5898 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,f07e5d4f5df5ca9ca3366d7ecc4b01c490c13198,"Fixed #627 -- BACKWARDS-INCOMPATIBLE CHANGE. Admin is now an app, not a middleware. See BackwardsIncompatibleChanges for a full list of changes and information on how to update your code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@948 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,f07e5d4f5df5ca9ca3366d7ecc4b01c490c13198,"Fixed #627 -- BACKWARDS-INCOMPATIBLE CHANGE. Admin is now an app, not a middleware. See BackwardsIncompatibleChanges for a full list of changes and information on how to update your code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@948 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,de64e0d57076882e6bafd414424e1cf889e319fb,"Fixed #5224 -- Corrected name of admin media option in management runserver command. Thanks for the report, alberto@ingparo.it.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,01adbb55e6698b512ff202bc5fc81f9565e4003b,"Major refactoring of django.core.management -- it's now a package rather than a 1730-line single module. All django-admin/manage.py commands are now stored in separate modules. This is backwards-incompatible for people who used django.core.management functions directly

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5898 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,199aa88ffb35b8d285a1ac2759f6fbfa1a2420e0,"Moved django.core.handlers.wsgi.AdminMediaHandler to django.core.servers.basehttp. Makes more sense to have it in there, because its only use is for the development server.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@491 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df7f917b7f51ba969faa49d000ffc79572c5dcb4,ff47dc6ba0c100c849486fec7e9a2a4374c5a935,"Fixed #2600 -- Added an option to allow serving admin media from a custom path
with dev server. Thanks, adurdin@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3811 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
8f9a4d3a2bc42f14bb437defd30c7315adbff22c,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,6caf7b313d279d0002bc27b81a92c0bf7cc86e41,"[3.2.x] Added stub release notes for 3.2.22.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ccdade1a0262537868d7ca64374de3d957ca50c5,6caf7b313d279d0002bc27b81a92c0bf7cc86e41,"[3.2.x] Added stub release notes for 3.2.22.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ccdade1a0262537868d7ca64374de3d957ca50c5,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
6fa150b2f8b601668083042324c4add534143cb1,1a2ee697e0631475d95197a795aa2af762537b10,"[1.10.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
6fa150b2f8b601668083042324c4add534143cb1,9c8c39be1ec5ed058914f2385bcf12de0126ac82,"Fixed #2462 -- Changed showRelatedObjectLookupPopup to open a window that's 800-pixels wide. Thanks for reporting, patrick@vonautomatisch.at

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3517 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,ac6164948efc541fc19b27e3968c330aa424d667,"Fixed JavaScript ""curly"" violations.",False
6fa150b2f8b601668083042324c4add534143cb1,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
6fa150b2f8b601668083042324c4add534143cb1,38d972b9ecb01fdb863c686de0b958389bc20220,"Fixed #5880 -- Fixed an XSS hole in the admin interface.
 * Escaped text that gets sent after saving the admin foreignkey popup form.
 * Added quotes around the second argument passed to `opener.dismissAddAnotherPopup` to make the function also work when a text field is used as the primary key.
 * Added a `html_unescape` javascript function to unescape the strings passed in to the `dismissAddAnotherPopup` function so that the added choice displays correctly in the dropdown box.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6691 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,808b3f4b9180dbcd4a8a84323b44a58b9bcdbd4a,"Fixed #106 - ""Add another"" now correctly works in IE - thanks, Paolo


git-svn-id: http://code.djangoproject.com/svn/django/trunk@716 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,7d374ad5973ff5b14e996a38e078c7d46646ae5d,"Added raw_id_admin support to ManyToManyField objects; fixes #260


git-svn-id: http://code.djangoproject.com/svn/django/trunk@516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
6fa150b2f8b601668083042324c4add534143cb1,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6fa150b2f8b601668083042324c4add534143cb1,1dae4ac1778f04805c0ed62c8debb13b281ba02b,"Whitespace cleanup.

* Removed trailing whitespace.
* Added newline to EOF if missing.
* Removed blank lines at EOF.
* Removed some stray tabs.",False
6fa150b2f8b601668083042324c4add534143cb1,6d39cb4119a0fa502fca1f9b3d07436fbd258655,"Fixed #5704 - Admin popup windows won't close when using application/xhtml as default content type

Thanks to Rob van der Linde for the report, and to mb0, dArignac and claudep
for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
6fa150b2f8b601668083042324c4add534143cb1,c7078ff0a272ab81412b08561ae49fae27f20d3e,"Fixed #106 -- Refrain from generating popup window names that IE refuses to pop up.  Thanks for the reports and initial patches nbstrite and jsmullyan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9403 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,3723f8379887a3f47d70ca1e8b743154d62beac0,"Fixed #1404 (thanks, Tom Tobin)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2413 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,688cd557086dcd7b497775765899559575de33a2,"Fixed #1635 -- Admin-site related-object popup no longer fails for edit_inline objects in IE/Win. Thanks, Christopher Lenz

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3066 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,ec4f219ecb7a5e43d0353633fac4dac42d0ee492,Fixed #22463 -- Added code style guide and JavaScript linting (EditorConfig and ESLint),False
6fa150b2f8b601668083042324c4add534143cb1,6eaf154a2e81d21d02f3597dd0e3dad01db8d07c,"Fixed #9341: add another on `ManyToManyField`s with `raw_id_admins` now works correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,9c8c39be1ec5ed058914f2385bcf12de0126ac82,"Fixed #2462 -- Changed showRelatedObjectLookupPopup to open a window that's 800-pixels wide. Thanks for reporting, patrick@vonautomatisch.at

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3517 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,ac6164948efc541fc19b27e3968c330aa424d667,"Fixed JavaScript ""curly"" violations.",False
6fa150b2f8b601668083042324c4add534143cb1,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
6fa150b2f8b601668083042324c4add534143cb1,38d972b9ecb01fdb863c686de0b958389bc20220,"Fixed #5880 -- Fixed an XSS hole in the admin interface.
 * Escaped text that gets sent after saving the admin foreignkey popup form.
 * Added quotes around the second argument passed to `opener.dismissAddAnotherPopup` to make the function also work when a text field is used as the primary key.
 * Added a `html_unescape` javascript function to unescape the strings passed in to the `dismissAddAnotherPopup` function so that the added choice displays correctly in the dropdown box.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6691 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,808b3f4b9180dbcd4a8a84323b44a58b9bcdbd4a,"Fixed #106 - ""Add another"" now correctly works in IE - thanks, Paolo


git-svn-id: http://code.djangoproject.com/svn/django/trunk@716 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,7d374ad5973ff5b14e996a38e078c7d46646ae5d,"Added raw_id_admin support to ManyToManyField objects; fixes #260


git-svn-id: http://code.djangoproject.com/svn/django/trunk@516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
6fa150b2f8b601668083042324c4add534143cb1,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6fa150b2f8b601668083042324c4add534143cb1,1dae4ac1778f04805c0ed62c8debb13b281ba02b,"Whitespace cleanup.

* Removed trailing whitespace.
* Added newline to EOF if missing.
* Removed blank lines at EOF.
* Removed some stray tabs.",False
6fa150b2f8b601668083042324c4add534143cb1,6d39cb4119a0fa502fca1f9b3d07436fbd258655,"Fixed #5704 - Admin popup windows won't close when using application/xhtml as default content type

Thanks to Rob van der Linde for the report, and to mb0, dArignac and claudep
for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
6fa150b2f8b601668083042324c4add534143cb1,c7078ff0a272ab81412b08561ae49fae27f20d3e,"Fixed #106 -- Refrain from generating popup window names that IE refuses to pop up.  Thanks for the reports and initial patches nbstrite and jsmullyan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9403 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,3723f8379887a3f47d70ca1e8b743154d62beac0,"Fixed #1404 (thanks, Tom Tobin)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2413 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,688cd557086dcd7b497775765899559575de33a2,"Fixed #1635 -- Admin-site related-object popup no longer fails for edit_inline objects in IE/Win. Thanks, Christopher Lenz

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3066 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,ec4f219ecb7a5e43d0353633fac4dac42d0ee492,Fixed #22463 -- Added code style guide and JavaScript linting (EditorConfig and ESLint),False
6fa150b2f8b601668083042324c4add534143cb1,6eaf154a2e81d21d02f3597dd0e3dad01db8d07c,"Fixed #9341: add another on `ManyToManyField`s with `raw_id_admins` now works correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,fbb4f0797cc44fe2dedda38d1c681fe09473859e,"Fixed JavaScript ""strict"" violations.",False
6fa150b2f8b601668083042324c4add534143cb1,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
6fa150b2f8b601668083042324c4add534143cb1,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
6fa150b2f8b601668083042324c4add534143cb1,d7848c11e008ddeb036a95d389caa3b2c97b795e,"Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.",False
6fa150b2f8b601668083042324c4add534143cb1,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,f18b08748abaecb171fdcbcdfdcd7e4d95d931d1,Fixed #25903 -- Fixed the admin's list_editable add/change buttons.,False
6fa150b2f8b601668083042324c4add534143cb1,f18b08748abaecb171fdcbcdfdcd7e4d95d931d1,Fixed #25903 -- Fixed the admin's list_editable add/change buttons.,False
6fa150b2f8b601668083042324c4add534143cb1,822a03b3e41c7c26b7b623c782fbcf9e6eea863f,"Refs #25165 -- Fixed failure of admin's ""Add another"" popup to close.

Thanks Thomas Grainger for the fix.",False
6fa150b2f8b601668083042324c4add534143cb1,dd0a1266f1cd0f1a4f11d327a406e49f0dcdba42,"[1.10.x] Added stub release notes for 1.9.8.

Backport of 01e567864ef9d9892e7181b62f7c51a1b9f76e37 from master",False
6fa150b2f8b601668083042324c4add534143cb1,1a2ee697e0631475d95197a795aa2af762537b10,"[1.10.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
6fa150b2f8b601668083042324c4add534143cb1,fbb4f0797cc44fe2dedda38d1c681fe09473859e,"Fixed JavaScript ""strict"" violations.",False
6fa150b2f8b601668083042324c4add534143cb1,d7848c11e008ddeb036a95d389caa3b2c97b795e,"Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.",False
6fa150b2f8b601668083042324c4add534143cb1,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6fa150b2f8b601668083042324c4add534143cb1,822a03b3e41c7c26b7b623c782fbcf9e6eea863f,"Refs #25165 -- Fixed failure of admin's ""Add another"" popup to close.

Thanks Thomas Grainger for the fix.",False
6fa150b2f8b601668083042324c4add534143cb1,dd0a1266f1cd0f1a4f11d327a406e49f0dcdba42,"[1.10.x] Added stub release notes for 1.9.8.

Backport of 01e567864ef9d9892e7181b62f7c51a1b9f76e37 from master",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,2b099caa5923afa8cfb5f1e8c0d56b6e0e81915b,"[3.1.x] Fixed CVE-2020-24584 -- Fixed permission escalation in intermediate-level directories of the file system cache on Python 3.7+.

Backport of f56b57976133129b0b351a38bba4ac882badabf0 from master.",False
6e657e2c404a96e744748209e896d8a69c15fdf2,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6e657e2c404a96e744748209e896d8a69c15fdf2,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,9faa1cd9b59a2b035d6af79079c2f5eb7d43772c,"Fixed #10747: fixed the auth tests to ignore broken user-supplied login/logout templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,19b9211a3b5424e7908a288c5008bf972cc472f4,"Fixed #9881: Added the  to the login view context, not just the site's name. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,9faa1cd9b59a2b035d6af79079c2f5eb7d43772c,"Fixed #10747: fixed the auth tests to ignore broken user-supplied login/logout templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7feb54bbae3f637ab3c4dd4831d4385964f574df,ec67af0bd609c412b76eaa4cc89968a2a8e5ad6a,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,751888ece3c970e208d9d77f21a35464c9122835,"Fixed #11223 -- Fixed logout view to use the 'next' GET parameter correctly as described in the docs, while only allowing redirection to the same host.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15706 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7feb54bbae3f637ab3c4dd4831d4385964f574df,e74edb4d53b089ec57ec4830eeba98607283a092,"Fixes #11025 -- ability to specify LOGIN_URL as full qualified absolute URL.

auth.views.login now allows for login redirections for different schemes
with the same host (or no host even, e.g. 'https:///login/')

auth.decorators.login_required can now use lazy urls (refs #5925)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14733 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4352a50871e239ebcdf64eee6f0b88e714015c1b,367bfaa5226eaae3278989e63f16063d5cc46cd8,Don't swallow AttributeError in core.urlresolvers.get_callable.,False
4352a50871e239ebcdf64eee6f0b88e714015c1b,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4352a50871e239ebcdf64eee6f0b88e714015c1b,5f5f1d913bbe25dd9a33a2759144160e1473c12a,"Fixed #4566 -- Added caching speed-ups to reverse URL matching. Based on a
patch from smoo.master@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4352a50871e239ebcdf64eee6f0b88e714015c1b,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4352a50871e239ebcdf64eee6f0b88e714015c1b,367bfaa5226eaae3278989e63f16063d5cc46cd8,Don't swallow AttributeError in core.urlresolvers.get_callable.,False
4352a50871e239ebcdf64eee6f0b88e714015c1b,a5802b35ddc599f8425b1759148ca2ebc5f32837,"Fixed #4453 -- Allow dots in URL pattern names (although the string in that case is first tried as an import path and only then falls back to being treated as a pattern).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
316bc3fc9437c5960c24baceb93c73f1939711e4,4608573788c04fc047da42b4b7b48fdee8136ad3,"Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.",False
316bc3fc9437c5960c24baceb93c73f1939711e4,d49b36e485d201dd230a01f6cb8ea6e8e4fddb49,Added stub release notes for 1.8.7.,False
316bc3fc9437c5960c24baceb93c73f1939711e4,4608573788c04fc047da42b4b7b48fdee8136ad3,"Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.",False
316bc3fc9437c5960c24baceb93c73f1939711e4,d49b36e485d201dd230a01f6cb8ea6e8e4fddb49,Added stub release notes for 1.8.7.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,83c88af9f85e8b9f833e76c37932fd415169cd60,"[4.1.x] Added stub release notes for 4.1.7.

Backport of f3c89744cc801cc7d134bca9958c4a74aa76380f from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,83c88af9f85e8b9f833e76c37932fd415169cd60,"[4.1.x] Added stub release notes for 4.1.7.

Backport of f3c89744cc801cc7d134bca9958c4a74aa76380f from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,8ec7ded3706fe66bf307ed339eb852d73f6d10d0,Refs #30227 -- Added helpful message for non-ASCII Content-Type in mulitpart request.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,3fadf141e66c8d0baaa66574fa3b63c4d3655482,Fixed #33062 -- Made MultiPartParser remove non-printable chars from file names.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2ed2acf872b87d1149da98ceeb96997f23258e83,Fixed #30227 -- Fixed crash on request without boundary in Content-Type.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,086510fde00d8246be3c7cdbd268742ece8cc401,"Removed HTTP prefixed CONTENT_TYPE/LENGTH headers in MultiPartParser.

The docs say that these headers always appear without the HTTP_ prefix.
This may have been an oversight when they were added in
d725cc9734272f867d41f7236235c28b3931a1b2, the only commit that uses
these names.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b0953dc91385fb2823294a76d3c99e01c7b7e4ee,"Fixed #13721 -- Added UploadedFile.content_type_extra.

Thanks Waldemar Kornewald and mvschaik for work on the patch.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,6e55e1d88a5c4453e25f0caf7ffb68973de5c0ba,Refs #23919 -- Replaced six.reraise by raise,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b42e5ca058178d67027bf66d37d00ade635b4c26,"Fixed #22971 -- Properly parsed RFC 2388 encoded headers

Thanks homm for the report, Cea Stapleton for patch improvements
and Ian Cordasco, Christian Schmitt and Tim Graham for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,dc88516e5bc987dfc877bc8ae5d7f8d1efb19fdd,Made style improvements to multipartparser.py,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,8b3f1c35dd848678225e8634d6880efeeab5e796,Removed unnecessary assignments in various code.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0894ddb2bbb706ca8b9918df42dfd8a3fa4dbc69,"Fixed #7848 -- Removed a bunch of code that wasn't contributing to society. Thanks, julien

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8047 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,8ec7ded3706fe66bf307ed339eb852d73f6d10d0,Refs #30227 -- Added helpful message for non-ASCII Content-Type in mulitpart request.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,3fadf141e66c8d0baaa66574fa3b63c4d3655482,Fixed #33062 -- Made MultiPartParser remove non-printable chars from file names.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2ed2acf872b87d1149da98ceeb96997f23258e83,Fixed #30227 -- Fixed crash on request without boundary in Content-Type.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,086510fde00d8246be3c7cdbd268742ece8cc401,"Removed HTTP prefixed CONTENT_TYPE/LENGTH headers in MultiPartParser.

The docs say that these headers always appear without the HTTP_ prefix.
This may have been an oversight when they were added in
d725cc9734272f867d41f7236235c28b3931a1b2, the only commit that uses
these names.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b0953dc91385fb2823294a76d3c99e01c7b7e4ee,"Fixed #13721 -- Added UploadedFile.content_type_extra.

Thanks Waldemar Kornewald and mvschaik for work on the patch.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,6e55e1d88a5c4453e25f0caf7ffb68973de5c0ba,Refs #23919 -- Replaced six.reraise by raise,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b42e5ca058178d67027bf66d37d00ade635b4c26,"Fixed #22971 -- Properly parsed RFC 2388 encoded headers

Thanks homm for the report, Cea Stapleton for patch improvements
and Ian Cordasco, Christian Schmitt and Tim Graham for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,dc88516e5bc987dfc877bc8ae5d7f8d1efb19fdd,Made style improvements to multipartparser.py,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,8b3f1c35dd848678225e8634d6880efeeab5e796,Removed unnecessary assignments in various code.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,0894ddb2bbb706ca8b9918df42dfd8a3fa4dbc69,"Fixed #7848 -- Removed a bunch of code that wasn't contributing to society. Thanks, julien

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8047 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
628b33a854a9c68ec8a0c51f382f304a0044ec92,ae53649b38e103e2f3297da2292f136694feddd8,"[4.1.x] Added stub release notes for 4.0.10 and 3.2.18.

Set date for 4.1.7 release.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
628b33a854a9c68ec8a0c51f382f304a0044ec92,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,79f368764295df109a37192f6182fb6f361d85b5,"[4.2.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,b07d4f2dea2e5884d3d13c981fd3f22dc8f2e915,"[4.2.x] Added stub release notes and release date for 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,79f368764295df109a37192f6182fb6f361d85b5,"[4.2.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
d147a8ebbdf28c17cafbbe2884f0bc57e2bf82e2,b07d4f2dea2e5884d3d13c981fd3f22dc8f2e915,"[4.2.x] Added stub release notes and release date for 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,3cbe686af6b6a3f23a607b2eb7497c55d88e8345,"Fixed #18675 -- Fixed was_modified_since with floating-point mtime

Thanks Simon Charette for the patch.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,57c6617c92959856e8cacd809f0e29f57df4f318,Minor optimization in the static serve view.,False
818e59a3f0fbadf6c447754d202d88df025f8f2a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,57c6617c92959856e8cacd809f0e29f57df4f318,Minor optimization in the static serve view.,False
818e59a3f0fbadf6c447754d202d88df025f8f2a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,3cbe686af6b6a3f23a607b2eb7497c55d88e8345,"Fixed #18675 -- Fixed was_modified_since with floating-point mtime

Thanks Simon Charette for the patch.",False
818e59a3f0fbadf6c447754d202d88df025f8f2a,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
7791e5c050cebf86d868c5dab7092185b125fdc9,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7791e5c050cebf86d868c5dab7092185b125fdc9,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c27a7eb9f40b64990398978152e62b6ff839c2e6,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,b34b1a89b22b972f299f22264c2781fdeb619aef,"Removed some 'behaviour's from the docs

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6874 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e5342282cc93f6178ed23eff19f5eda76dcd07c8,"Edited docs/templates.txt changes from [7276]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,92241e21b80efd0884730fb908c79eb45a847eac,"Reformatted docs/templates.txt to put headings in filter and tag references, so each tag/filter gets a permalink

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1110 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1aa1c4672cf7213f1073a5ab5f7c1ac8bc78d19f,"Added some documentation for truncatewords_html (added in [4468]).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2ea93f9327e37c686cc4333d1f483a7c97894a3c,"Fixed #14000 - remove versionadded/changed tags for Django 1.0 and 1.1

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15055 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e5cd46d6d1ecf9a388d5b2b9e33f815803fcd1c4,"Fixed #2026 -- Added support for 'and' in template 'if' tags, added dozens of unit tests and updated docs. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3108 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,db6688a454497758e17773db96cbde78a9f1e1eb,"Added a note about not using ifequal and ifnotequal to compare against True,
False, None, etc.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3880 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3ae9117c467f9fabed8736949dee209d40293b8d,"Fixes #7817 and #9456.

- The include tag now has a 'with' option to include to provide extra context
  vairables to the included template.

- The include tag now has an 'only' option to exclude the current context
  when rendering the included template.

- The with tag now accepts multiple variable assignments.

- The with, include and blocktrans tags now use a new keyword argument format
  for variable assignments (e.g. `{% with foo=1 bar=2 %}`).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c27a7eb9f40b64990398978152e62b6ff839c2e6,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2c2f5aee4d44836779fcd74c7782368914f9cfd1,"Implemented 'smart if' template tag, allowing filters and various operators to be used in the 'if' tag

Thanks to Chris Beaven for the initial patch, Fredrik Lundh for the basis
of the parser methodology and Russell Keith-Magee for code reviews.

There are some BACKWARDS INCOMPATIBILITIES in rare cases - in particular, if
you were using the keywords 'and', 'or' or 'not' as variable names within
the 'if' expression, which was previously allowed in some cases.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11806 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,bedf10a98dfe46dda39e8a20530f7476e7df90ff,"Fixed #598 -- Added {% include %} template tag. Added docs and unit tests. Thanks, rjwittams

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,0d9f21bb75d6df732d1022ac8928cc181419d202,"Improved docs/templates.txt section on the 'regroup' tag

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5710 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,9dc9770736ddf236be5ae08447bb323433fffd44,"Documented the presence of {% csrf_token %} in Django 1.1.2 in trunk docs.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11675 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1a1a58c9f89f7b34fec05d426472b134d3e44096,"Fixed #3184 -- Changed the `unordered_list` template filter to use a more simple format, while maintaining backwards compatibility with the old format.  `unordered_list` now works with a simple list of items.  Thanks for the patch, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6019 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,ccc49029b8d84cf3eaaa3593df6370329f7b14e1,"Fixed #14181 -- Added a template tag and filters to allow localization to be disabled in a template. Thanks to Benjamin Wohlwend for the work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14395 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,74f386dba274e319eb9e76cfb6f5d38e602104d9,"Fixed #8979 -- Made a bunch of typo/formatting fixes to the docs. Thanks, ramiro

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8987 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,dbaf1219d56aa085a6585066b83f2606844c6883,"Fixed #2580 -- Added missing </html> tag in docs/templates.txt examples. Thanks, jonathan-django@jmail.za.net

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,5aca35329cb44f05b3594c311ba4d1bae4f48e12,"Reverted 'now' template tag documentation changes so it describes the real code implementation regarding (lack of) interaction with L10N machinery. Refs #15263. Thanks danielr for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15678 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,e752d4984aa77196335321359b4492a11ea70f8e,"Fixed #12496 - Added code examples to built-in filter documentation. Thanks, Arthur Koziel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12220 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,49f57a5d28c175b24c215e6329f5fc12a5cccc34,"Fixed #15992 -- Added more references to settings. Thanks, aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16290 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,7cce717f348d3c7487b1dbf82b9f1f3a802ab82e,"Fixed typo in docs/templates.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,728effcfbdc29d7962b56d794f8911f57a9a63df,"Fixed #14141: docs now use the :doc: construct for links between documents.

Thanks, Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13608 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,16269c4d0a5d2e61c7555fec438440abee9be9f5,"Fixed #3523 -- Added list unpacking to for loops in templates. Thanks to SmileyChris and Honza Kral for their work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5443 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,15b711b5ee9ce1ddd01cf88b2bbbec4a6cbec648,Deprecated TEMPLATE_DEBUG setting.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,63143d5d9d4f0f4dc6a4948fca24d904e72f3d35,"Fixed the test added for #9005 to use the e.args[0] instead of e.message. Exceptions didn't have 'message' before Python 2.5, and it was deprecated as of Python 2.6. args[0] works without error or DeprecationWarning from Python 2.3 through 2.6.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,a3e783fe11dd25bbf84bfb6201186566ed473506,"Deprecated passing a Context to a generic Template.render.

A deprecation path is required because the return type of
django.template.loader.get_template changed during the
multiple template engines refactor.

test_csrf_token_in_404 was incorrect: it tested the case when the
hardcoded template was rendered, and that template doesn't depend on the
CSRF token. This commit makes it test the case when a custom template is
rendered.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,687d2e967dbc7c2ba29a90c74becc539d3ac2b9d,"Fixed #19827 -- Kept stacktrace in defaulttags exception reraising

Thanks Kronuz for the report and the initial patch.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,624caace17dbb9e22f5a4c6c08937d68cbdbb066,"Fixed #9005: don't wig out when reversing a URL if SETTINGS_MODULE isn't set. While I was there, I fixed #10599 by re-raising the original error message, which is almost always a better idea. Thanks, Eric

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,d3a982556d655adcf4ba331d2def685d8249170f,Deprecated TEMPLATE_STRING_IF_INVALID.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,9eeb788cfb70d07d87b3d07434d6a149ab2d7471,"Refactored getting the list of template loaders.

This provides the opportunity to move utility functions specific to the
Django Template Language outside of django.template.loader.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,15b711b5ee9ce1ddd01cf88b2bbbec4a6cbec648,Deprecated TEMPLATE_DEBUG setting.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,63143d5d9d4f0f4dc6a4948fca24d904e72f3d35,"Fixed the test added for #9005 to use the e.args[0] instead of e.message. Exceptions didn't have 'message' before Python 2.5, and it was deprecated as of Python 2.6. args[0] works without error or DeprecationWarning from Python 2.3 through 2.6.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,a3e783fe11dd25bbf84bfb6201186566ed473506,"Deprecated passing a Context to a generic Template.render.

A deprecation path is required because the return type of
django.template.loader.get_template changed during the
multiple template engines refactor.

test_csrf_token_in_404 was incorrect: it tested the case when the
hardcoded template was rendered, and that template doesn't depend on the
CSRF token. This commit makes it test the case when a custom template is
rendered.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,687d2e967dbc7c2ba29a90c74becc539d3ac2b9d,"Fixed #19827 -- Kept stacktrace in defaulttags exception reraising

Thanks Kronuz for the report and the initial patch.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,624caace17dbb9e22f5a4c6c08937d68cbdbb066,"Fixed #9005: don't wig out when reversing a URL if SETTINGS_MODULE isn't set. While I was there, I fixed #10599 by re-raising the original error message, which is almost always a better idea. Thanks, Eric

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,d3a982556d655adcf4ba331d2def685d8249170f,Deprecated TEMPLATE_STRING_IF_INVALID.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,55f12f8709f0604df7e1817a4c114ead1fb9a311,"Cleaned up the template debug implementation.

This patch does three major things:

* Merges the django.template.debug implementation into django.template.base.

* Simplifies the debug implementation.

  The old implementation copied debug information to every token and node.
  The django_template_source attribute was set in multiple places, some
  quite hacky, like django.template.defaulttags.ForNode.

  Debug information is now annotated in two high-level places:

  * Template.compile_nodelist for errors during parsing
  * Node.render_annotated for errors during rendering

  These were chosen because they have access to the template and context
  as well as to all exceptions that happen during either the parse or
  render phase.

* Moves the contextual line traceback information creation from
  django.views.debug into django.template.base.Template. The debug views now
  only deal with the presentation of the debug information.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,9eeb788cfb70d07d87b3d07434d6a149ab2d7471,"Refactored getting the list of template loaders.

This provides the opportunity to move utility functions specific to the
Django Template Language outside of django.template.loader.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4397c587a43ff9bfddd295d48d850676778c6e77,"Fixed #16770 -- Eliminated TemplateSyntaxError wrapping of exceptions. Thanks to Justin Myles-Holmes for report and draft patch.

Exceptions raised in templates were previously wrapped in TemplateSyntaxError
(in TEMPLATE_DEBUG mode only) in order to provide template source details on
the debug 500 page. The same debug information is now provided by annotating
exceptions rather than wrapping them. This makes catching exceptions raised
from templates more sane, as it's consistent in or out of DEBUG, and you can
catch the specific exception(s) you care about rather than having to also catch
TemplateSyntaxError and unwrap it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16833 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,1827aa902481cd80d2fb154e7b073f139936d5fc,Cleaned up template loader tests.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,16f26defa7510707742a15aa89cae56f11d14c3f,"Converted recently refactored templates tests to SimpleTestCase.

These test methods don't need DB setup/teardown.

Refs #23768 and b872134b.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,47ee7b48adbcc0dafc3404034286c5fcbcd1cea6,"Fixed #24338 -- Accepted Template wrapper in {% extends %}.

Explicitly checking for django.template.Template subclasses is
preferrable to duck-typing because both the django.template.Template and
django.template.backends.django.Template have a render() method.

Thanks spectras for the report.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,b67f2ac8e6f8cdef237590ffb2c85fc30454ba75,"Fixed #20502 (again) -- More i18n cache flush in tests

Thanks Timo Graham for noticing the failures.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,19cbdf8c8f6f5da5687cfec659841176b6af7d67,"Fixed #17348 -- Implemented {% elif %}. Refs #3100.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,6cafd4b21f89523410c7d4c34740884c6a3552d8,"Fixed #7876 - Improved template error message to include expected end tag. Thanks to Matthias Kestenholz for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,369b6fab25b55ceb363ba2a8cb7e0f1a88ef8f8d,Fixed #18169 -- NoReverseMatch not silenced if from block.super,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4cafd3aacb0e7bc583f838ef2b0293786b329471,"[2.2.x] Added stub release notes 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,098fa12dd390e733c7568d824eea2c346550c75a,"Refs #24324 -- Fixed crash in {% debug %} tag on Python 2.

If Django is installed in a path that contains non-ASCII characters,
the tag failed with UnicodeDecodeError.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,2ced2f785d5aca0354abf5841d5449b7a49509dc,"Replaced smart_* by force_* calls whenever possible

The smart_* version should only be used when a lazy string should keep
its lazy status.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4fdc7015c0d0849e391aa22da46b62a8fa4de27c,"Used dict comprehension in URLNode

4468c08d7 replaced a lot of the old `dict()` comprehensions
with the new style, but missed this one.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,c2b9f6496e59c9268fb265ea80df8c8d7ec88034,"Added some sphinx cross-reference links to the built-in template tags and filters in multiple areas of the documentation. Also fixed a few minor inconsistencies and did a little PEP8 cleanup while I was at it.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16922 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,08451f17d08486055542daecdcc3be1779f0815b,Fixed #23060 -- Prevented UnicodeDecodeError in debug templatetag,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,8bf1449edb4139451643e3823b194b4c02ca7633,Refs #24652 -- Converted a template test to avoid executing queries.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,fb267a1d85c22924231be8cec6c58c42ae57913f,"Updated template tests to create their own engine.

This continues work to treat Django templates as a library.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,32c108a221c54a4f680afe32175d70b5d2e92593,Combined TemplateTests and TemplateRegressionTests.,False
c27a7eb9f40b64990398978152e62b6ff839c2e6,4cafd3aacb0e7bc583f838ef2b0293786b329471,"[2.2.x] Added stub release notes 2.2.27.

Backport of eeca9342381c8583be16f18942774e785ab7e527 from main.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
c27a7eb9f40b64990398978152e62b6ff839c2e6,8a5eadd140a5f06d24e1c5bc0c444ce11be0769a,"Corrected HTML-escaping behaviour of url template tag.

Due to the URL encoding applied by the tag for all parameters that might be
partly controllable by an end-user, there are no XSS/security problems
caused by this bug, only invalid HTML.",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
203d4ab9ebcd72fc4d6eb7398e66ed9e474e118e,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,64f5ab67a57f7373cee2cc675ae03d74e878b645,"Changed some URL conf regexes to rawstrings for consistency

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8172 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,8cb128e57c08de54e8947a00f0d17fd02bff90df,"Refs #7521 -- Re-reverted [7716] (originally reverted in [7726]), now modified to use the new TestCase urlpattern framework.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,64f5ab67a57f7373cee2cc675ae03d74e878b645,"Changed some URL conf regexes to rawstrings for consistency

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8172 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7f8dd9cbac074389af8d8fd235bf2cb657227b9a,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1170f285ddd6a94a65f911a27788ba49ca08c0b0,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1170f285ddd6a94a65f911a27788ba49ca08c0b0,00fda7f45db2425c1dcb5d927093ede45734d841,"Fixed #13283 -- Corrected CACHE_MIDDLEWARE_ANONYMOUS_ONLY's bad habit of setting Vary: Cookie on all responses and destroying cache efficiency. Thanks to natrius for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1170f285ddd6a94a65f911a27788ba49ca08c0b0,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1170f285ddd6a94a65f911a27788ba49ca08c0b0,969217d45566e6853a2358088002e80b4afb9708,"Fixed #15260 -- Ensured that CACHE_MIDDLEWARE_ANONYMOUS_ONLY is effective with the cache_page decorator, not only the middleware. Thanks to brodie for report and draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15559 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
454f2fb93437f98917283336201b4048293f7582,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
454f2fb93437f98917283336201b4048293f7582,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
454f2fb93437f98917283336201b4048293f7582,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
454f2fb93437f98917283336201b4048293f7582,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
454f2fb93437f98917283336201b4048293f7582,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
454f2fb93437f98917283336201b4048293f7582,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
454f2fb93437f98917283336201b4048293f7582,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
454f2fb93437f98917283336201b4048293f7582,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
454f2fb93437f98917283336201b4048293f7582,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
454f2fb93437f98917283336201b4048293f7582,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
454f2fb93437f98917283336201b4048293f7582,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
454f2fb93437f98917283336201b4048293f7582,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
454f2fb93437f98917283336201b4048293f7582,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
454f2fb93437f98917283336201b4048293f7582,4f16376274a4e52074722c615fccef5fac5f009a,"Added HTML5 email input type

Refs #16630.",False
454f2fb93437f98917283336201b4048293f7582,3f9ec12d9c9eff9a3b1a205d87c7e66587cf9967,Fixed #23712 -- Fixed KeyError with BaseForm._html_output(),False
454f2fb93437f98917283336201b4048293f7582,584bd14dcfdee9585fec7794d53ce120ea73d0bc,"Fixed #18134 -- BoundField.label_tag now includes the form's label_suffix

There was an inconsistency between how the label_tag for forms were
generated depending on which method was used: as_p, as_ul and as_table
contained code to append the label_suffix where as label_tag called on a
form field directly did NOT append the label_suffix. The code for
appending the label_suffix has been moved in to the label_tag code of
the field and the HTML generation code for as_p, as_ul and as_table now
calls this code as well.

This is a backwards incompatible change because users who have added the
label_suffix manually in their templates may now get double label_suffix
characters in their forms.",False
454f2fb93437f98917283336201b4048293f7582,7c7bc6391a3e83566f9ace59955e63503bc76cee,Fixed #28874 -- Prevented double escaping of errors on hidden form fields.,False
454f2fb93437f98917283336201b4048293f7582,50e299dbfbbfd796e63e7e13b4566cf69d2c4acb,Fixed #26928 -- Changed forms' checked attribute to HTML5 boolean style.,False
454f2fb93437f98917283336201b4048293f7582,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,3a4c9e1b43ff67b6cf4c59da757666d6ac5ce4a0,"Cleaned up some forms tests.

Thanks Berker Peksag and Tim Graham for the reviews. Refs #24219.",False
454f2fb93437f98917283336201b4048293f7582,fab46ce6f5a0a58c4e5e39c9e5e412702beb4a64,Fixed #27037 -- Prevented required attribute on ClearableFileInput when initial data exists.,False
454f2fb93437f98917283336201b4048293f7582,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
454f2fb93437f98917283336201b4048293f7582,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
454f2fb93437f98917283336201b4048293f7582,dab653cadcd22a442fa4082f24304a0567de6cd2,Organized forms_tests test_regressions.py.,False
454f2fb93437f98917283336201b4048293f7582,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,ac3aaaa740dcf9c6efd2f88ee9219c1924c7695e,Fixed #26927 -- Made subwidget iteration pass disabled and required attributes.,False
454f2fb93437f98917283336201b4048293f7582,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
454f2fb93437f98917283336201b4048293f7582,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
454f2fb93437f98917283336201b4048293f7582,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
454f2fb93437f98917283336201b4048293f7582,ec6121693f112ae33b653b4364e812722d2eb567,Fixed #22383 -- Added support for HTML5 required attribute on required form fields.,False
454f2fb93437f98917283336201b4048293f7582,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
454f2fb93437f98917283336201b4048293f7582,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
454f2fb93437f98917283336201b4048293f7582,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
454f2fb93437f98917283336201b4048293f7582,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
454f2fb93437f98917283336201b4048293f7582,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
454f2fb93437f98917283336201b4048293f7582,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
454f2fb93437f98917283336201b4048293f7582,d1bab24e0144d14513a1411503c95ececb425188,"Refs #23919, #27778 -- Removed obsolete mentions of unicode.",False
454f2fb93437f98917283336201b4048293f7582,d1e5c55258d624058a93c8cacdb1f25ae7857554,"Fixed many more ReST indentation errors, somehow accidentally missed from [16955]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16983 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,135a9e4fd93d12ced5bdac13a5354a7e7d56f761,Added some more links in form field docs,False
454f2fb93437f98917283336201b4048293f7582,926bf195e007cb4f97e6ddc4bd963cb5a8d48288,"Fixed #12601: Documented the slug field in the forms module.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12673 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
454f2fb93437f98917283336201b4048293f7582,9de848cec9eea167f0d29097897b66abc03ea918,"Fixed #8544 -- Some more documentation markup fixes from Thejawsi Puthraya.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8612 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,11cac1bd8ef7546ca32d9969d4348bf412dc6664,"Fixed #4960 -- Added ""strip"" option to CharField",False
454f2fb93437f98917283336201b4048293f7582,10a289745f8ecb558f5c22d734315c96d8d4b96e,Fixed typo and indentation in docs/ref/forms/fields.txt.,False
454f2fb93437f98917283336201b4048293f7582,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
454f2fb93437f98917283336201b4048293f7582,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
454f2fb93437f98917283336201b4048293f7582,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
454f2fb93437f98917283336201b4048293f7582,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
454f2fb93437f98917283336201b4048293f7582,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
454f2fb93437f98917283336201b4048293f7582,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
454f2fb93437f98917283336201b4048293f7582,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
454f2fb93437f98917283336201b4048293f7582,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
454f2fb93437f98917283336201b4048293f7582,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
454f2fb93437f98917283336201b4048293f7582,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
454f2fb93437f98917283336201b4048293f7582,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
454f2fb93437f98917283336201b4048293f7582,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
454f2fb93437f98917283336201b4048293f7582,6d66ba59488bbd0d4f0c2f32b2921f1512301143,"Fixed #21242 -- Allowed more IANA schemes in URLValidator

Thanks Sascha Peilicke for the report and initial patch, and
Tim Graham for the review.",False
454f2fb93437f98917283336201b4048293f7582,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
454f2fb93437f98917283336201b4048293f7582,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
454f2fb93437f98917283336201b4048293f7582,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
454f2fb93437f98917283336201b4048293f7582,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
454f2fb93437f98917283336201b4048293f7582,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
454f2fb93437f98917283336201b4048293f7582,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
454f2fb93437f98917283336201b4048293f7582,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
454f2fb93437f98917283336201b4048293f7582,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,b56ef75088e17fa3555766e92a6747411ccd738c,"Fixes #13511 -- make regex parameter to RegexValidator to be optional. Also tidies up related docs (parameters aren't attributes). Thanks for the patch work, davidfischer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
454f2fb93437f98917283336201b4048293f7582,325db2a8c3453a56db5e0df0eed37476eb67802d,Fixed #27945 -- Clarified that RegexValidator searches with the regex.,False
454f2fb93437f98917283336201b4048293f7582,c79faae761659d51d58782dbd2b8058fb4668cfa,Removed versionadded/changed notes for 1.7.,False
454f2fb93437f98917283336201b4048293f7582,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
454f2fb93437f98917283336201b4048293f7582,c48a29a02a457cfdb1cff11009401459ba24e870,"Fixed #23639 -- Fixed doc error in RegexValidator.regex

Thanks to @claudep for the report and the original patch.",False
454f2fb93437f98917283336201b4048293f7582,9ed6e08ff99c18710c0e4875f827235f04c89d76,"Removed deprecated URLField.verify_exists.

The deprecation schedule was slightly accelerated because of possible security ramifications.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17847 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
454f2fb93437f98917283336201b4048293f7582,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
454f2fb93437f98917283336201b4048293f7582,07cc014cb30bc3c343a25c81aad6820bbc72c0d9,"[3.2.x] Added stub release notes for 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
454f2fb93437f98917283336201b4048293f7582,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
454f2fb93437f98917283336201b4048293f7582,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
454f2fb93437f98917283336201b4048293f7582,91669cc566918fde4fe98f867cf4c406f64504e6,Fixed #28009 -- Doc'd empty_value for CharField subclasses.,False
454f2fb93437f98917283336201b4048293f7582,ccb1cfb64e919e163c51995ed99bff3c92d7d006,Fixed #31548 -- Fixed URLValidator crash on non-strings.,False
454f2fb93437f98917283336201b4048293f7582,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
454f2fb93437f98917283336201b4048293f7582,8cf08a01b5039aacdb465f467f167684fa04b2d2,Improved RegexValidator docs.,False
454f2fb93437f98917283336201b4048293f7582,07cc014cb30bc3c343a25c81aad6820bbc72c0d9,"[3.2.x] Added stub release notes for 3.2.20.

Backport of 2360ba22742c3ee8729697bfe2d508110465af56 from main",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,3c8568a7dcb38aaa5aceec4f20c3ec3f0217a50d,"Fixed #10271, #10281 --  Fixed the handling multiple inline models that share a common base class and have the link to the inline parent on the base class. Includes modifications that allow the equivalent handling for GenericFields. Thanks to Idan Gazit, Antti Kaihola (akaihola), and Alex Gaynor for their work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10017 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,3c8568a7dcb38aaa5aceec4f20c3ec3f0217a50d,"Fixed #10271, #10281 --  Fixed the handling multiple inline models that share a common base class and have the link to the inline parent on the base class. Includes modifications that allow the equivalent handling for GenericFields. Thanks to Idan Gazit, Antti Kaihola (akaihola), and Alex Gaynor for their work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10017 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9face54bb7e8e906a5097b0f1215f59f91181f28,"Fixed #9284. Fixed #8813. BaseModelFormSet now calls ModelForm.save().
This is backwards-incompatible if you were doing things to 'initial' in BaseModelFormSet.__init__, or if you relied on the internal _total_form_count or _initial_form_count attributes of BaseFormSet. Those attributes are now public methods.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10190 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,ae95edf91df4eb47c25f262a77749538b37d357e,"Fixed #11138 -- Corrected the description of behavior related to the max_num parameter for model formsets.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,6ad26e6acc34134752d8728bf6dc6e592883bbfa,"Fixed #10845 -- Clarified the examples for using ModelForms with fields or exclude specified. Thanks to Andrew Durdin for the suggestion.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9bb1fa725154e6d1d0317fa0c48d7c240ad5e2d4,"Fixed #9223 -- Added support for declarative widgets to ModelForm. I declare thanks to isagalaev.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12194 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,ae95edf91df4eb47c25f262a77749538b37d357e,"Fixed #11138 -- Corrected the description of behavior related to the max_num parameter for model formsets.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,6ad26e6acc34134752d8728bf6dc6e592883bbfa,"Fixed #10845 -- Clarified the examples for using ModelForms with fields or exclude specified. Thanks to Andrew Durdin for the suggestion.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9bb1fa725154e6d1d0317fa0c48d7c240ad5e2d4,"Fixed #9223 -- Added support for declarative widgets to ModelForm. I declare thanks to isagalaev.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12194 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,c411377bd56e0f97c56a3f9c13f0b7a435906dd9,"Fixed #15349 - Bound FormSet produces bound empty_form

Thanks to hidde-jan for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15614 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,c411377bd56e0f97c56a3f9c13f0b7a435906dd9,"Fixed #15349 - Bound FormSet produces bound empty_form

Thanks to hidde-jan for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15614 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,65b380e74ab79ee011f7556e342dd4d656b018a5,"Fixed #11418 -- formset.cleaned_data no longer raises AttributeError when is_valid is True. Thanks mlavin!

This also introduces a slightly backwards-incompatible change in
FormSet's behavior, see the release docs for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14667 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,109f42a981cf28c2da8a82f59536a3a732572f02,"Fixed #14670 -- Made GenericTabularInline aware of changes made in r13708. Thanks, gregmuellegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,f2d5582c53f9b667f482842cbb3213db91d35d5e,"Fixed #12561. InlineAdmin now respects can_delete=False. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,109f42a981cf28c2da8a82f59536a3a732572f02,"Fixed #14670 -- Made GenericTabularInline aware of changes made in r13708. Thanks, gregmuellegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,f2d5582c53f9b667f482842cbb3213db91d35d5e,"Fixed #12561. InlineAdmin now respects can_delete=False. Thanks, nessita.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,30e842632e6ed95828241fb62f50eb1da9e4019c,"Fixed #9588 -- Allow passing kwargs to `GenericInlineModelAdmin.get_formset` just like the InlineModelAdmin. Thanks, prestontimmons.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16419 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,26fabdb218c464286ff14ca2dda70e62a1b0a654,"Fixed #9531 -- Fixed some awkward wording in the docs. Thanks, gsf.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,26fabdb218c464286ff14ca2dda70e62a1b0a654,"Fixed #9531 -- Fixed some awkward wording in the docs. Thanks, gsf.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9face54bb7e8e906a5097b0f1215f59f91181f28,"Fixed #9284. Fixed #8813. BaseModelFormSet now calls ModelForm.save().
This is backwards-incompatible if you were doing things to 'initial' in BaseModelFormSet.__init__, or if you relied on the internal _total_form_count or _initial_form_count attributes of BaseFormSet. Those attributes are now public methods.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10190 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,65b380e74ab79ee011f7556e342dd4d656b018a5,"Fixed #11418 -- formset.cleaned_data no longer raises AttributeError when is_valid is True. Thanks mlavin!

This also introduces a slightly backwards-incompatible change in
FormSet's behavior, see the release docs for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14667 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,30e842632e6ed95828241fb62f50eb1da9e4019c,"Fixed #9588 -- Allow passing kwargs to `GenericInlineModelAdmin.get_formset` just like the InlineModelAdmin. Thanks, prestontimmons.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16419 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0cc350a896f70ace18280410eb616a9197d862b0,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,4ea7a11659b8a0ab07b0d2e847975f7324664f10,"Added initial cut at serialization framework, along with some basic tests and a stab at some docs.  This is all a bit rough right now, so expect some bumps.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,c84ff156c190d7e425da1abef56f09127fd7e9db,"Fixed a serialization problem with objects that have a foreign key on an object whose primary key is a OneToOneField.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5371 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,375c3edf6edc0bb9f3e726f67c70fa524556713b,"Added various fixes to serializer implementations. Fixes mostly deal with handling nulls, non-integer primary key values (e.g., OneToOne fields or strings), and reconstruction of primary key references in related fields.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4718 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,c9032ab07f3694f3ae7da9b0017b764248ce28c9,"Added a JSON serializer, a few more tests, and a couple more lines of docs.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3237 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,4ea7a11659b8a0ab07b0d2e847975f7324664f10,"Added initial cut at serialization framework, along with some basic tests and a stab at some docs.  This is all a bit rough right now, so expect some bumps.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,c84ff156c190d7e425da1abef56f09127fd7e9db,"Fixed a serialization problem with objects that have a foreign key on an object whose primary key is a OneToOneField.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5371 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,375c3edf6edc0bb9f3e726f67c70fa524556713b,"Added various fixes to serializer implementations. Fixes mostly deal with handling nulls, non-integer primary key values (e.g., OneToOne fields or strings), and reconstruction of primary key references in related fields.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4718 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,c9032ab07f3694f3ae7da9b0017b764248ce28c9,"Added a JSON serializer, a few more tests, and a couple more lines of docs.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3237 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d19a27066b2247102e65412aa66917aff0091112,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae3535169af804352517b7fea94a42a1c9c4b762,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae3535169af804352517b7fea94a42a1c9c4b762,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae3535169af804352517b7fea94a42a1c9c4b762,a2f2a399566dd68ce7e312fff5a5ba857066797d,Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
ae3535169af804352517b7fea94a42a1c9c4b762,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae3535169af804352517b7fea94a42a1c9c4b762,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae3535169af804352517b7fea94a42a1c9c4b762,a2f2a399566dd68ce7e312fff5a5ba857066797d,Fixed #18856 -- Ensured that redirects can't be poisoned by malicious users.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,39fc3f46a8777a499f6358c6f06b4bcfffabb137,"[4.2.x] Added stub release notes and release date for 4.2.6, 4.1.12, and 3.2.22.

Backport of 5e4b75b78a7a84bc30170c2b8e7434525e745c1b from main",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f94f466cd3461527fb76a3e8951039a3c2388829,"Fixed #19496 -- Added truncatechars_html filter.

Thanks esevece for the suggestion and  Nick Sandford and Martin Warne
for the inital work on the patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,39fc3f46a8777a499f6358c6f06b4bcfffabb137,"[4.2.x] Added stub release notes and release date for 4.2.6, 4.1.12, and 3.2.22.

Backport of 5e4b75b78a7a84bc30170c2b8e7434525e745c1b from main",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f47d5aac622c334ebeba06b7460204aeb98661e2,Refs #27804 -- Used subTest() in tests.utils_tests.test_text.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,b2bd08bb7a912a1504f5fb5018f5317e6b5423cd,"Fixed #30892 -- Fixed slugify() and admin's URLify.js for ""İ"".

Thanks Luis Nell for the implementation idea and very detailed report.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,5d9c512e5b42e1c686300c214453bf0b820d7326,Added test for ValueErrors in unescape_string_literal().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,321e94fa41b121f65c02119c02098df327bbd569,"Refs #27392 -- Removed ""Tests that"", ""Ensures that"", etc. from test docstrings.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,9aaeec337e217109208672d8fe47eeb49ca492b5,"Fixed #26866 -- Added format_lazy function

Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,838e432e3e5519c5383d12018e6c78f8ec7833c1,Completed test coverage for utils.text.Truncator.chars().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e4b0a8f93c7cff2da06090726567944fcf7d04d7,"Tests for utils.text.wrap

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14752 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,389c3ffc04eaa6186ae0bad523995e8fcf7620df,Updated tests after French translation update,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,40b95a24ae159b6600457a23d6c2779a18037b7b,"Fixed #20568 -- truncatewords_html no longer splits words containing HTML entities.

Thanks yann0 at hotmail.com for the report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,847171b0d09c7da95cd404bab80f84c890fc5cfd,Fixed test failures when running in a narrow Python build.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e1d673c373a7d032060872b690a92fc95496612e,Fixed unescape_string_literal() crash on empty strings.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,dde05e192c15158cd2ea918ce2ee7a2b9b6ceba6,Added more tests for slugify().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,caa3562d5bec1196502352a715a539bdb0f73c2d,"Fixed #24242 -- Improved efficiency of utils.text.compress_sequence()

The function no longer flushes zfile after each write as doing so can
lead to the gzipped streamed content being larger than the original
content; each flush adds a 5/6 byte type 0 block. Removing this means
buf.read() may return nothing, so only yield if that has some data.
Testing shows without the flush() the buffer is being flushed every 17k
or so and compresses the same as if it had been done as a whole string.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,97b7dd59bb8d6163239061e2022153c3415d146d,"Fixed CVE-2018-7537 -- Fixed catastrophic backtracking in django.utils.text.Truncator.

Thanks James Davis for suggesting the fix.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f47d5aac622c334ebeba06b7460204aeb98661e2,Refs #27804 -- Used subTest() in tests.utils_tests.test_text.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,b2bd08bb7a912a1504f5fb5018f5317e6b5423cd,"Fixed #30892 -- Fixed slugify() and admin's URLify.js for ""İ"".

Thanks Luis Nell for the implementation idea and very detailed report.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,5d9c512e5b42e1c686300c214453bf0b820d7326,Added test for ValueErrors in unescape_string_literal().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,321e94fa41b121f65c02119c02098df327bbd569,"Refs #27392 -- Removed ""Tests that"", ""Ensures that"", etc. from test docstrings.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,9aaeec337e217109208672d8fe47eeb49ca492b5,"Fixed #26866 -- Added format_lazy function

Added format_lazy function to django.utils.text module.
Useful when dealing with relative complex lazy string concatenations
(e.g. in urls.py when translating urls in regular expressions).",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,838e432e3e5519c5383d12018e6c78f8ec7833c1,Completed test coverage for utils.text.Truncator.chars().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e4b0a8f93c7cff2da06090726567944fcf7d04d7,"Tests for utils.text.wrap

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14752 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,389c3ffc04eaa6186ae0bad523995e8fcf7620df,Updated tests after French translation update,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,40b95a24ae159b6600457a23d6c2779a18037b7b,"Fixed #20568 -- truncatewords_html no longer splits words containing HTML entities.

Thanks yann0 at hotmail.com for the report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,847171b0d09c7da95cd404bab80f84c890fc5cfd,Fixed test failures when running in a narrow Python build.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,e1d673c373a7d032060872b690a92fc95496612e,Fixed unescape_string_literal() crash on empty strings.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,dde05e192c15158cd2ea918ce2ee7a2b9b6ceba6,Added more tests for slugify().,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,caa3562d5bec1196502352a715a539bdb0f73c2d,"Fixed #24242 -- Improved efficiency of utils.text.compress_sequence()

The function no longer flushes zfile after each write as doing so can
lead to the gzipped streamed content being larger than the original
content; each flush adds a 5/6 byte type 0 block. Removing this means
buf.read() may return nothing, so only yield if that has some data.
Testing shows without the flush() the buffer is being flushed every 17k
or so and compresses the same as if it had been done as a whole string.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
be9c27c4d18c2e6a5be8af4e53c0797440794473,39fc3f46a8777a499f6358c6f06b4bcfffabb137,"[4.2.x] Added stub release notes and release date for 4.2.6, 4.1.12, and 3.2.22.

Backport of 5e4b75b78a7a84bc30170c2b8e7434525e745c1b from main",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,f94f466cd3461527fb76a3e8951039a3c2388829,"Fixed #19496 -- Added truncatechars_html filter.

Thanks esevece for the suggestion and  Nick Sandford and Martin Warne
for the inital work on the patch.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,39fc3f46a8777a499f6358c6f06b4bcfffabb137,"[4.2.x] Added stub release notes and release date for 4.2.6, 4.1.12, and 3.2.22.

Backport of 5e4b75b78a7a84bc30170c2b8e7434525e745c1b from main",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,7f65974f8219729c047fbbf8cd5cc9d80faefe77,"Fixed CVE-2019-14232 -- Adjusted regex to avoid backtracking issues when truncating HTML.

Thanks to Guido Vranken for initial report.",False
be9c27c4d18c2e6a5be8af4e53c0797440794473,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
412ed22502e11c50dbfee854627594f0e7e2c234,1cf552dcec0e8d1b4d5c27a900a9e28f34c12b40,"Changed django.VERSION to (0, 95, None) to signify final 0.95 release

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3481 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,1cf552dcec0e8d1b4d5c27a900a9e28f34c12b40,"Changed django.VERSION to (0, 95, None) to signify final 0.95 release

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3481 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,154b64dcf8f80f9f970aac034f3aa4a705500008,"0.95-bugfixes: Update VERSION for impending 0.95.1 release


git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
412ed22502e11c50dbfee854627594f0e7e2c234,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
412ed22502e11c50dbfee854627594f0e7e2c234,5f2b40d4c9b3df5b6e338293ae8144ffcbbf0dd2,"Fixed #1929 -- Updated version in setup.py from 0.91 to 0.95

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,5f2b40d4c9b3df5b6e338293ae8144ffcbbf0dd2,"Fixed #1929 -- Updated version in setup.py from 0.91 to 0.95

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,b0ea21299b3e694a761405a050123661793f677e,"Missed a 0.95 -> 0.95.1 change in there

git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4386 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,9852ef8ff4434c9bc524a7c5ae816ad97478dc09,"Added docs/release_notes_0.95.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3479 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,4aefe9ad456101c51b5b42a4e908a366e52e5bb0,"Formatted docs/release_notes_0.95.txt in our ReST format, with titles

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3488 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,9852ef8ff4434c9bc524a7c5ae816ad97478dc09,"Added docs/release_notes_0.95.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3479 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,9852ef8ff4434c9bc524a7c5ae816ad97478dc09,"Added docs/release_notes_0.95.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3479 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,4aefe9ad456101c51b5b42a4e908a366e52e5bb0,"Formatted docs/release_notes_0.95.txt in our ReST format, with titles

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3488 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,9852ef8ff4434c9bc524a7c5ae816ad97478dc09,"Added docs/release_notes_0.95.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3479 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,3080f4a36f066212e844f7dfa98a94a6621c8254,"0.95-bugfixes: Updated release notes to indicate new version and list changes since 0.95


git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,4aefe9ad456101c51b5b42a4e908a366e52e5bb0,"Formatted docs/release_notes_0.95.txt in our ReST format, with titles

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3488 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,154b64dcf8f80f9f970aac034f3aa4a705500008,"0.95-bugfixes: Update VERSION for impending 0.95.1 release


git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
412ed22502e11c50dbfee854627594f0e7e2c234,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
412ed22502e11c50dbfee854627594f0e7e2c234,b0ea21299b3e694a761405a050123661793f677e,"Missed a 0.95 -> 0.95.1 change in there

git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4386 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,3080f4a36f066212e844f7dfa98a94a6621c8254,"0.95-bugfixes: Updated release notes to indicate new version and list changes since 0.95


git-svn-id: http://code.djangoproject.com/svn/django/branches/0.95-bugfixes@4383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
412ed22502e11c50dbfee854627594f0e7e2c234,4aefe9ad456101c51b5b42a4e908a366e52e5bb0,"Formatted docs/release_notes_0.95.txt in our ReST format, with titles

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3488 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,f6e1789654e82bac08cead5a2d2a9132f6403f52,Fixed #28577 -- Added checks for ArrayField and JSONField to prevent mutable defaults.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,4f7467b6905482a5d826c2815dcf8c6dd332340d,Refs #28577 -- Added check for HStoreField to prevent mutable default.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,f6e1789654e82bac08cead5a2d2a9132f6403f52,Fixed #28577 -- Added checks for ArrayField and JSONField to prevent mutable defaults.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,4f7467b6905482a5d826c2815dcf8c6dd332340d,Refs #28577 -- Added check for HStoreField to prevent mutable default.,False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
f74b3ae3628c26e1b4f8db3d13a91d52a833a975,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
94c5da1d17a6b0d378866c66b605102c19f7988c,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
94c5da1d17a6b0d378866c66b605102c19f7988c,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
94c5da1d17a6b0d378866c66b605102c19f7988c,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
94c5da1d17a6b0d378866c66b605102c19f7988c,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
92d3430f12171f16f566c9050c40feefb830a4a3,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,c46ddbf1fc747a910702a348763d7949fba454f0,"Fixed #8274 - allow custom forms for auth 'login' and 'password_change' views

Thanks to julien for the suggestion and patch, and SmileyChris for work on the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11618 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,667d832e901ca6bb394054109e24a2ed6cadc563,"Fixed #14386, #8960, #10235, #10909, #10608, #13845, #14377 - standardize Site/RequestSite usage in various places.

Many thanks to gabrielhurley for putting most of this together.  Also to
bmihelac, arthurk, qingfeng, hvendelbo, petr.pulc@s-cape.cz, Hraban for
reports and some initial patches.

The patch also contains some whitespace/PEP8 fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13980 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,6dfea737f627cb8c06b8feac0905136c3e55bae6,"Made template names in django.contrib.auth.views passable as template_name argument to the view

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,2a0af00524fc16f3f223b8117268e9ffcf41e06c,"Fixed #2375 -- Changed password_reset auth view to make e-mail template name variable. Thanks, treborhudson@gmail.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3462 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,3e6f4674e2fc190c2116d77066d18f42bd3bcbae,"Fixed #10460: the logout view can now redirect like the rest of the auth views. Thanks, chronos and steingrd.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10332 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,079e5bf1ec7a37497d41d79daa074ac9107bb3ec,"Added a login link to the password reset completion screen.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8171 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,4084bc735437e7a2e2a09cff469788e036080203,"Permit custom from-email address in auth forms email.

Patch from cassidy and Rob Hudson. Fixed #11300.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13817 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,5dfe74f221f2e7c5dc7e5722bb322336c605c7b5,"Fixed #3185 -- Made values for login, logout and post-login redirect URLs
configurable. This is a combined patch from Vasily Sulatskov, Marc Fargas and
Collin Grady.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,ab26efc95286fa3e7e52f5f9ec232055bcd2cbb7,"Fixed #8493 -- Fixed a NoReverseMatch when redirecting to password_change/done/ in the admin. Added the ability to override redirects to other password change views for consistency. Thanks for the report mtrichardson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8473 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,6e748b5db4ea6db78ce389f474c2fb78ee3976ed,"Fixed #11457: tightened the security check for ""next"" redirects after logins.

The new behavior still disallows redirects to off-site URLs, but now allows
redirects of the form `/some/other/view?foo=http://...`.

Thanks to brutasse.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12635 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
92d3430f12171f16f566c9050c40feefb830a4a3,07705ca12982b6a87cfd9f62723153fb94f151b2,"Fixed #5298 -- Added extra_context to contrib auth views.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14768 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d356bb653f4d90ae9809e5a051791ded39010c38,Fixed #26460 -- Issued a single warning for invalid cache key,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,40c60efecc0fc73f0b2320b44d684586b52ee799,"Refs #23947 -- Isolated some cache tests.

Thanks Diego Guimarãesi and Florian Apolloner.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,9136ceb6fb8225625631671147ff70c1fcfbbcdc,Replaced router.routers usage with override_settings(DATABASE_ROUTERS); refs #23933.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d038c547b5ce585cbf9ef5bb7e5298f52e4a243b,Removed django.core.cache.get_cache() per deprecation timeline; refs #21012.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,51890ce8898f821d28f2f6fb6071c936e9bd88f0,Applied ignore_warnings to Django tests,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d362c1546f8ad62811e5dee3cf0b43170e6e1c4c,"Convert much of the regression tests to use absolute imports.  There's still work to be done though.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16976 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,e021b87c0009c11aa2e62b62fc40b4b0209a8e5d,"Fixed a few more imports of django.utils.unittest.

One import per line please! Refs #20680.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,7cb140e6d86e9c592983ddb50bfd82480ecec7eb,"Fixed #16003 -- Restored compatibility of the admin when using USE_ETAGS. Thanks for the initial patch, pterk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16729 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,34cc21983ce0124a94d01120431f35ac0653c60f,"Removed `vary_delim_re` in `django/utils/cache.py` in favor of existing `cc_delim_re` since the latter is more correct in parsing the header (allows whitespace before and after comma separators instead of just after).  As a bonus, tests added for `patch_vary_headers()`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6696 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,6fe22b30e007b7ac49eae48a53e7ba0a4ee79a4b,"Fixed #22085 -- Added a feature for setting non-expiring keys as the default.

This feature allows the default `TIMEOUT` Cache argument to be set to `None`,
so that cache instances can set a non-expiring key as the default,
instead of using the default value of 5 minutes.

Previously, this was possible only by passing `None` as an argument to
the set() method of objects of type `BaseCache` (and subtypes).",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,638dbc3e8320652ba3bd759e0ac1d28590402096,"Fixed #6464 -- Added incr() and decr() operations on cache backends. Atomic on Memcache; implemented as a 2 stage retrieve/update on other backends. Includes refactor of the cache tests to ensure all the backends are actually tested, and a fix to the DB cache backend that was discovered as a result. Thanks to Michael Malone for the original patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10031 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,ffc37e2343a93cf6d44247e20cd263b41f931716,"Fixed #21012 -- New API to access cache backends.

Thanks Curtis Malony and Florian Apolloner.

Squashed commit of the following:

commit 3380495e93f5e81b80a251b03ddb0a80b17685f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:18:07 2013 +0100

    Looked up the template_fragments cache at runtime.

commit 905a74f52b24a198f802520ff06290a94dedc687
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:19:48 2013 +0100

    Removed all uses of create_cache.

    Refactored the cache tests significantly.

    Made it safe to override the CACHES setting.

commit 35e289fe9285feffed3c60657af9279a6a2cfccc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:23:57 2013 +0100

    Removed create_cache function.

commit 8e274f747a1f1c0c0e6c37873e29067f7fa022e8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:04:52 2013 +0100

    Updated docs to describe a simplified cache backend API.

commit ee7eb0f73e6d4699edcf5d357dce715224525cf6
Author: Curtis Maloney <curtis@tinbrain.net>
Date:   Sat Oct 19 09:49:24 2013 +1100

    Fixed #21012 -- Thread-local caches, like databases.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,bc8abe36ba5508fe788f6d49a26749268d368583,"Fixed #16358 - Made memcache backend delete old value on a failure to set.

Default Memcached configuration allows for a maximum object of 1MB and
will fail to set the key if it is too large. The key will be deleted from
memcached if it fails to be set. This is needed to avoid an issue with
cache_db session backend using the old value stored in memcached, instead
of the newer value stored in the database.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,09f865276554f35060ff939722ec4cefd578edf6,"Use assertIsInstance in tests.

Gives much nicer errors when it fails.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,00c0d3c44ebc4e3461653ec96cd47023cc0a6e5b,Made warning assertions work with or without -Wall python switch,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,10cf3c64273db407402ea9723569dfc8d059e186,Used catch_warnings instead of save/restore methods. Refs #17049.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,40c60efecc0fc73f0b2320b44d684586b52ee799,"Refs #23947 -- Isolated some cache tests.

Thanks Diego Guimarãesi and Florian Apolloner.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,9136ceb6fb8225625631671147ff70c1fcfbbcdc,Replaced router.routers usage with override_settings(DATABASE_ROUTERS); refs #23933.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d038c547b5ce585cbf9ef5bb7e5298f52e4a243b,Removed django.core.cache.get_cache() per deprecation timeline; refs #21012.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,51890ce8898f821d28f2f6fb6071c936e9bd88f0,Applied ignore_warnings to Django tests,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d362c1546f8ad62811e5dee3cf0b43170e6e1c4c,"Convert much of the regression tests to use absolute imports.  There's still work to be done though.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16976 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,e021b87c0009c11aa2e62b62fc40b4b0209a8e5d,"Fixed a few more imports of django.utils.unittest.

One import per line please! Refs #20680.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,7cb140e6d86e9c592983ddb50bfd82480ecec7eb,"Fixed #16003 -- Restored compatibility of the admin when using USE_ETAGS. Thanks for the initial patch, pterk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16729 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,34cc21983ce0124a94d01120431f35ac0653c60f,"Removed `vary_delim_re` in `django/utils/cache.py` in favor of existing `cc_delim_re` since the latter is more correct in parsing the header (allows whitespace before and after comma separators instead of just after).  As a bonus, tests added for `patch_vary_headers()`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6696 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,6fe22b30e007b7ac49eae48a53e7ba0a4ee79a4b,"Fixed #22085 -- Added a feature for setting non-expiring keys as the default.

This feature allows the default `TIMEOUT` Cache argument to be set to `None`,
so that cache instances can set a non-expiring key as the default,
instead of using the default value of 5 minutes.

Previously, this was possible only by passing `None` as an argument to
the set() method of objects of type `BaseCache` (and subtypes).",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,638dbc3e8320652ba3bd759e0ac1d28590402096,"Fixed #6464 -- Added incr() and decr() operations on cache backends. Atomic on Memcache; implemented as a 2 stage retrieve/update on other backends. Includes refactor of the cache tests to ensure all the backends are actually tested, and a fix to the DB cache backend that was discovered as a result. Thanks to Michael Malone for the original patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10031 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,ffc37e2343a93cf6d44247e20cd263b41f931716,"Fixed #21012 -- New API to access cache backends.

Thanks Curtis Malony and Florian Apolloner.

Squashed commit of the following:

commit 3380495e93f5e81b80a251b03ddb0a80b17685f5
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:18:07 2013 +0100

    Looked up the template_fragments cache at runtime.

commit 905a74f52b24a198f802520ff06290a94dedc687
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 14:19:48 2013 +0100

    Removed all uses of create_cache.

    Refactored the cache tests significantly.

    Made it safe to override the CACHES setting.

commit 35e289fe9285feffed3c60657af9279a6a2cfccc
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:23:57 2013 +0100

    Removed create_cache function.

commit 8e274f747a1f1c0c0e6c37873e29067f7fa022e8
Author: Aymeric Augustin <aymeric.augustin@m4x.org>
Date:   Sat Nov 23 12:04:52 2013 +0100

    Updated docs to describe a simplified cache backend API.

commit ee7eb0f73e6d4699edcf5d357dce715224525cf6
Author: Curtis Maloney <curtis@tinbrain.net>
Date:   Sat Oct 19 09:49:24 2013 +1100

    Fixed #21012 -- Thread-local caches, like databases.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,bc8abe36ba5508fe788f6d49a26749268d368583,"Fixed #16358 - Made memcache backend delete old value on a failure to set.

Default Memcached configuration allows for a maximum object of 1MB and
will fail to set the key if it is too large. The key will be deleted from
memcached if it fails to be set. This is needed to avoid an issue with
cache_db session backend using the old value stored in memcached, instead
of the newer value stored in the database.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,09f865276554f35060ff939722ec4cefd578edf6,"Use assertIsInstance in tests.

Gives much nicer errors when it fails.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,00c0d3c44ebc4e3461653ec96cd47023cc0a6e5b,Made warning assertions work with or without -Wall python switch,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,10cf3c64273db407402ea9723569dfc8d059e186,Used catch_warnings instead of save/restore methods. Refs #17049.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,90ce5d46bf62a74d7c78a61c1a7bab64f7cb1735,Fixed #26462 -- Fixed Python 2 UnicodeEncodeError when warning about long cache keys.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,cfd1f93d55d3b9317bdf26b426fe21d935ab3399,"Refs #19914 -- Split the test_invalid_keys cache test into two.

The first half of the test fails when using pylibmc (so will need
to be skipped).",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,674e3fe13e5156344bfafbea59018b8837eb3044,Fixed #19914 -- Fixed test failures with pylibmc.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,75ab212d12058494eaf171acfc762206d8a62d47,"Fixed #12399 -- Added handling for memcache timeouts longer than 30 days. Thanks to houdinihound for the report, and gciotta for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12408 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,89955cc35f3636684ea6f2a6c9504b35a3050f0f,"Fixed #9595 -- Allow non-expiring cache timeouts.

Also, streamline the use of 0 and None between cache backends.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,75ab212d12058494eaf171acfc762206d8a62d47,"Fixed #12399 -- Added handling for memcache timeouts longer than 30 days. Thanks to houdinihound for the report, and gciotta for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12408 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,89955cc35f3636684ea6f2a6c9504b35a3050f0f,"Fixed #9595 -- Allow non-expiring cache timeouts.

Also, streamline the use of 0 and None between cache backends.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fdd7a355bf053217d25b8d2189e37069c1304283,"Deprecated django.utils.importlib

This was a shim for pre-Python 2.7 support.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fdd7a355bf053217d25b8d2189e37069c1304283,"Deprecated django.utils.importlib

This was a shim for pre-Python 2.7 support.",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,673e6fc7fb243ed44841b9969d26a161c25733b3,"Fixed #11675 -- Added support for the PyLibMC cache library. In order to support this, and clean up some other 1.3 caching additions, this patch also includes some changes to the way caches are defined. This means you can now have multiple caches, in the same way you have multiple databases. A huge thanks to Jacob Burch for the work on the PyLibMC backend, and to Jannis for his work on the cache definition changes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15005 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,c5073320a77058206f9b4b79420586531764aa26,"Refactored cache from django/core/cache.py into django/core/cache package, with each backend getting a separate module. This keeps things cleaner and uses less memory, because the backend module is only loaded if it's needed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2378 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,36ded01527b690b5df0574492af9cfcc2ea3d1dc,Fixed #21302 -- Fixed unused imports and import *.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,7da3923ba0c569aa23d0ab0a47a124af60a18f5b,Sorted imports in __init__.py files.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,d356bb653f4d90ae9809e5a051791ded39010c38,Fixed #26460 -- Issued a single warning for invalid cache key,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,cfd1f93d55d3b9317bdf26b426fe21d935ab3399,"Refs #19914 -- Split the test_invalid_keys cache test into two.

The first half of the test fails when using pylibmc (so will need
to be skipped).",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,674e3fe13e5156344bfafbea59018b8837eb3044,Fixed #19914 -- Fixed test failures with pylibmc.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,fc26da645aea2361d78cf5a5543214a240d82527,"Add warning when using cache keys that might not work with memcached.

This means testing with local dev caches (not memcache) will warn
developers if they are introducing inadvertent importabilities. There is
also the ability to silence the warning if a dev is not planning to use
memcache and knows what they are doing with their keys.

Thanks to Carl Meyer for the patch. Fixed #6447.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,1fc7c4aee44af3d5c55d3532aa8fb5b2d9102a62,"Fixed #14596 -- Light refactoring of the cache backends.

 * Removes some code duplication,
 * Provides a convenient base class for db-like cache backends
 * Adds tests for an edge case of culling,
 * Marks the memcached tests as ""skipped"", rather than omitting them.

Thanks to Jonas H for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,36ded01527b690b5df0574492af9cfcc2ea3d1dc,Fixed #21302 -- Fixed unused imports and import *.,False
07e59caa02831c4569bbebb9eb773bdd9cb4b206,7da3923ba0c569aa23d0ab0a47a124af60a18f5b,Sorted imports in __init__.py files.,False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,dc39e62e6b652f006a77b91df02e1dc801597396,"[2.2.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,dc39e62e6b652f006a77b91df02e1dc801597396,"[2.2.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,375657a71c889c588f723469bd868bd1d40c369f,"[2.2.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
a3aebfdc8153dc230686b6d2454ccd32ed4c9e6f,375657a71c889c588f723469bd868bd1d40c369f,"[2.2.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
7e0972bded362bc4b851c109df2c8a6548481a8e,1687b025dc2a03e9ef111b8fd3db63fce48b77b7,"Part 3 of pedant day: replaced all tabs in Django with spaces.  Python the way Guido intended it, baby!


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3415 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,1687b025dc2a03e9ef111b8fd3db63fce48b77b7,"Part 3 of pedant day: replaced all tabs in Django with spaces.  Python the way Guido intended it, baby!


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3415 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,60b46d72ac81dc5a54b4eaa8ccf1159f83666aa9,"Fixed #648 -- Added comment syntax to template system: {# #}. Thanks for the patch, mccutchen@gmail.com and Hawkeye

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3931 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,60b46d72ac81dc5a54b4eaa8ccf1159f83666aa9,"Fixed #648 -- Added comment syntax to template system: {# #}. Thanks for the patch, mccutchen@gmail.com and Hawkeye

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3931 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7e0972bded362bc4b851c109df2c8a6548481a8e,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf39978a53f117ca02e9a0c78b76664a41a54745,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf39978a53f117ca02e9a0c78b76664a41a54745,728ee98cd39df4a1d0e209c81f36dd6852b2a3a5,Added stub release notes for 2.1.2.,False
bf39978a53f117ca02e9a0c78b76664a41a54745,728ee98cd39df4a1d0e209c81f36dd6852b2a3a5,Added stub release notes for 2.1.2.,False
bf39978a53f117ca02e9a0c78b76664a41a54745,033d842e84b6211aa21a34fce49a98aed1d6c557,"Updated translations from Transifex

Forward port of d5ed08263b58ec972a1e009f23d7b90c30b6b9c1 from master.",False
bf39978a53f117ca02e9a0c78b76664a41a54745,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
bf39978a53f117ca02e9a0c78b76664a41a54745,033d842e84b6211aa21a34fce49a98aed1d6c557,"Updated translations from Transifex

Forward port of d5ed08263b58ec972a1e009f23d7b90c30b6b9c1 from master.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,33affaf0b67f0e88bd3d8226476ff2822c821366,"[3.2.x] Added stub notes 3.2.16 release.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
5b6b257fa7ec37ff27965358800c67e2dd11c924,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,33affaf0b67f0e88bd3d8226476ff2822c821366,"[3.2.x] Added stub notes 3.2.16 release.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main",False
5b6b257fa7ec37ff27965358800c67e2dd11c924,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
4c241f1b710da6419d9dca160e80b23b82db7758,7feb54bbae3f637ab3c4dd4831d4385964f574df,"[1.4.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
4c241f1b710da6419d9dca160e80b23b82db7758,6072e108e2738dbde7c2ad976a45745551859a20,"Fixed #17693. Input validation and tests for base36 conversion utils. Thanks Keryn Knight for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17525 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4c241f1b710da6419d9dca160e80b23b82db7758,7feb54bbae3f637ab3c4dd4831d4385964f574df,"[1.4.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
4c241f1b710da6419d9dca160e80b23b82db7758,6072e108e2738dbde7c2ad976a45745551859a20,"Fixed #17693. Input validation and tests for base36 conversion utils. Thanks Keryn Knight for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17525 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0268b855f9eab3377f2821164ef3e66037789e09,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0268b855f9eab3377f2821164ef3e66037789e09,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0268b855f9eab3377f2821164ef3e66037789e09,9741912a9aaad083eaa8b9780cde37e1843cc4ae,"Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
0268b855f9eab3377f2821164ef3e66037789e09,9741912a9aaad083eaa8b9780cde37e1843cc4ae,"Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
c67a368c16e4680b324b4f385398d638db4d8147,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
c67a368c16e4680b324b4f385398d638db4d8147,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
c67a368c16e4680b324b4f385398d638db4d8147,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
c67a368c16e4680b324b4f385398d638db4d8147,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
c67a368c16e4680b324b4f385398d638db4d8147,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,b5393028bfc939adf14d0fa5e4088cddd3b9dfa1,Fixed #27767 -- Added distinct argument to ArrayAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
c67a368c16e4680b324b4f385398d638db4d8147,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
c67a368c16e4680b324b4f385398d638db4d8147,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
c67a368c16e4680b324b4f385398d638db4d8147,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
c67a368c16e4680b324b4f385398d638db4d8147,bc05547cd8c1dd511c6b6a6c873a1bc63417b111,Fixed #28658 -- Added DISTINCT handling to the Aggregate class.,False
c67a368c16e4680b324b4f385398d638db4d8147,96199e562dcc409ab4bdc2b2146fa7cf73c7c5fe,Fixed #26067 -- Added ordering support to ArrayAgg and StringAgg.,False
1f42f82566c9d2d73aff1c42790d6b1b243f7676,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1f42f82566c9d2d73aff1c42790d6b1b243f7676,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1f42f82566c9d2d73aff1c42790d6b1b243f7676,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
1f42f82566c9d2d73aff1c42790d6b1b243f7676,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
770427c2896a078925abfca2317486b284d22f04,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
770427c2896a078925abfca2317486b284d22f04,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
770427c2896a078925abfca2317486b284d22f04,69b5e667385db9ed5e61917a58a75f97b6a97e68,"Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
770427c2896a078925abfca2317486b284d22f04,69b5e667385db9ed5e61917a58a75f97b6a97e68,"Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
770427c2896a078925abfca2317486b284d22f04,69b5e667385db9ed5e61917a58a75f97b6a97e68,"Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
770427c2896a078925abfca2317486b284d22f04,69b5e667385db9ed5e61917a58a75f97b6a97e68,"Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,96d1d4e29275f4f5900f0725975d2ad0a4d05816,Removed unused local variables in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,34dcf51e06fc57fc5462bd40f6a4c8ee949521da,"Fixed #19367 -- Fixed saving ContentFile in filesystem storage

This was not working properly when ContentFile was initialized with
an unicode string.
Thanks Alexey Boriskin for the report and the test.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,af69842dbd98e69519f1263eca2619c3165ba13b,Refs #28428 -- Added test for a callable FileField.upload_to that returns pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,94b32a20ef798768029651f0e8fcc07731a62a64,"Refs #28184 -- Added test for FileField storage default.

Co-authored-by: miigotu <miigotu@gmail.com>",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3db21c351b9b1108954c388799d35c8dad7dfc19,Refs #24652 -- Enforced test isolation in file_storage tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b4cba4ed625ce7c88675616b3bbb237c28a926d1,Fixed #28144 -- Added FileSystemStorage.OS_OPEN_FLAGS to allow customization.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,35db9d58d691d90b0c33e18b613067609d9e638f,"Rearranged some file-related tests

Just moving around some tests to be more logically grouped.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,d1c2e6dd04d4ddc8ace17e6abfed16ac46459d1e,Refs #28428 -- Made FileField.upload_to support pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,210657b791fec359a9109b69e566018253edfad0,Fixed #28184 -- Allowed using a callable for FileField and ImageField storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,8f7355982305da2daccbdfa156b45d62d1cc2c99,Fixed a F811 warning introduced by 35db9d58d6.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,7fbab3ebaf8b60bbe847b772f895df47067a60d3,"Do not allow FileSystemStorage.delete to receive an empty name

Refs #20660.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,7a65c95d42af421e036c5348f205128dd455a89c,Refactored file_storage tests to avoid depending on servers tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,c4cc8756437de2c9b508910ebe84f75a8d98d699,"Fixed #16703 -- Raise an exception if the storage location of the DefaultStorageFinder is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b45852c2631d4f291fb22ef3348065f2a3c2e5e3,"Refs #26772 -- Added a test for FileField reopening closed files.

Thanks Simon Charette for review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,a7c256cb5491bf2a77abdff01638239db5bfd9d5,Fixed #9893 -- Allowed using a field's max_length in the Storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,d34bb3c833751e49d3647ae1eea837178707d803,"Fixed #16108 -- Fixed another race condition in the FileSystemStorage backend with regard to deleting a file. Refs #16082, too. Thanks, Aymeric Augustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16287 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,17752003a8c115ff79f5f21655f5e9b8b2af67f4,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,5bc0ec4ec4b7c888a291bc81b2edd72812231d96,"Removed all usages of deprecated TestCase methods (self.fail*).  This removed most of the Warnings emitted (with -Wall) during the test suite.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14803 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,fcf7fbc68cadb7efd8bc779c0e189389d6475463,"Fixes #8593 -- better handling of safe_join case sensitivity on windows. Thanks for the initial patch, ramiro.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16267 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2b00edc0151a660d1eb86da4059904a0fc4e095e,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,29f607927fe82e2c8baab171dfa8baf710cd9b83,"Fixed spelling of ""nonexistent"".",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,4d1c229ee5cb210e8b592a8d9c87d4a66864328e,Fixed #26495 -- Added name arg to Storage.save()'s File wrapping.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,c574bec0929cd2527268c96a492d25223a9fd576,"Fixed #25598 -- Added SCRIPT_NAME prefix to STATIC_URL and MEDIA_URL set to relative paths.

Thanks Florian Apolloner for reviews.

Co-authored-by: Joel Dunham <Joel.Dunham@technicalsafetybc.ca>",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,4e70ad11d29bde54b846920ce0dcf8d10741d3ae,"Made FileSystemStorage accept both text and byte streams

Thanks Alexey Boriskin for his help on the patch.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,8d7271578d7b153435b40fe40236ebec43cbf1b9,"Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,1ff6e37de46f0cbf271a287a0ca67678e741a90a,"Fixed #23832 -- Added timezone aware Storage API.

New Storage.get_{accessed,created,modified}_time() methods convert the
naive time from now-deprecated {accessed,created_modified}_time()
methods into aware objects in UTC if USE_TZ=True.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,fb9d8f06520f495d0c36236f7534dbe660c7e164,"Fixed #22717 -- Auto-corrected missing ending slash in FileSystemStorage

Thanks David Fischer for the report and Moayad Mardini for the
review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0d8d30b7ddfe83ab03120f4560c7aa153f4d0ed1,"Fixed #23157 -- Removed O(n) algorithm when uploading duplicate file names.

This is a security fix. Disclosure following shortly.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,65e86948b80262574058a94ccaae3a9b59c3faea,Corrected several typos in string literals and test names.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0f2975534dc6a010a4da28165b235f36bf1df24f,Refs #28428 -- Added tests for using FileSystemStorage with pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,170f7115bbae45f26ca8078e749dfe67445a57ea,"Fixed #24826 -- Accounted for filesystem-dependent filename max length

Thanks Raphaël Hertzog for the report and help on the patch, and Tim Graham
for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,361d6738f89f8443855d4378d3241566d9fca6e9,Fixed #11739 -- Made ContentFile support Unicode input,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2d42e23b6d8fd76f93a96b2310b2c9dfd441d009,Fixed #31941 -- Corrected FileField.deconstruct() with a callable storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b820b6108a7d3f11ec18774d16d657f4f63fe9fa,Fixed #26896 -- Allowed a lazy base_url for FileSystemStorage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,474cc420bf6bc1067e2aaa4b40cf6a08d62096f7,"Refs #32508 -- Raised Type/ValueError instead of using ""assert"" in django.core.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b5240d25c1bf724f0008478e7f6cccd0a6d6bd1e,Removed unnecessary bytes prefix for ContentFile,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,694441827714a3e08f0d02c4650dc3388a867baa,Fixed #22337: FileSystemStorage marked as deconstructible and tested.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,dfbcbf212493b9e5bb527e7ec2d97ae3cec480fa,Always close files in the file_storage tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,56c461a0d7c1cbb9d5709bda817579c7ee18d474,"Fixed #26038 -- Changed FileSystemStorage defaults on setting change.

Thanks to Dave Voutila for the report and Tim for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ac1975b18b5a33234284bec86e5a5bb44a4af976,Fixed #13809 -- Made FieldFile.open() respect its mode argument.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,39791c8e6de3a71879eb26dd9f8d01273847f395,Harmonized Windows checks in tests to a single style.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2d7fb779870583f8c6ee003f81bf67c4d7c21227,Refs #23832 -- Removed deprecated non-timezone aware Storage API.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,96d1d4e29275f4f5900f0725975d2ad0a4d05816,Removed unused local variables in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,34dcf51e06fc57fc5462bd40f6a4c8ee949521da,"Fixed #19367 -- Fixed saving ContentFile in filesystem storage

This was not working properly when ContentFile was initialized with
an unicode string.
Thanks Alexey Boriskin for the report and the test.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,af69842dbd98e69519f1263eca2619c3165ba13b,Refs #28428 -- Added test for a callable FileField.upload_to that returns pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,94b32a20ef798768029651f0e8fcc07731a62a64,"Refs #28184 -- Added test for FileField storage default.

Co-authored-by: miigotu <miigotu@gmail.com>",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3db21c351b9b1108954c388799d35c8dad7dfc19,Refs #24652 -- Enforced test isolation in file_storage tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b4cba4ed625ce7c88675616b3bbb237c28a926d1,Fixed #28144 -- Added FileSystemStorage.OS_OPEN_FLAGS to allow customization.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,35db9d58d691d90b0c33e18b613067609d9e638f,"Rearranged some file-related tests

Just moving around some tests to be more logically grouped.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,d1c2e6dd04d4ddc8ace17e6abfed16ac46459d1e,Refs #28428 -- Made FileField.upload_to support pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3d0dcd7f5af378d3ab6adb303b913e6c7b2e0ee5,Refs #26022 -- Used context manager version of assertRaises in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,210657b791fec359a9109b69e566018253edfad0,Fixed #28184 -- Allowed using a callable for FileField and ImageField storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,8f7355982305da2daccbdfa156b45d62d1cc2c99,Fixed a F811 warning introduced by 35db9d58d6.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,7fbab3ebaf8b60bbe847b772f895df47067a60d3,"Do not allow FileSystemStorage.delete to receive an empty name

Refs #20660.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,7a65c95d42af421e036c5348f205128dd455a89c,Refactored file_storage tests to avoid depending on servers tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,c4cc8756437de2c9b508910ebe84f75a8d98d699,"Fixed #16703 -- Raise an exception if the storage location of the DefaultStorageFinder is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b45852c2631d4f291fb22ef3348065f2a3c2e5e3,"Refs #26772 -- Added a test for FileField reopening closed files.

Thanks Simon Charette for review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,a7c256cb5491bf2a77abdff01638239db5bfd9d5,Fixed #9893 -- Allowed using a field's max_length in the Storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,d34bb3c833751e49d3647ae1eea837178707d803,"Fixed #16108 -- Fixed another race condition in the FileSystemStorage backend with regard to deleting a file. Refs #16082, too. Thanks, Aymeric Augustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16287 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,17752003a8c115ff79f5f21655f5e9b8b2af67f4,Refs #28428 -- Made FileSystemStorage.save() to support pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,5bc0ec4ec4b7c888a291bc81b2edd72812231d96,"Removed all usages of deprecated TestCase methods (self.fail*).  This removed most of the Warnings emitted (with -Wall) during the test suite.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14803 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,fcf7fbc68cadb7efd8bc779c0e189389d6475463,"Fixes #8593 -- better handling of safe_join case sensitivity on windows. Thanks for the initial patch, ramiro.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16267 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2b00edc0151a660d1eb86da4059904a0fc4e095e,58b704d8da2347e1db6930c80eb117dea1684d72,"Fixed #10497 -- Added a few time-related methods to the storage API. Thanks for the report and patch to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14012 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,29f607927fe82e2c8baab171dfa8baf710cd9b83,"Fixed spelling of ""nonexistent"".",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,4d1c229ee5cb210e8b592a8d9c87d4a66864328e,Fixed #26495 -- Added name arg to Storage.save()'s File wrapping.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2b281cc35ed9d997614ca3c416928d7fabfef1ad,"Refs #23919 -- Removed most of remaining six usage

Thanks Tim Graham for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,c574bec0929cd2527268c96a492d25223a9fd576,"Fixed #25598 -- Added SCRIPT_NAME prefix to STATIC_URL and MEDIA_URL set to relative paths.

Thanks Florian Apolloner for reviews.

Co-authored-by: Joel Dunham <Joel.Dunham@technicalsafetybc.ca>",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,4e70ad11d29bde54b846920ce0dcf8d10741d3ae,"Made FileSystemStorage accept both text and byte streams

Thanks Alexey Boriskin for his help on the patch.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b5f0b3478dfcf0335f8ac2038d59f54b4a05f2a0,Fixed #27579 -- Added aliases for Python 3's assertion names in SimpleTestCase.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,8d7271578d7b153435b40fe40236ebec43cbf1b9,"Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,1ff6e37de46f0cbf271a287a0ca67678e741a90a,"Fixed #23832 -- Added timezone aware Storage API.

New Storage.get_{accessed,created,modified}_time() methods convert the
naive time from now-deprecated {accessed,created_modified}_time()
methods into aware objects in UTC if USE_TZ=True.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,fb9d8f06520f495d0c36236f7534dbe660c7e164,"Fixed #22717 -- Auto-corrected missing ending slash in FileSystemStorage

Thanks David Fischer for the report and Moayad Mardini for the
review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0d8d30b7ddfe83ab03120f4560c7aa153f4d0ed1,"Fixed #23157 -- Removed O(n) algorithm when uploading duplicate file names.

This is a security fix. Disclosure following shortly.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,65e86948b80262574058a94ccaae3a9b59c3faea,Corrected several typos in string literals and test names.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0f2975534dc6a010a4da28165b235f36bf1df24f,Refs #28428 -- Added tests for using FileSystemStorage with pathlib.Path.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,170f7115bbae45f26ca8078e749dfe67445a57ea,"Fixed #24826 -- Accounted for filesystem-dependent filename max length

Thanks Raphaël Hertzog for the report and help on the patch, and Tim Graham
for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,361d6738f89f8443855d4378d3241566d9fca6e9,Fixed #11739 -- Made ContentFile support Unicode input,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2d42e23b6d8fd76f93a96b2310b2c9dfd441d009,Fixed #31941 -- Corrected FileField.deconstruct() with a callable storage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b820b6108a7d3f11ec18774d16d657f4f63fe9fa,Fixed #26896 -- Allowed a lazy base_url for FileSystemStorage.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,474cc420bf6bc1067e2aaa4b40cf6a08d62096f7,"Refs #32508 -- Raised Type/ValueError instead of using ""assert"" in django.core.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b5240d25c1bf724f0008478e7f6cccd0a6d6bd1e,Removed unnecessary bytes prefix for ContentFile,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,253adc2b8a52982139d40c4f55b3fd446e1cb8f3,Refs #26022 -- Used context manager version of assertRaisesMessage in tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,694441827714a3e08f0d02c4650dc3388a867baa,Fixed #22337: FileSystemStorage marked as deconstructible and tested.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,dfbcbf212493b9e5bb527e7ec2d97ae3cec480fa,Always close files in the file_storage tests.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,56c461a0d7c1cbb9d5709bda817579c7ee18d474,"Fixed #26038 -- Changed FileSystemStorage defaults on setting change.

Thanks to Dave Voutila for the report and Tim for the review.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ac1975b18b5a33234284bec86e5a5bb44a4af976,Fixed #13809 -- Made FieldFile.open() respect its mode argument.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,39791c8e6de3a71879eb26dd9f8d01273847f395,Harmonized Windows checks in tests to a single style.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,2d7fb779870583f8c6ee003f81bf67c4d7c21227,Refs #23832 -- Removed deprecated non-timezone aware Storage API.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,73245b3285f63694d2c63c9b197165dc6d9cfd4e,"Prevented file_upload tests to leave files behind

Refs #19206.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,73245b3285f63694d2c63c9b197165dc6d9cfd4e,"Prevented file_upload tests to leave files behind

Refs #19206.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,72efd840a8cb6ee35a3732d8bb434e7361970b3c,"Fixed #34110 -- Added in-memory file storage.

Thanks Paolo Melchiorre, Carlton Gibson, and Mariusz Felisiak for
reviews.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b55699968fc9ee985384c64e37f6cc74a0a23683,"Fixed #32718 -- Relaxed file name validation in FileField.

- Validate filename returned by FileField.upload_to() not a filename
  passed to the FileField.generate_filename() (upload_to() may
  completely ignored passed filename).
- Allow relative paths (without dot segments) in the generated filename.

Thanks to Jakub Kleň for the report and review.
Thanks to all folks for checking this patch on existing projects.
Thanks Florian Apolloner and Markus Holtermann for the discussion and
implementation idea.

Regression in 0b79eb36915d178aef5c6a7bbce71b1e76d376d3.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,6d343d01c57eb03ca1c6826318b652709e58a76e,"Fixed CVE-2021-45452 -- Fixed potential path traversal in storage subsystem.

Thanks to Dennis Brinkrolf for the report.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,ec2727efef605437eb572d51ca9afbb3a60eda40,Fixed #28154 -- Prevented infinite loop in FileSystemStorage.save() when a broken symlink with the same name exists.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
2b00edc0151a660d1eb86da4059904a0fc4e095e,72efd840a8cb6ee35a3732d8bb434e7361970b3c,"Fixed #34110 -- Added in-memory file storage.

Thanks Paolo Melchiorre, Carlton Gibson, and Mariusz Felisiak for
reviews.",False
2b00edc0151a660d1eb86da4059904a0fc4e095e,b55699968fc9ee985384c64e37f6cc74a0a23683,"Fixed #32718 -- Relaxed file name validation in FileField.

- Validate filename returned by FileField.upload_to() not a filename
  passed to the FileField.generate_filename() (upload_to() may
  completely ignored passed filename).
- Allow relative paths (without dot segments) in the generated filename.

Thanks to Jakub Kleň for the report and review.
Thanks to all folks for checking this patch on existing projects.
Thanks Florian Apolloner and Markus Holtermann for the discussion and
implementation idea.

Regression in 0b79eb36915d178aef5c6a7bbce71b1e76d376d3.",False
027bd348642007617518379f8b02546abacaa6e0,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,cce32a9b0900210d524b80160209c3e2b5dfb156,"Fixed #13166 - Added JavaScript warnings to admin changelist to help against ambiguity between action and list_editable form submission. Thanks to blinkylights and aaugustin for the report and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,93a4d46184bba069fc6a9aa5517802b2488032ac,"Fixed #14672 - Added admin handling for on_delete=PROTECT. Thanks to jtiai for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15249 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,52fc61e0cfb334af69154e862c148036d111dba6,"Fixed #14529 -- Fixed representation of model names in admin messages after model object changes when the ModelAdmin queryset() uses defer() or only(). Thanks rlaager for report and initial patch, to rasca an julien for help in tracking the problem.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15596 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,fe3c9ad55103f8fe473bdcf77d06cb958cbaf217,"Fixed #14355 -- Ensure that help_text is displayed for readonly fields in the admin. Thanks to jester for the report, and to alexbmeng, subsume, wamberg and Julien Phalip for ther work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15582 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,791ecb4be4d64618a40e1a80fad26a5e3b4d4b90,"Fixed #13126 -- Ensured that individual form errors are displayed when errors occur on a list-editable changelist. Thanks to slafs for the report, and to Julien Phalip for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15580 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,8eccb728ccd97a07b9281d3a7c2c6bac105f285f,"Fixed #15964 - Do not order admin actions by description

Thanks to julien for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,9e637d3061bfd620be3e2bb6a79e2d8d08154f91,"Fixed a number of tests that were failing in Oracle due to false assumptions about the primary keys of objects.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15779 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,cce32a9b0900210d524b80160209c3e2b5dfb156,"Fixed #13166 - Added JavaScript warnings to admin changelist to help against ambiguity between action and list_editable form submission. Thanks to blinkylights and aaugustin for the report and initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13072 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,93a4d46184bba069fc6a9aa5517802b2488032ac,"Fixed #14672 - Added admin handling for on_delete=PROTECT. Thanks to jtiai for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15249 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,52fc61e0cfb334af69154e862c148036d111dba6,"Fixed #14529 -- Fixed representation of model names in admin messages after model object changes when the ModelAdmin queryset() uses defer() or only(). Thanks rlaager for report and initial patch, to rasca an julien for help in tracking the problem.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15596 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,fe3c9ad55103f8fe473bdcf77d06cb958cbaf217,"Fixed #14355 -- Ensure that help_text is displayed for readonly fields in the admin. Thanks to jester for the report, and to alexbmeng, subsume, wamberg and Julien Phalip for ther work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15582 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,791ecb4be4d64618a40e1a80fad26a5e3b4d4b90,"Fixed #13126 -- Ensured that individual form errors are displayed when errors occur on a list-editable changelist. Thanks to slafs for the report, and to Julien Phalip for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15580 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,8eccb728ccd97a07b9281d3a7c2c6bac105f285f,"Fixed #15964 - Do not order admin actions by description

Thanks to julien for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,9e637d3061bfd620be3e2bb6a79e2d8d08154f91,"Fixed a number of tests that were failing in Oracle due to false assumptions about the primary keys of objects.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15779 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,ce47d4ab830bb96fe9325b9ccd077619116fd548,"Fixed #8648 -- Admin no longer ignores to_field. Thanks for the help Karen Tracey and SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8823 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,b5b5ba6cd9179372cead3e6d19f732285e80b799,"Fixed #10918 -- Ensure that the search widget on a raw_id_admin uses the right field name when the ForeignKey has a to_field definition. Thanks to David Cramer for the report, Collin Anderson for the fix, and Julien Phalip for the test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15657 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,844a24bbb97af663ebf8dbeab4499acafe105943,"Fixed #16921 -- Added assertHTMLEqual and assertHTMLNotEqual assertions, and converted Django tests to use them where appropriate. Thanks Greg Müllegger.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17414 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
027bd348642007617518379f8b02546abacaa6e0,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,9848f888badeaa84c31e5ced99a10badb0b525e4,"Made some small improvements to docs/topics/http/sessions.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10839 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,97a7dab2b19b87652bc15c5db4cb06cd7011fe4d,"Fixed #6941 -- When logging a user out, or when logging in with an existing
session and a different user id to the current session owner, flush the session
data to avoid leakage. Logging in and moving from an anonymous user to a
validated user still keeps existing session data.

Backwards incompatible if you were assuming sessions persisted past logout.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8343 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,a7a6a1b75d985d1c9c65d935761066238e0ca9fd,"Fixed imports, indention, and a long line.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,d65526d6886067a8ef368e5b02fce80e1e4c4903,"Fixed #580 -- Added mega support for generating Vary headers, including some view decorators, and changed the CacheMiddleware to account for the Vary header. Also added GZipMiddleware and ConditionalGetMiddleware, which are no longer handled by CacheMiddleware itself. Also updated the cache.txt and middleware.txt docs. Thanks to Hugo and Sune for the excellent patches

git-svn-id: http://code.djangoproject.com/svn/django/trunk@810 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,07889c13a63eeb3e8a73f1e02a21227def3ae548,"Fixed #1 -- Added anonymous session support via middleware and request.session. Removed the former request.session, which wasn't being used anyway. Removed auth.Session model. See the BackwardsIncompatibleChanges wiki page for IMPORTANT notes on code you'll have to change and a DB table you'll have to create.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@518 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5dd9a2ab38a79457ba9c21f07ca855727f9568a3,"Fixed #4199 -- Changed date formatting in HTTP expires header to be spec
compliant. Thanks, Chris Bennett.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5712 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,a7a6a1b75d985d1c9c65d935761066238e0ca9fd,"Fixed imports, indention, and a long line.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,d65526d6886067a8ef368e5b02fce80e1e4c4903,"Fixed #580 -- Added mega support for generating Vary headers, including some view decorators, and changed the CacheMiddleware to account for the Vary header. Also added GZipMiddleware and ConditionalGetMiddleware, which are no longer handled by CacheMiddleware itself. Also updated the cache.txt and middleware.txt docs. Thanks to Hugo and Sune for the excellent patches

git-svn-id: http://code.djangoproject.com/svn/django/trunk@810 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,e172e7be57af5ecdddf7c80361eed27d4658a9cd,"Fixed #4724 -- Added support for configurable session cookie paths. Helps with
multiple Django installs under the same hostname. Thanks, frej and Graham
Dumpleton.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,5e8efa9a6032f9c4278199ab354c3ff742387263,"Implemented a flush() method on sessions that cleans out the session and
regenerates the key. Used to ensure the caller gets a fresh session at logout,
for example.

Based on a patch from mrts. Refs #7515.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8342 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,9848f888badeaa84c31e5ced99a10badb0b525e4,"Made some small improvements to docs/topics/http/sessions.txt

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10839 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,97a7dab2b19b87652bc15c5db4cb06cd7011fe4d,"Fixed #6941 -- When logging a user out, or when logging in with an existing
session and a different user id to the current session owner, flush the session
data to avoid leakage. Logging in and moving from an anonymous user to a
validated user still keeps existing session data.

Backwards incompatible if you were assuming sessions persisted past logout.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8343 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2f5485346ee6f84b4e52068c04e043092daf55f7,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9e3b9949cd55f090591fbdc4a114fcb8368b6d9,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9e3b9949cd55f090591fbdc4a114fcb8368b6d9,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,a3a6def867c61d24dfded6cbfef7f820409dc739,Fixed #25421 -- Fixed test --keepdb option on Oracle.,False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,a3a6def867c61d24dfded6cbfef7f820409dc739,Fixed #25421 -- Fixed test --keepdb option on Oracle.,False
34e10720d81b8d407aa14d763b6a7fe8f13b4f2e,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
c9f648ccfac5ab90fb2829a66da4f77e68c7f93a,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
52e409ed17287e9aabda847b6afe58be2fa9f86a,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
52e409ed17287e9aabda847b6afe58be2fa9f86a,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,b70c371fc1f18ea0c43b503122df3f311afc7105,Simplified smart_urlquote and added some basic tests.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,0f783b7f4eac037e22875eeeb6dc85c26b2a65f4,"Fixed #2986 -- Made the JavaScript code that drives related model instance addition in a popup window handle a model representation containing new lines. Also, moved the escapejs functionality yoo django.utils.html so it can be used from Python code. Thanks andrewwatts for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15131 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,6a0291bdaf43e5467a524dcc67f85b55f36fe46f,Tweaked strip_tags tests to pass on Python 3.3,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,85cd458944c16769a707921619e94ccc3dfbf7bd,"Removed u prefixes on unicode strings.

They break Python 3.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ba53cd30d1427dbbd564b1791ef6348db93cf37f,"Reorganized utils tests so it's all in separate modules. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,b70c371fc1f18ea0c43b503122df3f311afc7105,Simplified smart_urlquote and added some basic tests.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c716fe87821df00f9f03ecc761c914d1682591a2,"Refs #23919 -- Removed six.PY2/PY3 usage

Thanks Tim Graham for the review.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,0f783b7f4eac037e22875eeeb6dc85c26b2a65f4,"Fixed #2986 -- Made the JavaScript code that drives related model instance addition in a popup window handle a model representation containing new lines. Also, moved the escapejs functionality yoo django.utils.html so it can be used from Python code. Thanks andrewwatts for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15131 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,af64429b991471b7a441e133b5b7d29070984f24,"Fixed #7261 -- support for __html__ for library interoperability

The idea is that if an object implements __html__ which returns a string this is
used as HTML representation (eg: on escaping). If the object is a str or unicode
subclass and returns itself the object is a safe string type.

This is an updated patch based on jbalogh and ivank patches.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,dc51ec8bc214cf60ebb99732363624c23df8005f,"Fixed #19237 -- Used HTML parser to strip tags

The regex method used until now for the strip_tags utility is fast,
but subject to flaws and security issues. Consensus and good
practice lead use to use a slower but safer method.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,6a0291bdaf43e5467a524dcc67f85b55f36fe46f,Tweaked strip_tags tests to pass on Python 3.3,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,bee498f3a2f66210db39f0be244ec4fa888b6940,Added 'format_html' utility for formatting HTML fragments safely,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,85cd458944c16769a707921619e94ccc3dfbf7bd,"Removed u prefixes on unicode strings.

They break Python 3.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ba53cd30d1427dbbd564b1791ef6348db93cf37f,"Reorganized utils tests so it's all in separate modules. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,1f2abf784a9fe550959de242d91963b2ad6f7e9c,Fixed #24469 -- Refined escaping of Django's form elements in non-Django templates.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,2af8cd22a946ffc9ad788848f3a82619695f28e0,Imported specific functions in tests.utils_tests.test_html.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,2af8cd22a946ffc9ad788848f3a82619695f28e0,Imported specific functions in tests.utils_tests.test_html.,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e157315da3ae7005fa0683ffc9751dbeca7306c8,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
e157315da3ae7005fa0683ffc9751dbeca7306c8,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
ed682a24fca774818542757651bfba576c3fc3ef,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
ed682a24fca774818542757651bfba576c3fc3ef,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
ed682a24fca774818542757651bfba576c3fc3ef,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
ed682a24fca774818542757651bfba576c3fc3ef,00e8e514e173dbbbc9d30f5753f4605eeffb2340,Name PostgreSQL correctly.,False
ed682a24fca774818542757651bfba576c3fc3ef,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
ed682a24fca774818542757651bfba576c3fc3ef,00e8e514e173dbbbc9d30f5753f4605eeffb2340,Name PostgreSQL correctly.,False
ed682a24fca774818542757651bfba576c3fc3ef,36f514f06553ef299001b4e9a5f63ec806a50581,"Added HStoreField.

Thanks to `django-hstore` for inspiration in some areas, and many people
for reviews.",False
ed682a24fca774818542757651bfba576c3fc3ef,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
ed682a24fca774818542757651bfba576c3fc3ef,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
ed682a24fca774818542757651bfba576c3fc3ef,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
ed682a24fca774818542757651bfba576c3fc3ef,2eb7d6e6d41480f21305fc6abe2f1a443491ddec,Fixed #26908 -- Fixed crash with jsonfield__key__isnull lookup.,False
ed682a24fca774818542757651bfba576c3fc3ef,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
ed682a24fca774818542757651bfba576c3fc3ef,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
ed682a24fca774818542757651bfba576c3fc3ef,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
ed682a24fca774818542757651bfba576c3fc3ef,3c8fe5dddf34533a419d2deed5208a28de32cb4a,Fixed #24751 -- Fixed HStoreField isnull lookup.,False
ed682a24fca774818542757651bfba576c3fc3ef,283b468462a586fd9bf7a2794e9b9a20a7e8a2d9,"Fixed #25454 -- Ensured register_hstore_handler is called for all connections

Thanks Simon Charette for help with the patch.",False
ed682a24fca774818542757651bfba576c3fc3ef,cecef94275118dc49a1b0d89d3ca9734e2ec9776,"Fixed #27257 -- Fixed builtin text lookups on JSONField keys.

Thanks Nick Stefan for the report and Tim for the review.",False
ed682a24fca774818542757651bfba576c3fc3ef,33ea472f6924480eb8708bc6d0ac90b9f742ba68,Fixed #24604 -- Added JSONField to contrib.postgres.,False
90be6ca20d607977dec234ec972b77b83955749b,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,e12b3199d0c01694ca6b09add5e0f27cadffc8ad,"Fixed #6191, #11296 -- Modified the admin deletion confirmation page to use the same object collection scheme as the actual deletion. This ensures that all objects that may be deleted are actually deleted, and that cyclic display problems are avoided. Thanks to carljm for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,85207a245bf09fdebe486b4c7bbcb65300f2a693,"Fix a security issue in the admin. Disclosure and new release forthcoming.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@15033 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,e12b3199d0c01694ca6b09add5e0f27cadffc8ad,"Fixed #6191, #11296 -- Modified the admin deletion confirmation page to use the same object collection scheme as the actual deletion. This ensures that all objects that may be deleted are actually deleted, and that cyclic display problems are avoided. Thanks to carljm for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
90be6ca20d607977dec234ec972b77b83955749b,85207a245bf09fdebe486b4c7bbcb65300f2a693,"Fix a security issue in the admin. Disclosure and new release forthcoming.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@15033 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0bd57a879a0d54920bb9038a732645fb917040e9,21b858cb6735cdfdc695ff7b076e4cbc1981bc88,Fixed #24060 -- Added OrderBy Expressions,False
0bd57a879a0d54920bb9038a732645fb917040e9,af69f14e7ba06bb7dee257ec02b885f4828c77ff,"Removed unused sql.Query.query_terms

Unused since 5008a4db440c8f7d108a6979b959025ffb5789ba.",False
0bd57a879a0d54920bb9038a732645fb917040e9,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
0bd57a879a0d54920bb9038a732645fb917040e9,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
0bd57a879a0d54920bb9038a732645fb917040e9,21b858cb6735cdfdc695ff7b076e4cbc1981bc88,Fixed #24060 -- Added OrderBy Expressions,False
0bd57a879a0d54920bb9038a732645fb917040e9,af69f14e7ba06bb7dee257ec02b885f4828c77ff,"Removed unused sql.Query.query_terms

Unused since 5008a4db440c8f7d108a6979b959025ffb5789ba.",False
0bd57a879a0d54920bb9038a732645fb917040e9,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
0bd57a879a0d54920bb9038a732645fb917040e9,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
0bd57a879a0d54920bb9038a732645fb917040e9,513948735b799239f3ef8c89397592445e1a0cd5,"Fixed #31426 -- Added proper field validation to QuerySet.order_by().

Resolve the field reference instead of using fragile regex based string
reference validation.",False
0bd57a879a0d54920bb9038a732645fb917040e9,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
0bd57a879a0d54920bb9038a732645fb917040e9,8dc1cc0b306168eb1c0a0fc5457b6f1156fcbcff,"[3.1.x] Added stub release notes for 3.1.13.

Backport of 8e97698d7b537cd298438a8d7b55916d275ff851 from main.",False
0bd57a879a0d54920bb9038a732645fb917040e9,513948735b799239f3ef8c89397592445e1a0cd5,"Fixed #31426 -- Added proper field validation to QuerySet.order_by().

Resolve the field reference instead of using fragile regex based string
reference validation.",False
0bd57a879a0d54920bb9038a732645fb917040e9,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
0bd57a879a0d54920bb9038a732645fb917040e9,8dc1cc0b306168eb1c0a0fc5457b6f1156fcbcff,"[3.1.x] Added stub release notes for 3.1.13.

Backport of 8e97698d7b537cd298438a8d7b55916d275ff851 from main.",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,2626ea4a74d09642a50c3fb30944513b68dda289,"Fixed #14681 -- Do not set mode to None on file-like objects.

gzip.GzipFile does not support files with mode set to None.",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,169b1a404c8118bb75840523d5fb3543de9c8889,"Replaced foo.next() by next(foo).

This new syntax for next() has been introduced in Python 2.6 and is
compatible with Python 3.",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d47b9ec2c71868105df41e50020c9ec2eae76b62,"Fixed a regression on Python < 2.6 introduced in [12552].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,ff420b43647dd7f149f000efd2c7eb077f6ba5cf,"Fixed #8454: added a FILE_UPLOAD_PERMISSIONS setting to control the permissoin of files uploaded by the built-in file storage system. Thanks, dcwatson.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,3c19671711a6ba54258feafb604446bcd64e6154,"Fixed #14254 - More tests for storage backends

Thanks to steph for the patch, also to tobias for cleanups.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13852 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,121d2e36785dc0ce8e7d1c48883fc7b719b21afc,"Fixed #12991 -- Added unittest2 support. Thanks to PaulM for the draft patch, and to Luke, Karen, Justin, Alex, Łukasz Rekucki, and Chuck Harmston for their help testing and reviewing the final patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14139 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d47b9ec2c71868105df41e50020c9ec2eae76b62,"Fixed a regression on Python < 2.6 introduced in [12552].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,419747d1c8363f06a143429ffe58e67f2f217b5e,"Fixed a few Python 2.3 incompatibilities that were causing test failures.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10863 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,2626ea4a74d09642a50c3fb30944513b68dda289,"Fixed #14681 -- Do not set mode to None on file-like objects.

gzip.GzipFile does not support files with mode set to None.",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,a45c687ecfd2acd490a5ac0b34595622f78b97a9,"Migrate the files doctests. Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,00e7a571c5737c69bc225ae39d3dca6d0fbfd072,"Fixed #6456 - Excised FileField file deletion to avoid data loss. Thanks to durdinator for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15321 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,59507753c7f098e98000459b2371becf0da18ff7,"Fixed #9610 -- Fixed duplicate uploaded file name mangling when directory contained a dot and file didn't.  Based on patches from fadlytabrani and adurdin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,169b1a404c8118bb75840523d5fb3543de9c8889,"Replaced foo.next() by next(foo).

This new syntax for next() has been introduced in Python 2.6 and is
compatible with Python 3.",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,d7c829c98ebb709a7c7bc263c6c195d8155ee7fb,"Yet more file storage testing cleanup for the sake of buildbots; this should be the last of it, I hope.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9226 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,5366aa96fef0ce55fc425cf273c7debe74d99305,"Fixed #10258: handle duplicate file names better.

Instead of just continually appending ""_"" to duplicate file names, Django's
default storage now appends `_1`, `_2`, `_3`, etc.

Thanks to ianschenck and Thilo.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12552 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
26cd48e166ac4d84317c8ee6d63ac52a87e8da99,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,b2424a391a42a01b32b5fd9a337f93092d842ac8,"Updated setup.py to include locales and *.TXT in package_data. Changed version to 0.90.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1260 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,b2424a391a42a01b32b5fd9a337f93092d842ac8,"Updated setup.py to include locales and *.TXT in package_data. Changed version to 0.90.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1260 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,961b6bdfaa88efebb9e01769625dac3bbb41f042,"Cleaned up setup.py in preparation for 0.91 release

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1907 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8bc36e726c9e8c75c681d3ad232df8e882aaac81,961b6bdfaa88efebb9e01769625dac3bbb41f042,"Cleaned up setup.py in preparation for 0.91 release

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1907 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
32ebcbf2e1fe3e5ba79a6554a167efce81f7422d,39f35d4b9de223b72c67bb1d12e65669b4e1355b,Fixed #25871 -- Added expressions support to QuerySet.values().,False
32ebcbf2e1fe3e5ba79a6554a167efce81f7422d,39f35d4b9de223b72c67bb1d12e65669b4e1355b,Fixed #25871 -- Added expressions support to QuerySet.values().,False
1f814a9547842dcfabdae09573055984af9d3fab,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f814a9547842dcfabdae09573055984af9d3fab,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f814a9547842dcfabdae09573055984af9d3fab,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1f814a9547842dcfabdae09573055984af9d3fab,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
bd062445cffd3f6cc6dcd20d13e2abed818fa173,0c1675781ec5944132fe5a475ca6064edc71bd81,Added release date and stub release notes for 4.0.7 and 3.2.15 releases.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,cadd864f6878c1c02a014589876ece166befdeb3,Adjusted release notes for 4.0.7 and 3.2.15.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,c6932ea2ea7ec431245b9a343c72318bb758072f,Added stub release notes for 4.0.7.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,cadd864f6878c1c02a014589876ece166befdeb3,Adjusted release notes for 4.0.7 and 3.2.15.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,c6932ea2ea7ec431245b9a343c72318bb758072f,Added stub release notes for 4.0.7.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,9062c23de80e999009cbe4100d83e90dd0463612,Adjusted version 4.0.7 release notes.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,a177f854c34718e473bcd0a2dc6c4fd935c8e327,"Fixed #16470 -- Allowed FileResponse to auto-set some Content headers.

Thanks Simon Charette, Jon Dufresne, and Tim Graham for the reviews.",False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,0c1675781ec5944132fe5a475ca6064edc71bd81,Added release date and stub release notes for 4.0.7 and 3.2.15 releases.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,9062c23de80e999009cbe4100d83e90dd0463612,Adjusted version 4.0.7 release notes.,False
bd062445cffd3f6cc6dcd20d13e2abed818fa173,de4832c49b8a8cf00b2d602ab4d10c4ca69627bd,Fixed #30196 -- Made FileResponse set Content-Disposition inline if filename is available.,False
2342693b31f740a422abf7267c53b4e7bc487c1b,7feb54bbae3f637ab3c4dd4831d4385964f574df,"[1.4.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
2342693b31f740a422abf7267c53b4e7bc487c1b,6072e108e2738dbde7c2ad976a45745551859a20,"Fixed #17693. Input validation and tests for base36 conversion utils. Thanks Keryn Knight for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17525 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2342693b31f740a422abf7267c53b4e7bc487c1b,7feb54bbae3f637ab3c4dd4831d4385964f574df,"[1.4.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
2342693b31f740a422abf7267c53b4e7bc487c1b,6072e108e2738dbde7c2ad976a45745551859a20,"Fixed #17693. Input validation and tests for base36 conversion utils. Thanks Keryn Knight for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17525 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2342693b31f740a422abf7267c53b4e7bc487c1b,4c241f1b710da6419d9dca160e80b23b82db7758,"[1.4.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2342693b31f740a422abf7267c53b4e7bc487c1b,4c241f1b710da6419d9dca160e80b23b82db7758,"[1.4.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2342693b31f740a422abf7267c53b4e7bc487c1b,4c241f1b710da6419d9dca160e80b23b82db7758,"[1.4.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2342693b31f740a422abf7267c53b4e7bc487c1b,4c241f1b710da6419d9dca160e80b23b82db7758,"[1.4.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
57b95fedad5e0b83fc9c81466b7d1751c6427aae,308f64462421b09b21ef0dcd9cc3654cc25bceba,"[1.11.x] Fixed #28645 -- Reallowed AuthenticationForm to raise the inactive user error when using ModelBackend.

Regression in e0a3d937309a82b8beea8f41b17d8b6298da2a86.

Thanks Guilherme Junqueira for the report and Tim Graham for the review.

Backport of 359370a8b8ca0efe99b1d4630b291ec060b69225 from master",False
57b95fedad5e0b83fc9c81466b7d1751c6427aae,fb56038723950d9230a7e5fce4d3ee96954b80e8,"[1.11.x] Added stub release notes for 1.11.10.

Backport of cea5fe94c6bb1b61e791f1375c246566c950b3e3 from master",False
57b95fedad5e0b83fc9c81466b7d1751c6427aae,308f64462421b09b21ef0dcd9cc3654cc25bceba,"[1.11.x] Fixed #28645 -- Reallowed AuthenticationForm to raise the inactive user error when using ModelBackend.

Regression in e0a3d937309a82b8beea8f41b17d8b6298da2a86.

Thanks Guilherme Junqueira for the report and Tim Graham for the review.

Backport of 359370a8b8ca0efe99b1d4630b291ec060b69225 from master",False
57b95fedad5e0b83fc9c81466b7d1751c6427aae,fb56038723950d9230a7e5fce4d3ee96954b80e8,"[1.11.x] Added stub release notes for 1.11.10.

Backport of cea5fe94c6bb1b61e791f1375c246566c950b3e3 from master",False
17084839fd7e267da5729f2a27753322b9d415a0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,054c2e4af390c083a33c5a19093efd47def780de,"Fixed #6852 -- Converted the admin to use the new paginator, to remove DeprecationWarnings. Thanks for the patch, nickefford

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7363 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,054c2e4af390c083a33c5a19093efd47def780de,"Fixed #6852 -- Converted the admin to use the new paginator, to remove DeprecationWarnings. Thanks for the patch, nickefford

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7363 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,30241385d538a9d6abb89ff9f74dfd5a424c7a87,"Fixed #9252 -- Moved the try/except protecting against incorrect lookup params to where the error is now raised, and added a test for this case.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9245 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,1f84630c87f8032b0167e6db41acaf50ab710879,"Fixed #6470: made the admin use a URL resolver.

This *is* backwards compatible, but `admin.site.root()` has been deprecated. The new style is `('^admin/', include(admin.site.urls))`; users will need to update their code to take advantage of the new customizable admin URLs.

Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9739 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,7bc0878922d9d93ab8f4ef8a5c5ba7a1c671279f,"Fixed #8939: added a `list_editable` option to `ModelAdmin`; fields declared `list_editable` may be edited, in bulk, on the changelist page. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10077 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,1f84630c87f8032b0167e6db41acaf50ab710879,"Fixed #6470: made the admin use a URL resolver.

This *is* backwards compatible, but `admin.site.root()` has been deprecated. The new style is `('^admin/', include(admin.site.urls))`; users will need to update their code to take advantage of the new customizable admin URLs.

Thanks to Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9739 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,7bc0878922d9d93ab8f4ef8a5c5ba7a1c671279f,"Fixed #8939: added a `list_editable` option to `ModelAdmin`; fields declared `list_editable` may be edited, in bulk, on the changelist page. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10077 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,30241385d538a9d6abb89ff9f74dfd5a424c7a87,"Fixed #9252 -- Moved the try/except protecting against incorrect lookup params to where the error is now raised, and added a test for this case.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9245 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
17084839fd7e267da5729f2a27753322b9d415a0,44f3080226888eb709cc6e027321647964ebe64e,"Fixed #10505: added support for bulk admin actions, including a globally-available ""delete selected"" action. See the documentation for details.

This work started life as Brian Beck's ""django-batchadmin."" It was rewritten for inclusion in Django by Alex Gaynor, Jannis Leidel (jezdez), and Martin Mahner (bartTC). Thanks, guys!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10121 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da051da8df5e69944745072611351d4cfc6435d5,4fa7f3cdd9bcf50ec4c7f64a31c1dfc02c375f46,Fix #20022: Correctly handle prefixes with url-unsafe characters in reverse().,False
da051da8df5e69944745072611351d4cfc6435d5,90e530978d590a5bdcf75525aa03f844766018b8,"Fixed #18210 -- Escaped special characters in reverse prefixes.

Ensured that special characters passed in to reverse via the
prefix argument are properly escaped so that calls to
django.utils.regex_helpers.normalize and/or string formatting
operations don't result in exceptions.

Thanks to toofishes for the error report.",False
da051da8df5e69944745072611351d4cfc6435d5,15b0158e393544bd215688f257ab03604cd07950,"Fixed #9038 -- Correctly handle URL patterns with the same name (or view name),
declared independently and that differ only by argument signatures.

Patch from Russell Keith-Magee.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da051da8df5e69944745072611351d4cfc6435d5,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
da051da8df5e69944745072611351d4cfc6435d5,4fa7f3cdd9bcf50ec4c7f64a31c1dfc02c375f46,Fix #20022: Correctly handle prefixes with url-unsafe characters in reverse().,False
da051da8df5e69944745072611351d4cfc6435d5,90e530978d590a5bdcf75525aa03f844766018b8,"Fixed #18210 -- Escaped special characters in reverse prefixes.

Ensured that special characters passed in to reverse via the
prefix argument are properly escaped so that calls to
django.utils.regex_helpers.normalize and/or string formatting
operations don't result in exceptions.

Thanks to toofishes for the error report.",False
da051da8df5e69944745072611351d4cfc6435d5,15b0158e393544bd215688f257ab03604cd07950,"Fixed #9038 -- Correctly handle URL patterns with the same name (or view name),
declared independently and that differ only by argument signatures.

Patch from Russell Keith-Magee.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9087 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
da051da8df5e69944745072611351d4cfc6435d5,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
da051da8df5e69944745072611351d4cfc6435d5,31b5275235bac150a54059db0288a19b9e0516c7,Fixed #13260 -- Quoted arguments interpolated in URLs in reverse.,False
da051da8df5e69944745072611351d4cfc6435d5,31b5275235bac150a54059db0288a19b9e0516c7,Fixed #13260 -- Quoted arguments interpolated in URLs in reverse.,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fba7962baca98a18698a58be4c700d8766e2b2ce,"[4.1.x] Set date and added stub notes for 4.1.2, 4.0.8, and 3.2.16 releases.

Backport of c2bc71b635e3ca637b6920f30fb3dcc92037cee2 and
f08651c06cb5fe5a6181354e053bf82fe8d68f16 from main.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fba7962baca98a18698a58be4c700d8766e2b2ce,"[4.1.x] Set date and added stub notes for 4.1.2, 4.0.8, and 3.2.16 releases.

Backport of c2bc71b635e3ca637b6920f30fb3dcc92037cee2 and
f08651c06cb5fe5a6181354e053bf82fe8d68f16 from main.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fba7962baca98a18698a58be4c700d8766e2b2ce,"[4.1.x] Set date and added stub notes for 4.1.2, 4.0.8, and 3.2.16 releases.

Backport of c2bc71b635e3ca637b6920f30fb3dcc92037cee2 and
f08651c06cb5fe5a6181354e053bf82fe8d68f16 from main.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
9d656ea51d9ea7105c0c0785783ac29d426a7d25,fba7962baca98a18698a58be4c700d8766e2b2ce,"[4.1.x] Set date and added stub notes for 4.1.2, 4.0.8, and 3.2.16 releases.

Backport of c2bc71b635e3ca637b6920f30fb3dcc92037cee2 and
f08651c06cb5fe5a6181354e053bf82fe8d68f16 from main.",False
02e6592835b4559909aa3aaaf67988fef435f624,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
02e6592835b4559909aa3aaaf67988fef435f624,622e37ca6dbaa1e39bf939f4f261daef095253ad,"[3.1.x] Added stub release notes for 3.1.6.

Backport of 966ed414b2adfc9ecc26a9d529dec99d94262cd9 from master",False
02e6592835b4559909aa3aaaf67988fef435f624,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
02e6592835b4559909aa3aaaf67988fef435f624,622e37ca6dbaa1e39bf939f4f261daef095253ad,"[3.1.x] Added stub release notes for 3.1.6.

Backport of 966ed414b2adfc9ecc26a9d529dec99d94262cd9 from master",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
5f1ffb07afc1e59729ce2b283124116d6c0659e4,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
5f1ffb07afc1e59729ce2b283124116d6c0659e4,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
5f1ffb07afc1e59729ce2b283124116d6c0659e4,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
5f1ffb07afc1e59729ce2b283124116d6c0659e4,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
96d84047715ea1715b4bd1594e46122b8a77b9e2,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,6d88d47be6d37234aab86d0e863e371f28347d12,"Fixed #20832 -- Enabled HTML password reset email

Added optional html_email_template_name parameter to password_reset view
and PasswordResetForm.",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
96d84047715ea1715b4bd1594e46122b8a77b9e2,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9ec9936413a906e71ce79d1ce7d26df865891a95,"Updated csrf docs with 'versionadded' info


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9ec9936413a906e71ce79d1ce7d26df865891a95,"Updated csrf docs with 'versionadded' info


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,c0f9e85fbe616a38255cd568fc5f2f0a870586ea,"Split CsrfMiddleware into two to make it more reusable.

Also converted it to be a view middleware instead of request,
as this allows more options.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9553 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,f7242bb778d63e09aebaf5318244a886f123a1e0,"Added tests for CsrfMiddleware.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,f7242bb778d63e09aebaf5318244a886f123a1e0,"Added tests for CsrfMiddleware.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,c0f9e85fbe616a38255cd568fc5f2f0a870586ea,"Split CsrfMiddleware into two to make it more reusable.

Also converted it to be a view middleware instead of request,
as this allows more options.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9553 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,f7242bb778d63e09aebaf5318244a886f123a1e0,"Added tests for CsrfMiddleware.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,f7242bb778d63e09aebaf5318244a886f123a1e0,"Added tests for CsrfMiddleware.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9551 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,e9b90d98998da48d4ac18aabe135fa4200547be5,"Edited ref/contrib/csrf.txt changes from [9554]

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9593 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9a2e33810789017dfb2cbe46afa01f3f45357757,"Made CSRF middleware skip post-processing for 'csrf_exempt' decorated views.

This commit also decomposes the decorator into two decorators which can be
used separately, adds some tests, updates docs and fixes some code comments.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@9815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,9eedc7bd0b21c936a30f000ba876dbcf5c0bed50,"New CsrfMiddleware features: automatic exceptions for known AJAX and decorator for manual exceptions


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
408c5c873ce1437c7eee9544ff279ecbad7e150a,8eecb95ec8824f8e6ce89fa7a96e094db906a0f5,"Added CsrfMiddleware to contrib, and documentation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@2868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,3c8568a7dcb38aaa5aceec4f20c3ec3f0217a50d,"Fixed #10271, #10281 --  Fixed the handling multiple inline models that share a common base class and have the link to the inline parent on the base class. Includes modifications that allow the equivalent handling for GenericFields. Thanks to Idan Gazit, Antti Kaihola (akaihola), and Alex Gaynor for their work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10017 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,3c8568a7dcb38aaa5aceec4f20c3ec3f0217a50d,"Fixed #10271, #10281 --  Fixed the handling multiple inline models that share a common base class and have the link to the inline parent on the base class. Includes modifications that allow the equivalent handling for GenericFields. Thanks to Idan Gazit, Antti Kaihola (akaihola), and Alex Gaynor for their work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10017 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9face54bb7e8e906a5097b0f1215f59f91181f28,"Fixed #9284. Fixed #8813. BaseModelFormSet now calls ModelForm.save().
This is backwards-incompatible if you were doing things to 'initial' in BaseModelFormSet.__init__, or if you relied on the internal _total_form_count or _initial_form_count attributes of BaseFormSet. Those attributes are now public methods.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10190 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,ae95edf91df4eb47c25f262a77749538b37d357e,"Fixed #11138 -- Corrected the description of behavior related to the max_num parameter for model formsets.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,6ad26e6acc34134752d8728bf6dc6e592883bbfa,"Fixed #10845 -- Clarified the examples for using ModelForms with fields or exclude specified. Thanks to Andrew Durdin for the suggestion.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9bb1fa725154e6d1d0317fa0c48d7c240ad5e2d4,"Fixed #9223 -- Added support for declarative widgets to ModelForm. I declare thanks to isagalaev.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12194 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,ae95edf91df4eb47c25f262a77749538b37d357e,"Fixed #11138 -- Corrected the description of behavior related to the max_num parameter for model formsets.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,6ad26e6acc34134752d8728bf6dc6e592883bbfa,"Fixed #10845 -- Clarified the examples for using ModelForms with fields or exclude specified. Thanks to Andrew Durdin for the suggestion.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10972 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9bb1fa725154e6d1d0317fa0c48d7c240ad5e2d4,"Fixed #9223 -- Added support for declarative widgets to ModelForm. I declare thanks to isagalaev.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12194 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,65b380e74ab79ee011f7556e342dd4d656b018a5,"Fixed #11418 -- formset.cleaned_data no longer raises AttributeError when is_valid is True. Thanks mlavin!

This also introduces a slightly backwards-incompatible change in
FormSet's behavior, see the release docs for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14667 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,d216ff9b922aa246be5d199401494946f4a37ff7,"Fixed #12295 -- Issue had already been fixed, but added test. Thanks tomevans222 and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15158 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,26fabdb218c464286ff14ca2dda70e62a1b0a654,"Fixed #9531 -- Fixed some awkward wording in the docs. Thanks, gsf.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,26fabdb218c464286ff14ca2dda70e62a1b0a654,"Fixed #9531 -- Fixed some awkward wording in the docs. Thanks, gsf.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9434 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,a0bae6ebb8105bfe649b21b001ab0b19dce59b2c,"Updated formset docs to contain the new management form field for max_num values.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12373 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9face54bb7e8e906a5097b0f1215f59f91181f28,"Fixed #9284. Fixed #8813. BaseModelFormSet now calls ModelForm.save().
This is backwards-incompatible if you were doing things to 'initial' in BaseModelFormSet.__init__, or if you relied on the internal _total_form_count or _initial_form_count attributes of BaseFormSet. Those attributes are now public methods.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10190 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,9d8f41baac6b3ca56c7732a2f93e15cda494a1ea,"Made the semi-private _max_form_count live on the public API of formsets by renaming it to max_num. This also removes the ManagementForm use of MAX_COUNT since that usage should just be referenced to the formset's max_num property. Refs #7899. Thanks Peter of the Norse for straightening me out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8058 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,65b380e74ab79ee011f7556e342dd4d656b018a5,"Fixed #11418 -- formset.cleaned_data no longer raises AttributeError when is_valid is True. Thanks mlavin!

This also introduces a slightly backwards-incompatible change in
FormSet's behavior, see the release docs for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14667 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,8bafde1229fdebb48383449de9bcadde06451816,"Migrated forms (minus localflavor) doctests. A huge thanks to Daniel Lindsley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14570 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,d216ff9b922aa246be5d199401494946f4a37ff7,"Fixed #12295 -- Issue had already been fixed, but added test. Thanks tomevans222 and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15158 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d7094bbce8cb838f3b40f504f198c098ff1cf727,aba95dcc0b5370ffac3d3b701c3ca7782ee999c1,"Fixed #13023 - Removed ambiguity with regard to the max_num option of formsets and as a result of admin inlines. Thanks to Gabriel Hurley for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12872 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,7ec5962638144cbf4c2e47ea7d8dc02d1ce44394,"[3.0.x] Added stub release notes for 3.0.1.

Backport of 908c67e719a54b8b612cb7df732126f42350f3fa from master",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,f4baf2fdf67136fb24fa88faa0cb3efb31b8125f,"[3.0.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,f4baf2fdf67136fb24fa88faa0cb3efb31b8125f,"[3.0.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,7ec5962638144cbf4c2e47ea7d8dc02d1ce44394,"[3.0.x] Added stub release notes for 3.0.1.

Backport of 908c67e719a54b8b612cb7df732126f42350f3fa from master",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,f4baf2fdf67136fb24fa88faa0cb3efb31b8125f,"[3.0.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master",False
302a4ff1e8b1c798aab97673909c7a3dfda42c26,f4baf2fdf67136fb24fa88faa0cb3efb31b8125f,"[3.0.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master",False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
9e19accb6e0a00ba77d5a95a91675bf18877c72d,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,3717e3bba331af184a411a3781483aba8a11987a,"Reverted #8688 for now, since it merely introduced different bugs, rather than
fixing the problem. We have a plan B (and plan C, if needed), so this will be
fixed in a different way.

Refs #8616.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,9d83444f16c7e289881dca132c5f4f3f8e58d05c,"Fixed #6984 -- Make sure to load session data from the file (if necessary)
prior to truncating it during a save.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8344 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,3717e3bba331af184a411a3781483aba8a11987a,"Reverted #8688 for now, since it merely introduced different bugs, rather than
fixing the problem. We have a plan B (and plan C, if needed), so this will be
fixed in a different way.

Refs #8616.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,9d83444f16c7e289881dca132c5f4f3f8e58d05c,"Fixed #6984 -- Make sure to load session data from the file (if necessary)
prior to truncating it during a save.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8344 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,eebc7caa6380096f5a8402db9a6e4a324585551b,"Fixed #8616 (again): prevent a race condition in the session file backend. Many thanks to Warren Smith for help and the eventual fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8750 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2e47f3e401c29bc2ba5ab794d483cb0820855fb9,eebc7caa6380096f5a8402db9a6e4a324585551b,"Fixed #8616 (again): prevent a race condition in the session file backend. Many thanks to Warren Smith for help and the eventual fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8750 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,925c711cf75072526ced0ae8f18d561dca612092,"Fixed #2503 -- Fixed HttpResponse.delete_cookie() to work properly. It now takes path and domain as optional keyword arguments.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,991bb6124206a503545f5963e5048af45b1751eb,"Fixed #736 -- Changed behavior of QueryDict items() to be more consistent, fixed mutability holes, gave MultiValueDict many more dictionary methods and added unit tests. Thanks, Kieran Holland. This is slightly backwards-incompatible if you happened to rely on the behavior of QueryDict.items(), which is highly unlikely.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1504 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4100eab823202a26a7b8227d9b2d1a8c7811c1d7,"Fixed the breakage in [6164] in a different, better way: HttpResponse now implements __contains__ along with __get/set/delitem__, as it should. This is a bit more robust, and should prevent similar breakage from user code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e2b4eddc11b391bc0047032776e9ca7c2f9328b3,Used the decorator syntax for properties in django.http,False
4001ec8698f577b973c5a540801d8a0bbea1205b,0ce6636102d9e1c8c158c0e3eadb5a5db6b06a71,"Fixed #17277 - Wrap IOErrors raised due to client disconnect in a specific IOError subclass so they can be distinguished from more serious errors. Thanks David Lowe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2659429df46d0d79ad7a93d50d0ccdab45b55b53,"Fixed edge case that breaks the test suite on versions of Python > 2.6.4

Before http://svn.python.org/view?view=rev&revision=74647 it was possible to
pass a SimpleCookie to load, but this no longer works due to a different bug
in Python the said revision fixed.

My guess is a SimpleCookie was never intended to be passed through load which
is perfectly reasonable.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,db2f9bfae173b565215a9f7320d7a45d0532f2fe,"Fixed #16178 - Cleanup request classes' `__repr__()`

Thanks to julien for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,136752ca9a87be908f9ec1e398bbd56b0c75222c,"Added 'method' attribute to HttpRequest objects

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,87e6939372790662752e227557415d3f4e180992,"Fixed #10267 -- Correctly handle IRIs in HttpResponse.build_absolute_uri().

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bce890ace4a97ab7a7a9b918f1452c6592d9b08e,"Fixed #16584 -- Fixed a bunch of typos in code comments. Thanks, Bernhard Essl.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e60c26d5bb9960866700eccd3392711e523a90e6,"Fixed #5562 -- Changed settings of Expires heading when expiring a cookie to
work with non-compliant browsers (also removes a non-compliance feature of our
own). Thanks, caifen1985@gmail.com and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6549 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5bdf1da730368a16beaa077d91457ff625f06bc4,"Fixed #394 -- Trailing-slash redirects now retain duplicate name-value query-string pairs, instead of the first of each pair. Added a QueryDict.urlencode() method to accomplish this. Updated the docs. Thanks for the good catch, mlambert

git-svn-id: http://code.djangoproject.com/svn/django/trunk@613 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ca07fda2efea24cb43423b884fa4648d44e52963,"[py3] Switched to Python 3-compatible imports.

xrange/range will be dealt with in a separate commit due to the huge
number of changes.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bfb4ed1425adb38e5c7b57a2aa9ab5479fc2123c,"Negligible spacing fixes to comments in django/http/__init__.py

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,23f94f0741100233862922a8e77a3ac9dc1833e9,Fixed #18561 -- Made HttpResponse.tell() support non-ascii chars,False
4001ec8698f577b973c5a540801d8a0bbea1205b,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3bb340271ceb5ac398a2386f64f7e903571bc8ac,"Changed settings imports from [2639] to use 'from django.conf import settings', to make it easier to merge to magic-removal

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c3d7aad6d0911bb84120d7c8d41923c895784b21,"Fixed #2560 -- Add close() support to HttpResponse iterators. Thanks, Ivan
Sagalaev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3791 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,646f2f6101cda3e20908928de44739dfff596b0f,"Fixed #7494 -- Fixed build_absolute_url() for some types of (uncommon) URLs.
Patch from tom@almostobsolete.net and RobotAdam.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8490 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dd799591fc9f6ab0d988e0dc82f47276bdab6b2a,"Backwards-incompatible change: renamed HttpResponse.headers to HttpResponse._headers to deliberately break anyone accessing headers directly instead of through the case-insensitive proxies on HttpResponse itself. See BackwardsIncompatibleChanges for more details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8bb46d8b7c808bb366c7e15c46e5476e2b2b51a1,"Fixed #15679 - regression in HttpRequest.POST and raw_post_data access.

Thanks to vkryachko for the report.

This also fixes a slight inconsistency with raw_post_data after parsing of a
multipart request, and adds a test for that.  (Previously accessing
raw_post_data would have returned the empty string rather than raising an
Exception).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15938 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f2477b6450afb99b5c34c54cfd121ddfbabc904e,"Fixed #7233 -- Ensured that QueryDict classes are always unpicklable. This
problem only arose on some systems, since it depends upon the order in which
the attributes are pickled. Makes reliable testing kind of tricky.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d393e1bd979984dbafa8fd040aae6223209565e,[py3] Fixed HTTP header serialization,False
4001ec8698f577b973c5a540801d8a0bbea1205b,c8e2f7591d6ea3545aeb32fa4c92cbeb9a622546,"Fixed #17931 -- Accepted aware datetimes to set cookies expiry dates. Thanks jaddison for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,706659d2bb6af350903a5b5ee9d1e09f95f6a9a3,"Changed the way we handle HTTP headers internally so that they appear
case-insensitive, but the original case is preserved for output. This increases the chances of working with non-compliant clients without changing the external interface. Fixed #2970.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6546 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,89e0e8b6bc861bb95e55bd5e255e756fe3be1cf2,"Fixed our SimpleCookie overriding and use to be compatible with a (potential) stdlib SimpleCookie that fixes http://bugs.python.org/issue2193

The previous code tested the stdlib in a way that would always fail. It then
used an overridden SimpleCookie.load method that wouldn't work for the
stdlib. And it did some completely unnecessary monkey patching.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16485 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,363dbd920e9b77da83895598f0fc9f7f835df65d,[py3] Fixed contrib.formtools tests,False
4001ec8698f577b973c5a540801d8a0bbea1205b,b2d2cb4a314e4d084d7d726752c93afb18c55b4e,"Improved unicode-type, ASCII-convertible header handling in
HttpResponse.

Fixed #8765. Thanks to SmileyChris and semenov for working on this one.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bc4638d722c0e48cfd6bc4d8084b41445f987004,"Fixed #1569 -- HttpResponse now accepts iterators. Thanks, Maniac

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2639 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9780247a4c21f36f67ee636482399e306154f0bc,"Removed an unnecessary default argument in one __deepcopy__() method and fixed
up the one place that was mistakenly relying on that.

Refs #6308.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3dc1ede8718056cf107abf06f6f213cbe23374c8,"Fixed #236 -- Added HttpResponse.delete_cookie() method.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@668 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,23d34597615d8209de72bd819539a696ba0d1e7f,"Fixed #17965 -- Definitely dropped support for Python 2.5. Thanks jonash for the initial patch and Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17834 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f9982c5c08f02699dddf097986a6b3bed54bf5a5,"Fixed #4270 -- Don't permit deleting of items from an immutable QueryDict.
Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,c35501a1280e02638c0e5bf2530cb48e15a68ad0,[py3] Fixed HttpResponse when initialized with bytes,False
4001ec8698f577b973c5a540801d8a0bbea1205b,d796c94b03ffbe90895ec68c5041806907cb9577,[py3] Used six.reraise wherever necessary.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,0afbca9c60206d5005243cb961ff813f2cd6dbf3,"Fixed #3526 -- Added content_type as an alias for mimetype to the HttpResponse constructor. It's a slightly more accurate name. Based on a patch from Simon Willison. Fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9b07b5edeb770b037dc735d48dfd6f979422f586,"Fixed #18916 -- Allowed non-ASCII headers.

Thanks Malcolm Tredinnick for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,396fcaaef92b6e5e56175b883c2cf6fcbda7ae97,"Remove all relative imports.  We have always been at war with relative imports.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17009 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9ed4217a57efc498e60bb3a2a10c57acc1ee6962,"Fixed #4337 -- Added pop() method to QueryDict. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5289 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2d4da641a6ee6c96f38336d8dc6786c07e7b3a1f,"Allow setting HttpResponse cookie expiry times with datetime objects.

Patch from SmileyChris. Fixed #7770.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5f2d9cdbb1b1a8c91dcdd55e672801536711b5ef,[py3] Fixed another regression from 2892cb0ec4.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ca9388cdaf905e12560c751ca55f8237303e4494,"Added more dict-like methods to HttpResponse as part of the response.headers -> response._headers move, and fixed a few direct uses of response.headers in Django itself. Thanks to PhiR for tracking down and slaying these bugs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6235 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,804154b9e00e1789cdfed97f3619a146a1da1d5d,"Small importing change in django.utils.httpwrappers. Refs #736.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,214d88ce86e6257437bf2702ea6ef60e0ae23fad,"Fixed #1646 -- Added HttpResponseNotAllowed, as suggested by Ian Holsman.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3144 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dfa29161e2eff676eb4aa187f76c157556dfc5db,"Fixed #14020 -- Made the `HttpResponse` class slightly more behave like a dictionary, allowing the alternative argument to be unset. Serious thanks to schmichael and moopet.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16417 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,7cfe8e8fce7677ec696f42a7d1501a97e8191a3d,"Fixed #11340 -- Prevented HttpResponseNotModified to have content/content-type

The HTTP 1.1 spec tells that the 304 response MUST NOT contain a
message body.
Thanks aparajita for the report.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a025b75f6c3021ab400224250defa2db37b8122c,[py3] Fixed iterlists usage in QueryDict,False
4001ec8698f577b973c5a540801d8a0bbea1205b,9305c0e12d43c4df999c3301a1f0c742264a657e,"Fixed a security issue related to password resets

Full disclosure and new release are forthcoming",False
4001ec8698f577b973c5a540801d8a0bbea1205b,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,155ab07a5d40f5e0a426423cb8df3868a37a02f8,"Fixed #10188: prevent newlines in HTTP headers. Thanks, bthomas.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10711 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2892cb0ec4ebde4955f12c92183b7804558ca381,"[py3] Fixed regression introduced in 536b030363.

Refs #18764.

Reverted 536b030363 and switched to a more explicit way of avoiding
calling bytes(<int>).

This definitely deserves a refactoring. Specifically, _get_content
should just return b''.join(self). Unfortunately that's impossible
with the current tests.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b6ec8d3a9ef9315a947535bf99f5e92ae40ce99e,"Changed HttpResponse.get() to lower case the header value before looking it up. This makes it consistent will other header accesses. Fixed #5754, #5772.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6537 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,da200c5e35cdbb617572977bcbf97fae33920b2e,"Fixed #16519 -- Deprecated mimetype kwarg of HttpResponse __init__

This keyword was already deprecated in the code (supported for
backwards compatibility only), but never formally deprecated.
Thanks Paul McMillan for the report and yasar11732 for the initial
patch.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dfd4a7175119ddb422d8426dcc15902265d5a428,"Fixed #5611 -- Restricted accepted content types in parsing POST data

Thanks paulegan for the report and Preston Holmes for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,1b745be5a1c16d6f807113013ff6234e74f1b6ec,"Fixed a typo from [6164].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,0ecdad8593356086ccb9365323e0718337bb2b18,"Moved parse_sql import in django.utils.httpwrappers to the top of the module, not inside QueryDict.__init__()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1503 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,880e3cfaa6040bb745ecfdbd91be0234cdb87278,"Backed out the changes in [5482] for a bit whilst some more investigation into
side-effects is done. Refs #4565.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5511 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e9a236d86c82133ab1959e4ea4760ebe6f73bd8e,"Fixed #2092: added a ""is_secure()"" method to HttpRequest which correctly handles the subtleties of mod_python's interaction with os.environ.  This one's been bugging me for about a *year*, so many many thanks to k.shaposhnikov@gmail.com for figuring it out, and Tim Shaffer for pointing out this ticket.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3410 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5b762ca8e7e3e85ba35738f0919ed48d5e23e69c,"A few styling fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7205 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3c6609ac0cbf367f2c9f166c0001d4d18a7e9ca2,"Refactored the HttpResponse sub-classes so that adding a subclass that only
changes the HTTP status code requires less code (no need to duplicate the
__init__ method).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4865 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5c09c59bc76510a5388623259b3827ee894cd66b,"[py3] Renamed `next` to `__next__` in iterators.

See PEP 3114. `next` is retained as an alias for Python 2.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3ff5b993d361b4a0c8903022d7e894b99696657d,"Fixed #1539 in trunk

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3f003a3c4b5338915e3889da8bf10577296459b3,"Fixed #17323 -- Renamed HttpRequest.raw_post_data to request.body. Thanks for the patch, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17210 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d6f0f26508eea4a16adc4de613777b82701fd31,"Fixed #6657 -- Don't set secure attribute on cookie if `secure=False` is passed, thanks Gulopine.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9908201d7fc3340b83db21298033c5b347f38d65,"Replaced some byte strings by str() calls

This is a useful trick when Python 2 awaits byte strings and
Python 3 Unicode (regular) strings.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,fc6649092aae5667ee6ed9b16ed81ebbe41a7bf4,"Fixed an inconsistancy in redirects with `META['SERVER_PORT']` being either a string or an int.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8666 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bfcecbffd37a68b5fffe81954c17aedeacb1ba22,"Changed/fixed the way Django handles SCRIPT_NAME and PATH_INFO (or
equivalents). Basically, URL resolving will only use the PATH_INFO and the
SCRIPT_NAME will be prepended by reverse() automatically. Allows for more
portable development and installation. Also exposes SCRIPT_NAME in the
HttpRequest instance.

There are a number of cases where things don't work completely transparently,
so mod_python and fastcgi users should read the relevant docs.

Fixed #285, #1516, #3414.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8015 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,03f1eb23e5c39e130744f885d480b2aa70d93088,"Fixed #5956 -- Added a better error description for non-ASCII HTTP headers.  Patch from jvloothuis.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
4001ec8698f577b973c5a540801d8a0bbea1205b,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f6c991667f6f1ab8d2fd2afc1ee2b5801e78b7e3,"Fixed #4992 -- Respect the GET request query string when creating cache keys. Thanks PeterKz and guettli for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15705 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,6a643b03d7af5777c0729ee62d35a080158fc8af,"Fixed #3875 -- Added HttpResponseBadRequest. Thanks, Scott Barr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4866 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,269e921756371bee6d35a967bc2ffe84d1ae39eb,"Fixed #9886 -- Added a file-like interface to HttpRequest. Thanks to Ivan Sagalaev for the suggestion and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f60d42846365b2bf2f1c9bc7a3007c303122a20b,"Fixed #12417 -- Added signing functionality, including signing cookies. Many thanks to Simon, Stephan, Paul and everyone else involved.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,50255e33053714ec3b363cf39e2d9a7f4b0ed83c,"Fixed #16494 by normalizing HttpResponse behavior with non-string input. HttpResponse now always converts content to string on output, regardless of input type.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16829 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c159374a33caee14d9903de58a9f4fe879e5741c,"Fixed #15852 -- Modified cookie parsing so it can handle duplicate invalid cookie names. Thanks goes to Fredrik Stålnacke for the report and to vung for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,7dc8b1a1a8a8e2771f37568a125fd51a3283b043,"Added a parameter to HttpResponse's constructor to enable explicit status code
setting. This will save us from being asked to add a subclass for every
possible HTTP status code.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c0537a961fcf412ff284a838e4394fc537c14dcf,"Fixed #6616 -- Added an is_ajax() method to HttpRequest that uses the de facto
standard header for detecting an XmlHttpRequest call. Thanks, Daniel Lindsley.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7334 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8f002867b2aa414c4f98bbd7992e3b44825b228a,"Cleaned up the QueryDict implementation.

- Use super().
- Don't poke at internals.
- Don't override methods for no reason.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ebc773ada3e4f40cf5084268387b873d7fe22e8b,"Replaced many smart_bytes by force_bytes

In all those occurrences, we didn't care about preserving the
lazy status of the strings, but we really wanted to obtain a
real bytestring.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,d7dfab59ead97b35c6f6786784225f377783e376,"Replaced cStringIO.StringIO by io.BytesIO.

Also replaced StringIO.StringIO by BytesIO in some other appropriate
places. StringIO is not available in Python 3.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,6d029359e955a6a5fd7e4024ddd9159004c30d20,"Fixed bug with our SimpleCookie regarding load/custom Morsel, and simplified implementation

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16526 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e04230e2e406dcf74eeec8d3c95c84362c7da780,"[py3] Ported django.http according to PEP 3333.

Perfomed some style cleanup while I was in the area.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3180f932369e3a6a1604c5ea98ee7063eeeaf1dd,"Fixed #13572: copies of QueryDicts now have their encoding set correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13314 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a935d436e9e11e1801ca5e9421a055e1f04eb125,"Fixed #15863 - SimpleCookies are not correctly serialized with the file or database cache backends

Thanks to rakuco for the report and for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17200 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ad077ccbc03f11c3db3951aab110ec98c5907729,"Fixed #5445: added some compatibility code for the lack of __iter__ in Jython 2.2. Thanks, Leo Soto.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6211 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8d9982c5a572358f0f3fc3402766ce9e3a06d90c,"Fixed #4815 -- Fixed decoding of request parameters when the input encoding is
not UTF-8. Thanks, Jordan Dimov.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5644 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e70d7e60640e280f8d410d41c1f9cb6195483c4e,"Fixed #987 -- Convert relative URI portions into absolute URIs in HTTP Location headers. Based on a patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,925c711cf75072526ced0ae8f18d561dca612092,"Fixed #2503 -- Fixed HttpResponse.delete_cookie() to work properly. It now takes path and domain as optional keyword arguments.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3545 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,991bb6124206a503545f5963e5048af45b1751eb,"Fixed #736 -- Changed behavior of QueryDict items() to be more consistent, fixed mutability holes, gave MultiValueDict many more dictionary methods and added unit tests. Thanks, Kieran Holland. This is slightly backwards-incompatible if you happened to rely on the behavior of QueryDict.items(), which is highly unlikely.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1504 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4100eab823202a26a7b8227d9b2d1a8c7811c1d7,"Fixed the breakage in [6164] in a different, better way: HttpResponse now implements __contains__ along with __get/set/delitem__, as it should. This is a bit more robust, and should prevent similar breakage from user code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e2b4eddc11b391bc0047032776e9ca7c2f9328b3,Used the decorator syntax for properties in django.http,False
4001ec8698f577b973c5a540801d8a0bbea1205b,0ce6636102d9e1c8c158c0e3eadb5a5db6b06a71,"Fixed #17277 - Wrap IOErrors raised due to client disconnect in a specific IOError subclass so they can be distinguished from more serious errors. Thanks David Lowe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2659429df46d0d79ad7a93d50d0ccdab45b55b53,"Fixed edge case that breaks the test suite on versions of Python > 2.6.4

Before http://svn.python.org/view?view=rev&revision=74647 it was possible to
pass a SimpleCookie to load, but this no longer works due to a different bug
in Python the said revision fixed.

My guess is a SimpleCookie was never intended to be passed through load which
is perfectly reasonable.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,db2f9bfae173b565215a9f7320d7a45d0532f2fe,"Fixed #16178 - Cleanup request classes' `__repr__()`

Thanks to julien for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16350 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,136752ca9a87be908f9ec1e398bbd56b0c75222c,"Added 'method' attribute to HttpRequest objects

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3164 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,87e6939372790662752e227557415d3f4e180992,"Fixed #10267 -- Correctly handle IRIs in HttpResponse.build_absolute_uri().

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bce890ace4a97ab7a7a9b918f1452c6592d9b08e,"Fixed #16584 -- Fixed a bunch of typos in code comments. Thanks, Bernhard Essl.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16598 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e60c26d5bb9960866700eccd3392711e523a90e6,"Fixed #5562 -- Changed settings of Expires heading when expiring a cookie to
work with non-compliant browsers (also removes a non-compliance feature of our
own). Thanks, caifen1985@gmail.com and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6549 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5bdf1da730368a16beaa077d91457ff625f06bc4,"Fixed #394 -- Trailing-slash redirects now retain duplicate name-value query-string pairs, instead of the first of each pair. Added a QueryDict.urlencode() method to accomplish this. Updated the docs. Thanks for the good catch, mlambert

git-svn-id: http://code.djangoproject.com/svn/django/trunk@613 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ca07fda2efea24cb43423b884fa4648d44e52963,"[py3] Switched to Python 3-compatible imports.

xrange/range will be dealt with in a separate commit due to the huge
number of changes.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bfb4ed1425adb38e5c7b57a2aa9ab5479fc2123c,"Negligible spacing fixes to comments in django/http/__init__.py

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,23f94f0741100233862922a8e77a3ac9dc1833e9,Fixed #18561 -- Made HttpResponse.tell() support non-ascii chars,False
4001ec8698f577b973c5a540801d8a0bbea1205b,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3bb340271ceb5ac398a2386f64f7e903571bc8ac,"Changed settings imports from [2639] to use 'from django.conf import settings', to make it easier to merge to magic-removal

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2640 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c3d7aad6d0911bb84120d7c8d41923c895784b21,"Fixed #2560 -- Add close() support to HttpResponse iterators. Thanks, Ivan
Sagalaev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3791 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,646f2f6101cda3e20908928de44739dfff596b0f,"Fixed #7494 -- Fixed build_absolute_url() for some types of (uncommon) URLs.
Patch from tom@almostobsolete.net and RobotAdam.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8490 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dd799591fc9f6ab0d988e0dc82f47276bdab6b2a,"Backwards-incompatible change: renamed HttpResponse.headers to HttpResponse._headers to deliberately break anyone accessing headers directly instead of through the case-insensitive proxies on HttpResponse itself. See BackwardsIncompatibleChanges for more details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6225 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8bb46d8b7c808bb366c7e15c46e5476e2b2b51a1,"Fixed #15679 - regression in HttpRequest.POST and raw_post_data access.

Thanks to vkryachko for the report.

This also fixes a slight inconsistency with raw_post_data after parsing of a
multipart request, and adds a test for that.  (Previously accessing
raw_post_data would have returned the empty string rather than raising an
Exception).

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15938 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dceaa82dec9f97ac77754dfdc737852d8171c8a2,"Fixed #14809 -- broken login related tests after r14733.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f2477b6450afb99b5c34c54cfd121ddfbabc904e,"Fixed #7233 -- Ensured that QueryDict classes are always unpicklable. This
problem only arose on some systems, since it depends upon the order in which
the attributes are pickled. Makes reliable testing kind of tricky.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8460 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d393e1bd979984dbafa8fd040aae6223209565e,[py3] Fixed HTTP header serialization,False
4001ec8698f577b973c5a540801d8a0bbea1205b,c8e2f7591d6ea3545aeb32fa4c92cbeb9a622546,"Fixed #17931 -- Accepted aware datetimes to set cookies expiry dates. Thanks jaddison for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17766 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,706659d2bb6af350903a5b5ee9d1e09f95f6a9a3,"Changed the way we handle HTTP headers internally so that they appear
case-insensitive, but the original case is preserved for output. This increases the chances of working with non-compliant clients without changing the external interface. Fixed #2970.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6546 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,89e0e8b6bc861bb95e55bd5e255e756fe3be1cf2,"Fixed our SimpleCookie overriding and use to be compatible with a (potential) stdlib SimpleCookie that fixes http://bugs.python.org/issue2193

The previous code tested the stdlib in a way that would always fail. It then
used an overridden SimpleCookie.load method that wouldn't work for the
stdlib. And it did some completely unnecessary monkey patching.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16485 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,363dbd920e9b77da83895598f0fc9f7f835df65d,[py3] Fixed contrib.formtools tests,False
4001ec8698f577b973c5a540801d8a0bbea1205b,b2d2cb4a314e4d084d7d726752c93afb18c55b4e,"Improved unicode-type, ASCII-convertible header handling in
HttpResponse.

Fixed #8765. Thanks to SmileyChris and semenov for working on this one.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bc4638d722c0e48cfd6bc4d8084b41445f987004,"Fixed #1569 -- HttpResponse now accepts iterators. Thanks, Maniac

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2639 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9780247a4c21f36f67ee636482399e306154f0bc,"Removed an unnecessary default argument in one __deepcopy__() method and fixed
up the one place that was mistakenly relying on that.

Refs #6308.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3dc1ede8718056cf107abf06f6f213cbe23374c8,"Fixed #236 -- Added HttpResponse.delete_cookie() method.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@668 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,23d34597615d8209de72bd819539a696ba0d1e7f,"Fixed #17965 -- Definitely dropped support for Python 2.5. Thanks jonash for the initial patch and Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17834 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e84f79f05113f546810c1908c7baef99fb1e874a,"Fixed #18042 -- Advanced deprecation warnings.

Thanks Ramiro for the patch.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f9982c5c08f02699dddf097986a6b3bed54bf5a5,"Fixed #4270 -- Don't permit deleting of items from an immutable QueryDict.
Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5187 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,c35501a1280e02638c0e5bf2530cb48e15a68ad0,[py3] Fixed HttpResponse when initialized with bytes,False
4001ec8698f577b973c5a540801d8a0bbea1205b,d796c94b03ffbe90895ec68c5041806907cb9577,[py3] Used six.reraise wherever necessary.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,0afbca9c60206d5005243cb961ff813f2cd6dbf3,"Fixed #3526 -- Added content_type as an alias for mimetype to the HttpResponse constructor. It's a slightly more accurate name. Based on a patch from Simon Willison. Fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9b07b5edeb770b037dc735d48dfd6f979422f586,"Fixed #18916 -- Allowed non-ASCII headers.

Thanks Malcolm Tredinnick for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,396fcaaef92b6e5e56175b883c2cf6fcbda7ae97,"Remove all relative imports.  We have always been at war with relative imports.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17009 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9ed4217a57efc498e60bb3a2a10c57acc1ee6962,"Fixed #4337 -- Added pop() method to QueryDict. Thanks, Gary Wilson.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5289 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2d4da641a6ee6c96f38336d8dc6786c07e7b3a1f,"Allow setting HttpResponse cookie expiry times with datetime objects.

Patch from SmileyChris. Fixed #7770.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5f2d9cdbb1b1a8c91dcdd55e672801536711b5ef,[py3] Fixed another regression from 2892cb0ec4.,False
4001ec8698f577b973c5a540801d8a0bbea1205b,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ca9388cdaf905e12560c751ca55f8237303e4494,"Added more dict-like methods to HttpResponse as part of the response.headers -> response._headers move, and fixed a few direct uses of response.headers in Django itself. Thanks to PhiR for tracking down and slaying these bugs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6235 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,804154b9e00e1789cdfed97f3619a146a1da1d5d,"Small importing change in django.utils.httpwrappers. Refs #736.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1502 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f6aa469b1da50228b7e082c4ac0ecbe57575a373,"Fixed #13007 -- Made cookie parsing resilent to the presence of cookies with invalid characters in their names. Thanks Warlax for the report, Ubercore for his work on a fix and Jannis and Luke for review and guidance.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15523 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a1ffb021072026ad58546609cd2c34f737fd26cc,"Fixed #18029 -- Removed mod_python as of deprecation process. Thanks Aymeric Augustin for the review.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17835 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,214d88ce86e6257437bf2702ea6ef60e0ae23fad,"Fixed #1646 -- Added HttpResponseNotAllowed, as suggested by Ian Holsman.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3144 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dfa29161e2eff676eb4aa187f76c157556dfc5db,"Fixed #14020 -- Made the `HttpResponse` class slightly more behave like a dictionary, allowing the alternative argument to be unset. Serious thanks to schmichael and moopet.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16417 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,7cfe8e8fce7677ec696f42a7d1501a97e8191a3d,"Fixed #11340 -- Prevented HttpResponseNotModified to have content/content-type

The HTTP 1.1 spec tells that the 304 response MUST NOT contain a
message body.
Thanks aparajita for the report.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a025b75f6c3021ab400224250defa2db37b8122c,[py3] Fixed iterlists usage in QueryDict,False
4001ec8698f577b973c5a540801d8a0bbea1205b,9305c0e12d43c4df999c3301a1f0c742264a657e,"Fixed a security issue related to password resets

Full disclosure and new release are forthcoming",False
4001ec8698f577b973c5a540801d8a0bbea1205b,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,155ab07a5d40f5e0a426423cb8df3868a37a02f8,"Fixed #10188: prevent newlines in HTTP headers. Thanks, bthomas.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10711 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,2892cb0ec4ebde4955f12c92183b7804558ca381,"[py3] Fixed regression introduced in 536b030363.

Refs #18764.

Reverted 536b030363 and switched to a more explicit way of avoiding
calling bytes(<int>).

This definitely deserves a refactoring. Specifically, _get_content
should just return b''.join(self). Unfortunately that's impossible
with the current tests.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b6ec8d3a9ef9315a947535bf99f5e92ae40ce99e,"Changed HttpResponse.get() to lower case the header value before looking it up. This makes it consistent will other header accesses. Fixed #5754, #5772.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6537 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,da200c5e35cdbb617572977bcbf97fae33920b2e,"Fixed #16519 -- Deprecated mimetype kwarg of HttpResponse __init__

This keyword was already deprecated in the code (supported for
backwards compatibility only), but never formally deprecated.
Thanks Paul McMillan for the report and yasar11732 for the initial
patch.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,dfd4a7175119ddb422d8426dcc15902265d5a428,"Fixed #5611 -- Restricted accepted content types in parsing POST data

Thanks paulegan for the report and Preston Holmes for the review.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,1b745be5a1c16d6f807113013ff6234e74f1b6ec,"Fixed a typo from [6164].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6167 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,0ecdad8593356086ccb9365323e0718337bb2b18,"Moved parse_sql import in django.utils.httpwrappers to the top of the module, not inside QueryDict.__init__()

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1503 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,880e3cfaa6040bb745ecfdbd91be0234cdb87278,"Backed out the changes in [5482] for a bit whilst some more investigation into
side-effects is done. Refs #4565.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5511 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e9a236d86c82133ab1959e4ea4760ebe6f73bd8e,"Fixed #2092: added a ""is_secure()"" method to HttpRequest which correctly handles the subtleties of mod_python's interaction with os.environ.  This one's been bugging me for about a *year*, so many many thanks to k.shaposhnikov@gmail.com for figuring it out, and Tim Shaffer for pointing out this ticket.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3410 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5b762ca8e7e3e85ba35738f0919ed48d5e23e69c,"A few styling fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7205 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3c6609ac0cbf367f2c9f166c0001d4d18a7e9ca2,"Refactored the HttpResponse sub-classes so that adding a subclass that only
changes the HTTP status code requires less code (no need to duplicate the
__init__ method).


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4865 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,5c09c59bc76510a5388623259b3827ee894cd66b,"[py3] Renamed `next` to `__next__` in iterators.

See PEP 3114. `next` is retained as an alias for Python 2.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3ff5b993d361b4a0c8903022d7e894b99696657d,"Fixed #1539 in trunk

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3f003a3c4b5338915e3889da8bf10577296459b3,"Fixed #17323 -- Renamed HttpRequest.raw_post_data to request.body. Thanks for the patch, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17210 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d6f0f26508eea4a16adc4de613777b82701fd31,"Fixed #6657 -- Don't set secure attribute on cookie if `secure=False` is passed, thanks Gulopine.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,61f0aff811aa596fa62136852c59d47f988d1185,"Fixed #14597 -- Added a SECURE_PROXY_SSL_HEADER setting for cases when you're behind a proxy that 'swallows' the fact that a request is HTTPS

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17209 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,9908201d7fc3340b83db21298033c5b347f38d65,"Replaced some byte strings by str() calls

This is a useful trick when Python 2 awaits byte strings and
Python 3 Unicode (regular) strings.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,fc6649092aae5667ee6ed9b16ed81ebbe41a7bf4,"Fixed an inconsistancy in redirects with `META['SERVER_PORT']` being either a string or an int.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8666 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,bfcecbffd37a68b5fffe81954c17aedeacb1ba22,"Changed/fixed the way Django handles SCRIPT_NAME and PATH_INFO (or
equivalents). Basically, URL resolving will only use the PATH_INFO and the
SCRIPT_NAME will be prepended by reverse() automatically. Allows for more
portable development and installation. Also exposes SCRIPT_NAME in the
HttpRequest instance.

There are a number of cases where things don't work completely transparently,
so mod_python and fastcgi users should read the relevant docs.

Fixed #285, #1516, #3414.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8015 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,03f1eb23e5c39e130744f885d480b2aa70d93088,"Fixed #5956 -- Added a better error description for non-ASCII HTTP headers.  Patch from jvloothuis.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
4001ec8698f577b973c5a540801d8a0bbea1205b,78be884ea788835ad98ad433862a82cf192c3d4f,"Fixed #3304 -- Added support for HTTPOnly cookies. Thanks to arvin for the suggestion, and rodolfo for the draft patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f6c991667f6f1ab8d2fd2afc1ee2b5801e78b7e3,"Fixed #4992 -- Respect the GET request query string when creating cache keys. Thanks PeterKz and guettli for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15705 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,6a643b03d7af5777c0729ee62d35a080158fc8af,"Fixed #3875 -- Added HttpResponseBadRequest. Thanks, Scott Barr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4866 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,269e921756371bee6d35a967bc2ffe84d1ae39eb,"Fixed #9886 -- Added a file-like interface to HttpRequest. Thanks to Ivan Sagalaev for the suggestion and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14394 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f60d42846365b2bf2f1c9bc7a3007c303122a20b,"Fixed #12417 -- Added signing functionality, including signing cookies. Many thanks to Simon, Stephan, Paul and everyone else involved.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,50255e33053714ec3b363cf39e2d9a7f4b0ed83c,"Fixed #16494 by normalizing HttpResponse behavior with non-string input. HttpResponse now always converts content to string on output, regardless of input type.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@16829 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c159374a33caee14d9903de58a9f4fe879e5741c,"Fixed #15852 -- Modified cookie parsing so it can handle duplicate invalid cookie names. Thanks goes to Fredrik Stålnacke for the report and to vung for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,7dc8b1a1a8a8e2771f37568a125fd51a3283b043,"Added a parameter to HttpResponse's constructor to enable explicit status code
setting. This will save us from being asked to add a subclass for every
possible HTTP status code.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5554 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c0537a961fcf412ff284a838e4394fc537c14dcf,"Fixed #6616 -- Added an is_ajax() method to HttpRequest that uses the de facto
standard header for detecting an XmlHttpRequest call. Thanks, Daniel Lindsley.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7334 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8f002867b2aa414c4f98bbd7992e3b44825b228a,"Cleaned up the QueryDict implementation.

- Use super().
- Don't poke at internals.
- Don't override methods for no reason.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ebc773ada3e4f40cf5084268387b873d7fe22e8b,"Replaced many smart_bytes by force_bytes

In all those occurrences, we didn't care about preserving the
lazy status of the strings, but we really wanted to obtain a
real bytestring.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,d7dfab59ead97b35c6f6786784225f377783e376,"Replaced cStringIO.StringIO by io.BytesIO.

Also replaced StringIO.StringIO by BytesIO in some other appropriate
places. StringIO is not available in Python 3.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,42c31f6bf036efd93c0311bc1f524b1553c20489,"Rationalised CompatCookie/SimpleCookie into single SimpleCookie class with all fixes.

Since upstream Python has fixed the encoding bug (see
http://bugs.python.org/issue9824), we don't want a separate class for this
bug fix, or several layers for the different fixes.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15298 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,6d029359e955a6a5fd7e4024ddd9159004c30d20,"Fixed bug with our SimpleCookie regarding load/custom Morsel, and simplified implementation

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16526 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,e04230e2e406dcf74eeec8d3c95c84362c7da780,"[py3] Ported django.http according to PEP 3333.

Perfomed some style cleanup while I was in the area.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3180f932369e3a6a1604c5ea98ee7063eeeaf1dd,"Fixed #13572: copies of QueryDicts now have their encoding set correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13314 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,a935d436e9e11e1801ca5e9421a055e1f04eb125,"Fixed #15863 - SimpleCookies are not correctly serialized with the file or database cache backends

Thanks to rakuco for the report and for the tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17200 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,ad077ccbc03f11c3db3951aab110ec98c5907729,"Fixed #5445: added some compatibility code for the lack of __iter__ in Jython 2.2. Thanks, Leo Soto.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6211 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8d9982c5a572358f0f3fc3402766ce9e3a06d90c,"Fixed #4815 -- Fixed decoding of request parameters when the input encoding is
not UTF-8. Thanks, Jordan Dimov.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5644 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
4001ec8698f577b973c5a540801d8a0bbea1205b,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
4001ec8698f577b973c5a540801d8a0bbea1205b,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
4001ec8698f577b973c5a540801d8a0bbea1205b,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4001ec8698f577b973c5a540801d8a0bbea1205b,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,035cb99b47d8580b2619788fb08eed9cf7968590,"Make the requests test use unittest2, rather than the system unittest.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14487 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,58d555caf527d6f1bdfeab14527484e4cca68648,"Fixed #16822 -- Added RawPostDataException

Thanks jaylett for the patch.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,cfcf4b3605f9653e4e056088d89932b2a0e4281b,"Stopped using django.utils.unittest in the test suite.

Refs #20680.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,11284a63d48c84f1d60b5686d55cf8a9f8d64422,"Fixed #18314 -- Corrected request.build_absolute_uri() handling of paths starting with //

``HttpRequest.build_absolute_uri()`` now correctly handles paths starting with ``//``.
``WSGIRequest`` now doesn't remove all the leading slashes either,
because ``http://test/server`` and http://test//server`` aren't the same thing
(RFC2396).

Thanks to SmileyChris for the initial patch.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,035cb99b47d8580b2619788fb08eed9cf7968590,"Make the requests test use unittest2, rather than the system unittest.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14487 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,58d555caf527d6f1bdfeab14527484e4cca68648,"Fixed #16822 -- Added RawPostDataException

Thanks jaylett for the patch.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,cfcf4b3605f9653e4e056088d89932b2a0e4281b,"Stopped using django.utils.unittest in the test suite.

Refs #20680.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,11284a63d48c84f1d60b5686d55cf8a9f8d64422,"Fixed #18314 -- Corrected request.build_absolute_uri() handling of paths starting with //

``HttpRequest.build_absolute_uri()`` now correctly handles paths starting with ``//``.
``WSGIRequest`` now doesn't remove all the leading slashes either,
because ``http://test/server`` and http://test//server`` aren't the same thing
(RFC2396).

Thanks to SmileyChris for the initial patch.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,d63ee2097f4d0f0094e8e472de2236558e98a348,"Migrated requests doctests. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,02dda22832d313bde18798b2f5f1e9120a849815,"Don't use : as an invalid cookie character

Since http://bugs.python.org/issue2193 has been resolved in favour of
the colon in cookie names, we need to test invalid cookie removal using
a different character. ""@"" is still considered invalid by all sources.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,c91667338a4e774e2819ccf4da852dc7b759bc19,"Fixed #19357 -- Allow non-ASCII chars in filesystem paths

Thanks kujiu for the report and Aymeric Augustin for the review.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,3c45fb8589bfff580bb4d9d3c13172183c597abd,"Fixed #10491 -- Allowed passing lazy objects to HttpResponseRedirect.

Thanks liangent for the report.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
6118ab7d0676f0d622278e5be215f14fb5410b6a,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,0242134d32aa99a54442211ed05576b7061866d1,"Fixed #17942 -- Added a JsonResponse class to more easily create JSON encoded responses.

Thanks leahculver for the suggestion and Erik Romijn,
Simon Charette, and Marc Tamlyn for the reviews.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,c91667338a4e774e2819ccf4da852dc7b759bc19,"Fixed #19357 -- Allow non-ASCII chars in filesystem paths

Thanks kujiu for the report and Aymeric Augustin for the review.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,3c45fb8589bfff580bb4d9d3c13172183c597abd,"Fixed #10491 -- Allowed passing lazy objects to HttpResponseRedirect.

Thanks liangent for the report.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
6118ab7d0676f0d622278e5be215f14fb5410b6a,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,0242134d32aa99a54442211ed05576b7061866d1,"Fixed #17942 -- Added a JsonResponse class to more easily create JSON encoded responses.

Thanks leahculver for the suggestion and Erik Romijn,
Simon Charette, and Marc Tamlyn for the reviews.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,d63ee2097f4d0f0094e8e472de2236558e98a348,"Migrated requests doctests. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,02dda22832d313bde18798b2f5f1e9120a849815,"Don't use : as an invalid cookie character

Since http://bugs.python.org/issue2193 has been resolved in favour of
the colon in cookie names, we need to test invalid cookie removal using
a different character. ""@"" is still considered invalid by all sources.",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,a8b70d251d238b4e6cfc7bb4296da15494f8dff3,"[1.8.x] Sorted imports with isort; refs #23860.

Backport of 0ed7d155635da9f79d4dd67e4889087d3673c6da from master",False
6118ab7d0676f0d622278e5be215f14fb5410b6a,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
1828f4341ec53a8684112d24031b767eba557663,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,2ca980195653a754a1c4726f5bb253147c6cb329,"Fixed #17810. Catch session key errors.

Catches memcached session key errors related to overly long session keys.
This is a long-standing bug, but severity was exacerbated by the addition
of cookie-backed session storage, which generates long session values. If
an installation switched from cookie-backed session store to memcached,
users would not be able to log in because of the server error from overly
long memcached keys.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
1828f4341ec53a8684112d24031b767eba557663,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,c11f9c3193901215ec79732af6ab6c66b3c1c2ba,"Optimized the cached_db session backend to check if a key exists in the cache first.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17156 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,2ca980195653a754a1c4726f5bb253147c6cb329,"Fixed #17810. Catch session key errors.

Catches memcached session key errors related to overly long session keys.
This is a long-standing bug, but severity was exacerbated by the addition
of cookie-backed session storage, which generates long session values. If
an installation switched from cookie-backed session store to memcached,
users would not be able to log in because of the server error from overly
long memcached keys.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
1828f4341ec53a8684112d24031b767eba557663,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bda21e2b9d19f435d841a5ff9f8f636ae843842d,"Fixed #11555 -- Made SessionBase.session_key read-only. Cleaned up code slightly. Refs #13478.

This also removes the implicit initialization of the session key on the first access in favor of explicit initialization.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@17155 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,299e1e814fa7c5f8033872213b8876fc12fcd7be,"Fixed #6791: added a write-through cache session backend: session data is written through the cache to the database, but read from the cache for speed. Thanks to jhenry, mcroydon, and jdunck.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9727 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,ed9cd4fd8b425ab5010b27aefc7ef6e50d55fb54,Fixed #21000 -- Made cached_db session backend respect SESSION_CACHE_ALIAS,False
1828f4341ec53a8684112d24031b767eba557663,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
1828f4341ec53a8684112d24031b767eba557663,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,9e423b51e325c9226e2f744bfa52336a626bf63a,"Fixed #8314 -- Fixed an infinite loop caused when submitting a session key (via
a cookie) with no corresponding entry in the database.

This only affected the database backend, but I've applied the same fix to all
three backends for robustness.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8351 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,fb590bfa9bfdeb622677187552cae707f379c7b1,"Replaced `has_key()` calls with `in` to ease Python 3 port. Thanks, Martin von Löwis.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16740 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,ae75958820e344357ea716fcdbd5e56f06a00b24,"Fixed #5501 -- Fixed Python 2.3 and 2.4 incompatibility. Thanks, brosner.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,041e24dbde48a38e539f85c378842849f7dc00a1,"Fixed a subtle corner case whereby sending a bad session ID generates new (unused) session entries in the database table.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7001 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,ed9cd4fd8b425ab5010b27aefc7ef6e50d55fb54,Fixed #21000 -- Made cached_db session backend respect SESSION_CACHE_ALIAS,False
1828f4341ec53a8684112d24031b767eba557663,04b00b668d0d56c37460cbed19671f4b1b5916c3,"Fixed #19200 -- Session expiry with cached_db

Also did a little bit of cleanup.",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,33076af6f2aa5285b3a70246e14163b901b512f7,"Corrected an issue which could allow attackers to manipulate session data using the cache. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16759 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,af7b6475ca6ab12df6b91beae1bb5b1c29a5782b,"Added guaranteed atomic creation of new session objects. Slightly backwards
incompatible for custom session backends.

Whilst we were in the neighbourhood, use a larger range of session key values
to save a small amount of time and use the hardware-base random numbers where
available (transparently falls back to pseudo-RNG otherwise).

Fixed #1080


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1828f4341ec53a8684112d24031b767eba557663,5eece23296c481fc2f8b896b7d41e71bebe6114e,"Converted sessions tests from doctest to unittest.

Also made the FileSession backend consistent with other backends in one
corner case uncovered by the conversion, namely that the backend should
create a new key if the one passed in is invalid.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13482 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,21f333bcefccc151d6439246f8203d609ab6ca79,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4cfbde71a33973cb8c8da406b2523dfc742358e7,"Fixed #12027 -- Fixed EmailValidator to reject a trailing dot.

Thanks Klas H for the report and claudep for the patch.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,3904b74a3f2f92fefe1d39281ed683c52f2fef03,"Fixed #18013 -- Use the new 'as' syntax for exceptions.

Thanks Clueless for the initial patch.
Note that unittest has been purposely left out (external package only used by Python 2.6).",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,900816464dbd7b1fcc009177f9de03791edc6e88,[py3] Re-decoded string after idna encoding,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,66436ad171d8c442037bb03e9bc1a0f99e194ac8,"Fixed #16166 - `EmailField` does not comply with SMTP standard

Thanks to qqq1one@yahoo.com for the report, and samufuentes for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16355 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,aa5d307da65cb0933172c9640efeb44d94323be5,"Fixed #17100 -- Typo in the regex for EmailValidator. Thanks reames AT asymmetricventures com for the report and Claude Paroz for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17349 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,273b96ef9d3acb25d69e206555412774abab6022,"Fixed #17867 -- Made email validation pass with IDN domains

Thanks Pierre Matri for the report and the initial patch.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2c8267bf3db608b99c04ae903c424b60cafaaf93,Fixed #17899 -- Rewrote [Ee]-mail to [Ee]mail,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,7f5d9ad661d65a869cd72b736250936a942d5d2b,"Fixed #9764 - Updated EmailField and URLField to support IDN (Internationalized Domain Names). Thanks, UloPe.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12474 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,5f287f75f2277ba821dcf5c444ab12d8eff6cce3,"Altered the behavior of URLField to avoid a potential DOS vector, and to avoid potential leakage of local filesystem data. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,21f333bcefccc151d6439246f8203d609ab6ca79,Fix #17751: Added stripping of whitespace for IPAddressField/GenericIPAddressField,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4cfbde71a33973cb8c8da406b2523dfc742358e7,"Fixed #12027 -- Fixed EmailValidator to reject a trailing dot.

Thanks Klas H for the report and claudep for the patch.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,5ae0c933a8572c173401386f9037901e6b5fff2b,Fixed errors introduced in 21f333bcefccc151d6439246f8203d609ab6ca79. Refs #17751,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2b157b0adc5cbe4fb0161f8319aca809b32eeae0,"[py3] Fixed slug regex

In Python 3, \w matches any Unicode character.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2a66d12e77821fbd4f2e4c3cb93eb9f84ca6f9ab,"[1.7.x] Fixed #22579 -- Corrected validation for email to reject trailing slash

Backport of 424fe76349a2e34eafef13c2450a7a1f4d3115a6 from master.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,5ae0c933a8572c173401386f9037901e6b5fff2b,Fixed errors introduced in 21f333bcefccc151d6439246f8203d609ab6ca79. Refs #17751,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2b157b0adc5cbe4fb0161f8319aca809b32eeae0,"[py3] Fixed slug regex

In Python 3, \w matches any Unicode character.",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,4e2e8f39d19d79a59c2696b2c40cb619a54fa745,Fixed #4833 -- Validate email addresses with localhost as domain,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,98f13762d7e18c0ba12044eed56e9198ca056c66,Fixed #22123 -- EmailValidator now also accepts IPv6 literals in addresses,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,8e1226b4a00a0d26752b26d0ebf21ff8c5a247ad,"Kill some more dead code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16795 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ae49b4d994656bc037513dcd064cb9ce5bb85649,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
ae49b4d994656bc037513dcd064cb9ce5bb85649,2a66d12e77821fbd4f2e4c3cb93eb9f84ca6f9ab,"[1.7.x] Fixed #22579 -- Corrected validation for email to reject trailing slash

Backport of 424fe76349a2e34eafef13c2450a7a1f4d3115a6 from master.",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,7989a78baf2c613cc3b75b923f12d178c9bbeb08,"Fixed #13000 - Use a dictionary for the error messages definition in user creation and change form. Thanks for the patch, lgs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12785 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,2619dc828510cf36791fcf87705d2f9ce3176c86,"Fixed #14674 -- Prevent user accounts with an unusable password from resetting passwords. Thanks, summerisgone, thejaswi_puthraya and lrekucki.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16455 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,7d71a9e45fa85bff15501057b69440b4dfae688d,"Fixed #9213 - Added check to prevent inactive users from resetting their password. Thanks to John Scott for report and draft patch, and Evgeny Fadeev for final patch with test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15805 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,bf65fd0a8050891cf4155eef8dbbe3d364699748,"Fixed #8901 -- Corrected typo in docstring. Thanks to Hayley Bonham <djangocode@vortex.cx> for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8207 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c8015052d935a99a5c8f96434b2d0cd16d8a4e14,"Fixed #5786: relaxed the validation for usernames to allow more common characters '@', etc.

This is really just a stop-gap until we come up with a improved way of handling
disparate auth data, but it should help us stretch a bit more milage out of the
current system.

Thanks to alextreme, lbruno, and clayg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,7989a78baf2c613cc3b75b923f12d178c9bbeb08,"Fixed #13000 - Use a dictionary for the error messages definition in user creation and change form. Thanks for the patch, lgs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12785 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,2619dc828510cf36791fcf87705d2f9ce3176c86,"Fixed #14674 -- Prevent user accounts with an unusable password from resetting passwords. Thanks, summerisgone, thejaswi_puthraya and lrekucki.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16455 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,7d71a9e45fa85bff15501057b69440b4dfae688d,"Fixed #9213 - Added check to prevent inactive users from resetting their password. Thanks to John Scott for report and draft patch, and Evgeny Fadeev for final patch with test.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15805 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,bf65fd0a8050891cf4155eef8dbbe3d364699748,"Fixed #8901 -- Corrected typo in docstring. Thanks to Hayley Bonham <djangocode@vortex.cx> for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8207 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c8015052d935a99a5c8f96434b2d0cd16d8a4e14,"Fixed #5786: relaxed the validation for usernames to allow more common characters '@', etc.

This is really just a stop-gap until we come up with a improved way of handling
disparate auth data, but it should help us stretch a bit more milage out of the
current system.

Thanks to alextreme, lbruno, and clayg.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,991d3d6c12296b381959ae86e74fd505604daeac,"Slightly improved the help text for the ""Password"" field in the `auth.User` admin form, and PEP8-cleaned up the area while I was there.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17326 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,dce820ff70f00e974afd3e6e310aa825bc55319f,"Renovated password hashing. Many thanks to Justine Tunney for help with the initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,991d3d6c12296b381959ae86e74fd505604daeac,"Slightly improved the help text for the ""Password"" field in the `auth.User` admin form, and PEP8-cleaned up the area while I was there.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17326 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,dce820ff70f00e974afd3e6e310aa825bc55319f,"Renovated password hashing. Many thanks to Justine Tunney for help with the initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17253 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,c4470e5ced090075adbef36b98b051c5a53f7a2e,"Make use of new ability to override admin add form templates and removed a litle bit of redundancy in the templates.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12218 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3f3d887a6844ec2db743fee64c9e53e04d39a368,8dff194e9b22e05c4146798c7b00bbf48af80213,"Fixed #3062 - removed arbitrary and unneeded max_length on password fields in auth forms.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8180 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5f0829a27e85d89ad8c433f5c6a7a7d17c9e9292,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,4a1d25b39f8265178f72c90a1bd5fce583babd54,"[2.2.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,4a1d25b39f8265178f72c90a1bd5fce583babd54,"[2.2.x] Added stub release notes for security releases.

Backport of 98c0fe19ee2cba9726708ac9336e1dc0d43cca69 from master",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
afddabf8428ddc89a332f7a78d0d21eaf2b5a673,1c9ca83db2a73e8eb920fb50a2f1ee9a8228bcbf,"Fixed #8169 -- Honor attrs from subclasses of the new admin widgets introduced in [8240]. Thanks Alex Gaynor for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8247 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,05d78acb9c87cbf2e7eecf4199483e6f6d09d02a,"[4.1.x] Added stub release notes for 4.1.11 and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,4ee877a7b08d22b5902be15379424b45072580fb,Used super() in DjangoUnicodeDecodeError.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,03281d8fe7a32f580a85235659d4fbb143eeb867,Fixed #26005 -- Fixed some percent decoding cases in uri_to_iri().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,a120fac65a17137bc8ac710477478474e3f9973e,"Introduced force_bytes and force_str.

This is consistent with the smart_* series of functions and it's going
to be used by the next commit.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,8e8c9b908a0fe0d2437fcf3f0378eb2a62b81986,"Fixed getting default encoding in get_system_username

Refs #19933.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,500532c95db40b0b24654be7bb0d76b66b022bd5,Refs #23919 -- Removed default 'utf-8' argument for str.encode()/decode().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,4ee877a7b08d22b5902be15379424b45072580fb,Used super() in DjangoUnicodeDecodeError.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,03281d8fe7a32f580a85235659d4fbb143eeb867,Fixed #26005 -- Fixed some percent decoding cases in uri_to_iri().,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,a120fac65a17137bc8ac710477478474e3f9973e,"Introduced force_bytes and force_str.

This is consistent with the smart_* series of functions and it's going
to be used by the next commit.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,8e8c9b908a0fe0d2437fcf3f0378eb2a62b81986,"Fixed getting default encoding in get_system_username

Refs #19933.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,1e6b9e29e64fc9f13d4680be141c64d24eb92cc9,"Refs #27795 -- Removed an unnecessary force_bytes() call in uri_to_iri().

The value returned from urllib.parse.quote() is always a string, so can
safely call .encode().",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,05d78acb9c87cbf2e7eecf4199483e6f6d09d02a,"[4.1.x] Added stub release notes for 4.1.11 and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,3c6ac0bab8bfaf1f1bb79a8b6a7a36533666908c,Consolidated some text utils into the utils_tests test package.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,10b17a22bec2eaf44c3315614aea87c127caee46,"Fixed #19508 -- Implemented uri_to_iri as per RFC.

Thanks Loic Bistuer for helping in shaping the patch and Claude Paroz
for the review.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,05d78acb9c87cbf2e7eecf4199483e6f6d09d02a,"[4.1.x] Added stub release notes for 4.1.11 and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,76ed1c49f804d409cfc2911a890c78584db3c76e,"Fixed CVE-2019-14235 -- Fixed potential memory exhaustion in django.utils.encoding.uri_to_iri().

Thanks to Guido Vranken for initial report.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,05d78acb9c87cbf2e7eecf4199483e6f6d09d02a,"[4.1.x] Added stub release notes for 4.1.11 and 3.2.21.

Backport of 24f1a38b37c0af3a5ce0dd7b5392fe4e75d7e1dc from main.",False
ba00bc5ec6a7eff5e08be438f7b5b0e9574e8ff0,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
8339277518c7d8ec280070a780915304654e3b66,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
8339277518c7d8ec280070a780915304654e3b66,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
8339277518c7d8ec280070a780915304654e3b66,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
8339277518c7d8ec280070a780915304654e3b66,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
8339277518c7d8ec280070a780915304654e3b66,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
8339277518c7d8ec280070a780915304654e3b66,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
8339277518c7d8ec280070a780915304654e3b66,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
8339277518c7d8ec280070a780915304654e3b66,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
8339277518c7d8ec280070a780915304654e3b66,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
8339277518c7d8ec280070a780915304654e3b66,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
a91436360b79a6ff995c3e5018bcc666dfaf1539,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a91436360b79a6ff995c3e5018bcc666dfaf1539,1572a3d4b2dd4afd004765ba73a2c38b311b65ee,"Fixed #10931 -- Made `Truncator` handle newlines properly. Thanks to gsong and Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17329 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
a91436360b79a6ff995c3e5018bcc666dfaf1539,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
a91436360b79a6ff995c3e5018bcc666dfaf1539,ac4faa6dc33407c93566884e53fa5d8ef44c0a2a,"Fixed #19693 -- Made truncatewords_html handle self-closing tags

Thanks sneawo for the report and Jonathan Loy for the patch.",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6d334a0ca54f2f8b3cce28070367110497d8d82c,"[4.1.x] Added stub release notes for 4.1.9 and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6d334a0ca54f2f8b3cce28070367110497d8d82c,"[4.1.x] Added stub release notes for 4.1.9 and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6d334a0ca54f2f8b3cce28070367110497d8d82c,"[4.1.x] Added stub release notes for 4.1.9 and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,6d334a0ca54f2f8b3cce28070367110497d8d82c,"[4.1.x] Added stub release notes for 4.1.9 and 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
e7c3a2ccc3a562328600be05068ed9149e12ce64,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,7b0c3d4a11f62bc685b5468e00d8642ef737b10a,"Changed django.VERSION from 0.95 to to 0.96-pre

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3495 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,7b0c3d4a11f62bc685b5468e00d8642ef737b10a,"Changed django.VERSION from 0.95 to to 0.96-pre

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3495 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,76c9258c0ca6302cfc9763c6be89ab438c56cda6,"Bumped django.VERSION to 0.96.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,4d59730fad1fe882ad957b7ad463398329d2c8ea,"Fixed #2934: greatly improved the accuracy if the isExistingURL check.  Also introduced a new setting, URL_VALIDATOR_USER_AGENT, which is the User-Agent that the validator will use to check for URL existance.  Thanks, Jeremy.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4035 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5f2b40d4c9b3df5b6e338293ae8144ffcbbf0dd2,"Fixed #1929 -- Updated version in setup.py from 0.91 to 0.95

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5f2b40d4c9b3df5b6e338293ae8144ffcbbf0dd2,"Fixed #1929 -- Updated version in setup.py from 0.91 to 0.95

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3060 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,49f6d06c2f25467b844d01c206e218550ac1a4bb,"Fixed #3117 -- Changed setup.py to get version from django.VERSION dynamically. Thanks for the patch, ymasuda

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4195 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,da8e722a63ec83350bd8e76fd2cae5742bd1fc22,"Some work on the 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,af1aa1baea3b24e594bb18bf8eadef7acee10b21,"Note non-availability of DATABASE_OPTIONS in mysql_old backend


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4782 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,da8e722a63ec83350bd8e76fd2cae5742bd1fc22,"Some work on the 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,af1aa1baea3b24e594bb18bf8eadef7acee10b21,"Note non-availability of DATABASE_OPTIONS in mysql_old backend


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4782 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,c858dfa217e34f4549f3373fd4dbfbb705f37be6,"Minor reordering of sections in 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4799 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,da8e722a63ec83350bd8e76fd2cae5742bd1fc22,"Some work on the 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,76c9258c0ca6302cfc9763c6be89ab438c56cda6,"Bumped django.VERSION to 0.96.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,4d59730fad1fe882ad957b7ad463398329d2c8ea,"Fixed #2934: greatly improved the accuracy if the isExistingURL check.  Also introduced a new setting, URL_VALIDATOR_USER_AGENT, which is the User-Agent that the validator will use to check for URL existance.  Thanks, Jeremy.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4035 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,d5368d341c65a9b0606193f06bb017e51eb71d00,"Fixed #740 -- Abstracted hard-coded slash in utils/translation.py. Thanks, radek. Also cleaned up docstrings a bit.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1095 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,5f39a6a240e4c23a4d8f6a05e10eb64d3a08f05e,"fixes #750 - languages for language-selection can now be restricted by setting LANGUAGES in the projects setting file to some subset of the global_settings provided list.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,49f6d06c2f25467b844d01c206e218550ac1a4bb,"Fixed #3117 -- Changed setup.py to get version from django.VERSION dynamically. Thanks for the patch, ymasuda

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4195 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,2efd343a7cf05d92427d49d85ecf883f9e23d6c9,"Added draft release notes for 0.96 (which should be coming closer...)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4778 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,c858dfa217e34f4549f3373fd4dbfbb705f37be6,"Minor reordering of sections in 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4799 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7dd2dd08a79e388732ce00e2b5514f15bd6d0f6f,da8e722a63ec83350bd8e76fd2cae5742bd1fc22,"Some work on the 0.96 release notes


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4781 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,885dd85b5f7f35cf3266c6552d77f5577bb66828,"Fixed #1785 -- debug view no longer assumes _get_lines_from_file returns None. Thanks, django@binaryfeed.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2864 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,b1603563a3514eeab29780b0f4e5a54d70a7e4ff,"Fixed #822 -- Changed 500 view to use disclosure triangles instead of up/down arrows. Thanks, aaronsw

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1272 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,29c4a578af58f6da7c77830a0ff99260f2338d36,"Fixed #10863 -- Added HTML support to mail_managers() and mail_admins(), and used this to provide more and prettier detail in error emails. Thanks to boxed for the suggestion, and to Rob Hudson and Brodie Rao for their work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,9a82eb6ff109e95dbb6cf26ee3d2ce1c548714bb,"Fixed #14972 -- Ensure that the HTML email logger always produces useful output, regardless of whether it has been given an exception or a request. Thanks to jamstooks for the report, and bpeschier for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
e35a0c56086924f331e9422daa266e907a4784cc,5d863f1fbd26537a8bca2920bc591279d15fbdf1,"Fixed #603 -- Added template debugging errors to pretty error-page output, if TEMPLATE_DEBUG setting is True. Also refactored FilterParser for a significant speed increase and changed the template_loader interface so that it returns information about the loader. Taken from new-admin. Thanks rjwittams and crew

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1379 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,172b50b72224dea985cd665accab2ff3110f6674,"Clearer explanation when exception has no message

""No exception supplied"" is misleading; actually there is an exception,
but there's no message string.",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,5e4e0b6fe97c6c9de8355f8738403691637a0b07,Fixed #22306 -- Deprecated future versions of cycle and firstof template tags.,False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,cc4196a407095b803f0325513c58520ebbff82bb,"Fixed #1059 -- Fixed off-by-one line number in heading of debug error pages.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,116b9d06cc492f1dcc78fce4926799a771555cfd,"Fixed #5974 -- Added autoescaping for source code lines and local variables in
technical debug page.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6704 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,3afa4a462691b537b38222c9869c997a0ff04a21,"Fixed #8178: Cleaned up the rendering of exceptions on the error template. Thanks to Marinho Brandão for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,bc5a7c0dbd05cf02d89d0f9913856a96e0a56b09,"Fixed #11512 -- Corrected unclosed tag in HTML on debug page. Thanks to rlaager for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11276 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,285cc6f101d13ccbf9e6d268402b76e840dfccfc,"Fixed #5046 -- Added 'Unicode error hint' section to debug page in the case of a UnicodeError. Thanks, Thomas Guttler

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5862 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,885dd85b5f7f35cf3266c6552d77f5577bb66828,"Fixed #1785 -- debug view no longer assumes _get_lines_from_file returns None. Thanks, django@binaryfeed.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2864 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,b1603563a3514eeab29780b0f4e5a54d70a7e4ff,"Fixed #822 -- Changed 500 view to use disclosure triangles instead of up/down arrows. Thanks, aaronsw

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1272 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,29c4a578af58f6da7c77830a0ff99260f2338d36,"Fixed #10863 -- Added HTML support to mail_managers() and mail_admins(), and used this to provide more and prettier detail in error emails. Thanks to boxed for the suggestion, and to Rob Hudson and Brodie Rao for their work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,9a82eb6ff109e95dbb6cf26ee3d2ce1c548714bb,"Fixed #14972 -- Ensure that the HTML email logger always produces useful output, regardless of whether it has been given an exception or a request. Thanks to jamstooks for the report, and bpeschier for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
e35a0c56086924f331e9422daa266e907a4784cc,5d863f1fbd26537a8bca2920bc591279d15fbdf1,"Fixed #603 -- Added template debugging errors to pretty error-page output, if TEMPLATE_DEBUG setting is True. Also refactored FilterParser for a significant speed increase and changed the template_loader interface so that it returns information about the loader. Taken from new-admin. Thanks rjwittams and crew

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1379 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,172b50b72224dea985cd665accab2ff3110f6674,"Clearer explanation when exception has no message

""No exception supplied"" is misleading; actually there is an exception,
but there's no message string.",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,5e4e0b6fe97c6c9de8355f8738403691637a0b07,Fixed #22306 -- Deprecated future versions of cycle and firstof template tags.,False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,cc4196a407095b803f0325513c58520ebbff82bb,"Fixed #1059 -- Fixed off-by-one line number in heading of debug error pages.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,116b9d06cc492f1dcc78fce4926799a771555cfd,"Fixed #5974 -- Added autoescaping for source code lines and local variables in
technical debug page.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6704 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,3afa4a462691b537b38222c9869c997a0ff04a21,"Fixed #8178: Cleaned up the rendering of exceptions on the error template. Thanks to Marinho Brandão for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,bc5a7c0dbd05cf02d89d0f9913856a96e0a56b09,"Fixed #11512 -- Corrected unclosed tag in HTML on debug page. Thanks to rlaager for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11276 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,285cc6f101d13ccbf9e6d268402b76e840dfccfc,"Fixed #5046 -- Added 'Unicode error hint' section to debug page in the case of a UnicodeError. Thanks, Thomas Guttler

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5862 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,6bdd3840be63582531c3125a26cd00294e6f8346,"Improved whitespace in debug templates.

Removed extra blank lines in the template text debug template,
and prevented overindentation in the HTML debug template.",False
e35a0c56086924f331e9422daa266e907a4784cc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
e35a0c56086924f331e9422daa266e907a4784cc,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
e35a0c56086924f331e9422daa266e907a4784cc,a56a226241f5808b2eaf1e4b5a155d35047b8a06,"Display a repr-like result for safe-string local variables on the debug page.

Fixed #7697. Thanks, SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,6bdd3840be63582531c3125a26cd00294e6f8346,"Improved whitespace in debug templates.

Removed extra blank lines in the template text debug template,
and prevented overindentation in the HTML debug template.",False
e35a0c56086924f331e9422daa266e907a4784cc,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
e35a0c56086924f331e9422daa266e907a4784cc,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
e35a0c56086924f331e9422daa266e907a4784cc,a56a226241f5808b2eaf1e4b5a155d35047b8a06,"Display a repr-like result for safe-string local variables on the debug page.

Fixed #7697. Thanks, SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e35a0c56086924f331e9422daa266e907a4784cc,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
e35a0c56086924f331e9422daa266e907a4784cc,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
c613af4d6485586c79d692b70a9acac429f3ca9d,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,4b610f42d36a39cd975122ab46f85323844c2c72,"Added a get_host() method to HttpRequest. There is still an http.get_host() version in place, so this is fully backwards compatible.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,64a94691277db17e87614f125d8da78a9995076b,"Fixed #8753: converted ""new in ..."" callouts to proper Sphinx ""versionadded/versionchanged"" directives. Thanks to Marc Fargas for all the heavy lifting here.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8843 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,64a94691277db17e87614f125d8da78a9995076b,"Fixed #8753: converted ""new in ..."" callouts to proper Sphinx ""versionadded/versionchanged"" directives. Thanks to Marc Fargas for all the heavy lifting here.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8843 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,6e201bcae22adcdf6894e56ad7426cc624bf85fd,"[1.2.X] Fixed #11877 -- Documented that HttpRequest.get_host() fails behind multiple reverse proxies, and added an example middleware solution. Thanks to Tom Evans for the report, and arnav for the patch.

Backport of [14493] from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@14494 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,4d8b51f60c78b79186b53b9c55aa7169062603b9,"Fixed #4986 -- Fixed a logic bug from [6166].


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6449 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c613af4d6485586c79d692b70a9acac429f3ca9d,6e201bcae22adcdf6894e56ad7426cc624bf85fd,"[1.2.X] Fixed #11877 -- Documented that HttpRequest.get_host() fails behind multiple reverse proxies, and added an example middleware solution. Thanks to Tom Evans for the report, and arnav for the patch.

Backport of [14493] from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.2.X@14494 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
72e0b033662faa11bb7f516f18a132728aa0ae28,601107524523bca02376a0ddc1a06c6fdb8f22f3,"[1.6.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
72e0b033662faa11bb7f516f18a132728aa0ae28,601107524523bca02376a0ddc1a06c6fdb8f22f3,"[1.6.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,1d61a1eb2a21b550e8e4e63fbb27cbe05ed2aa00,"Fixed #11600 -- Fixed placement of 'View on site' in stacked inline admin template. Thanks, seanbrant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12149 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,85691576649121ff3aaef2bc609282fae0683de4,"Fixed #9276 -- Corrected the way the CSS class is rolled out in a stacked edit-inline template. Thanks to creecode@gmail.com for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9877 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,1d61a1eb2a21b550e8e4e63fbb27cbe05ed2aa00,"Fixed #11600 -- Fixed placement of 'View on site' in stacked inline admin template. Thanks, seanbrant

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12149 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,85691576649121ff3aaef2bc609282fae0683de4,"Fixed #9276 -- Corrected the way the CSS class is rolled out in a stacked edit-inline template. Thanks to creecode@gmail.com for the report and fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9877 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c14937cf7a1e8c25702e89485cc2dd33aa0d3a16,"Fixed #12508 - Added ability to dynamically add inlines in the admin app.

Refs #13. Also introduces an ``empty_form`` attribute on formsets to make it easier to implement dynamic forms.

Many thanks to Zain Memon for the initial patch from his Summer of Code 2009 project, Stanislaus Madueke for his django-dynamic-formset app and all the other people helping out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12297 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,176d20b92a8d2427b68ebf6e6824ded665013d86,"[2.1.x] Fixed #29809 -- Fixed a crash when a ""view only"" user POSTs to the admin user change form.

Backport of a7284cc0c3620030b43034cdf41216c0941bf411 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
103ebe2b5ff1b2614b85a52c239f471904d26244,ad769efa85e0296033572315025fed9fa9aefade,"Expanded tests added when fixing #14529.

To make sure changes in 35d1cd0 don't break anything. Refs #19505.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,550107ff756beeb17b465e98c26c59e3dcc5eb3e,Fixed #25781 -- Simplified admin_views tests with client.force_login(),False
103ebe2b5ff1b2614b85a52c239f471904d26244,ad769efa85e0296033572315025fed9fa9aefade,"Expanded tests added when fixing #14529.

To make sure changes in 35d1cd0 don't break anything. Refs #19505.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,adfd2614045518cc9221aef1f17fd3ffeac3d2cc,"[2.1.x] Fixed typos in comments and docs.

Backport of 97e637a87fb45c4de970cca6cb783d93473c9d15 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5a72589d7acb3abdd62e95bd30eba5ac038861a2,"Fixed #7984 -- 'View on site' links now work in inlines. Thanks philwo for the report and initial patch by julianb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5a72589d7acb3abdd62e95bd30eba5ac038861a2,"Fixed #7984 -- 'View on site' links now work in inlines. Thanks philwo for the report and initial patch by julianb.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5dd68fa74ae6f3f401649c73e0f450b35d291d9c,"Marked a couple of unmarked strings in edit_inline templates and corrected a marked string.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8587 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c2e19e26bc33d34eff57079bd1a6838ff64d9e81,"Fixed #17856 -- Passed obj to get_inline_instances

Thanks ybon, quinode and sjaensch for the patch, and Tim Graham
for the review.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c7a19f42030c15ad3b3475ad9a4854e10733ff74,"Fixed #23857 -- Fixed admin crash with ""save as new"" and deleting inline.

Thanks amarandon for the report.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,f67fb604ea4cebe2dcc2b3bc8d017bdae546a7a5,"Fixed #8341 -- Allow simpler subclassing of ModelAdmin and InlineModelAdmin when overriding get_form and get_formset and needing to pass keyword argument on to the factory functions. Thanks ciantic for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8396 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,8f30556329b64005d63b66859a74752a0b261315,"Renamed Field.rel attribute to remote_field

Field.rel is now deprecated. Rel objects have now also remote_field
attribute. This means that self == self.remote_field.remote_field.

In addition, made the Rel objects a bit more like Field objects. Still,
marked ManyToManyFields as null=True.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3be368c73e8e6696e7cc74421aeb4d06d8e828c8,Fix #20111 Added more precise message level for succcess and warning messages,False
103ebe2b5ff1b2614b85a52c239f471904d26244,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b91787910c9d5a036674d46a73d1b48ca33123a3,"Fixed #20642 -- Deprecated `Option.get_(add|change|delete)_permission`.

Those methods were only used by `contrib.admin` internally and exclusively
related to `contrib.auth`. Since they were undocumented but used
in the wild the raised deprecation warning point to an also undocumented
alternative that lives in `contrib.auth`.

Also did some PEP8 and other cleanups in the affected modules.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,7d1b4295b9779788b4cbd4b7bb99240807c62aa3,"Fixed #9036: unified the permission checking in `AdminSite`, pushing it down to the `ModelAdmin` where it belongs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10451 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
103ebe2b5ff1b2614b85a52c239f471904d26244,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
103ebe2b5ff1b2614b85a52c239f471904d26244,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c2e19e26bc33d34eff57079bd1a6838ff64d9e81,"Fixed #17856 -- Passed obj to get_inline_instances

Thanks ybon, quinode and sjaensch for the patch, and Tim Graham
for the review.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,1f39eafd60761bf6a60b74d9e9859621da1b9363,"Checked object permissions on admin history view.

This is a security fix. Disclosure and advisory coming shortly.

Patch by Russell Keith-Magee.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,be6ca89396c031619947921c81b8795d816e3285,"Fixed #27991 -- Added obj arg to InlineModelAdmin.has_add_permission().

Thanks Vladimir Ivanov for the initial patch.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c7a19f42030c15ad3b3475ad9a4854e10733ff74,"Fixed #23857 -- Fixed admin crash with ""save as new"" and deleting inline.

Thanks amarandon for the report.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,7a89d3d503cad96689fee3028a218ff5456f73f1,"Fixed #11700 -- Stopped admin actions and list_editable fields to show up in popups. Thanks to Simon Meers for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15129 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,f67fb604ea4cebe2dcc2b3bc8d017bdae546a7a5,"Fixed #8341 -- Allow simpler subclassing of ModelAdmin and InlineModelAdmin when overriding get_form and get_formset and needing to pass keyword argument on to the factory functions. Thanks ciantic for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8396 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,8f30556329b64005d63b66859a74752a0b261315,"Renamed Field.rel attribute to remote_field

Field.rel is now deprecated. Rel objects have now also remote_field
attribute. This means that self == self.remote_field.remote_field.

In addition, made the Rel objects a bit more like Field objects. Still,
marked ManyToManyFields as null=True.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3be368c73e8e6696e7cc74421aeb4d06d8e828c8,Fix #20111 Added more precise message level for succcess and warning messages,False
103ebe2b5ff1b2614b85a52c239f471904d26244,80bcbecd4a394f67c1679b077ba79a797c4a57d7,"Fixed #19361 -- Added link to object's change form in admin's post-save message.

Thanks Roel Kramer for tests.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b91787910c9d5a036674d46a73d1b48ca33123a3,"Fixed #20642 -- Deprecated `Option.get_(add|change|delete)_permission`.

Those methods were only used by `contrib.admin` internally and exclusively
related to `contrib.auth`. Since they were undocumented but used
in the wild the raised deprecation warning point to an also undocumented
alternative that lives in `contrib.auth`.

Also did some PEP8 and other cleanups in the affected modules.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,7d1b4295b9779788b4cbd4b7bb99240807c62aa3,"Fixed #9036: unified the permission checking in `AdminSite`, pushing it down to the `ModelAdmin` where it belongs.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10451 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
103ebe2b5ff1b2614b85a52c239f471904d26244,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
103ebe2b5ff1b2614b85a52c239f471904d26244,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
103ebe2b5ff1b2614b85a52c239f471904d26244,152b1d783bfcf1bab8a038999e1f848a1b4384ef,"[2.1.x] Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

* Refs #27991 -- Added testing for ModelAdmin.get_inline_instances() if the inline's has_add_permission() doesn't accept 'obj'.

* Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

Backport of fd8a7a5313f5e223212085b2e470e43c0047e066 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,f5fbff0b4e87973e903c6cc63a4fb6bb682c52c0,"[2.1.x] Refs #8936 -- Added ModelAdmin.has_view_or_change_permission().

Backport of cd790ed1a6dbdf910c41da44c306ddae6ea6fd4d from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,0423ea1fa8f263f22a949c81613cda4dbd39d927,"[2.1.x] Added stub release notes for 2.1.15.

Backport of e9def97d1095efed15a109d82fe0498ebd56fa04 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,c14937cf7a1e8c25702e89485cc2dd33aa0d3a16,"Fixed #12508 - Added ability to dynamically add inlines in the admin app.

Refs #13. Also introduces an ``empty_form`` attribute on formsets to make it easier to implement dynamic forms.

Many thanks to Zain Memon for the initial patch from his Summer of Code 2009 project, Stanislaus Madueke for his django-dynamic-formset app and all the other people helping out.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12297 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,176d20b92a8d2427b68ebf6e6824ded665013d86,"[2.1.x] Fixed #29809 -- Fixed a crash when a ""view only"" user POSTs to the admin user change form.

Backport of a7284cc0c3620030b43034cdf41216c0941bf411 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,9c93bf0903a26a7abee8eb25e1e70e77688f88b0,"[2.1.x] Fixed #29663 -- Made admin change view redirect to changelist with view permission.

Backport of 09ee3b6fe3c4d80bb445835f88148d6f48cde3ff from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,adfd2614045518cc9221aef1f17fd3ffeac3d2cc,"[2.1.x] Fixed typos in comments and docs.

Backport of 97e637a87fb45c4de970cca6cb783d93473c9d15 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5dd68fa74ae6f3f401649c73e0f450b35d291d9c,"Marked a couple of unmarked strings in edit_inline templates and corrected a marked string.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8587 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,5d199ba90113c47caf142e79151315ba2dc02b4b,"Fixed #8163 -- Restore oldforms admin styling on input fields. Also cleaned up some styles for both tabular and stacked inlines. Thanks Nathan Borror for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8240 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
103ebe2b5ff1b2614b85a52c239f471904d26244,152b1d783bfcf1bab8a038999e1f848a1b4384ef,"[2.1.x] Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

* Refs #27991 -- Added testing for ModelAdmin.get_inline_instances() if the inline's has_add_permission() doesn't accept 'obj'.

* Fixed #29723 -- Fixed crash if InlineModelAdmin.has_add_permission() doesn't accept the obj argument.

Backport of fd8a7a5313f5e223212085b2e470e43c0047e066 from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,f5fbff0b4e87973e903c6cc63a4fb6bb682c52c0,"[2.1.x] Refs #8936 -- Added ModelAdmin.has_view_or_change_permission().

Backport of cd790ed1a6dbdf910c41da44c306ddae6ea6fd4d from master",False
103ebe2b5ff1b2614b85a52c239f471904d26244,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
103ebe2b5ff1b2614b85a52c239f471904d26244,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
103ebe2b5ff1b2614b85a52c239f471904d26244,0423ea1fa8f263f22a949c81613cda4dbd39d927,"[2.1.x] Added stub release notes for 2.1.15.

Backport of e9def97d1095efed15a109d82fe0498ebd56fa04 from master",False
aa80f498de6d687e613860933ac58433ab71ea4b,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,271bcda04af23bd4deb9656edd59038537f301c5,"Fixed #7190 -- Corrected a problem with Boolean value handling on the MySQL backend. Thanks to George Vilches for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12900 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,271bcda04af23bd4deb9656edd59038537f301c5,"Fixed #7190 -- Corrected a problem with Boolean value handling on the MySQL backend. Thanks to George Vilches for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12900 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,ce3c281090320172d22e8a6057250d103c93438e,"Fixed #811 -- Added support for IPv6 to forms and model fields. Many thanks to Erik Romijn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16366 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
aa80f498de6d687e613860933ac58433ab71ea4b,392d992f8295f96632179e01e790465cc9c8d3ec,"Fixed #7048 -- Added ClearableFileInput widget to clear file fields. Thanks for report and patch, jarrow and Carl Meyer.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13968 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,a840710e1e38bc9e55412bb36eca92eff94ebd2c,Fixed #26447 -- Deprecated settings.USE_ETAGS in favor of ConditionalGetMiddleware.,False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,7be638390e18fcbfaaed638f9908673360c280d3,"Fixed #20536 -- rewrite of the file based cache backend

 * Safer for use in multiprocess environments
 * Better random culling
 * Cache files use less disk space
 * Safer delete behavior

Also fixed #15806, fixed #15825.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,ab5491c7cc46f81be9ca388ae3dcda02c30d013d,"[3.0.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,ab5491c7cc46f81be9ca388ae3dcda02c30d013d,"[3.0.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,08892bffd275c79ee1f8f67639eb170aaaf1181e,"[3.0.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,ab5491c7cc46f81be9ca388ae3dcda02c30d013d,"[3.0.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,ab5491c7cc46f81be9ca388ae3dcda02c30d013d,"[3.0.x] Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.

Backport of 21768a99f47ee73a2f93405151550ef7c3d9c8a2 from master",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,08892bffd275c79ee1f8f67639eb170aaaf1181e,"[3.0.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,7aba69145dcb436539a7798086748b73a39121e5,Refs #23919 -- Removed django.test.mock Python 2 compatibility shim.,False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,08892bffd275c79ee1f8f67639eb170aaaf1181e,"[3.0.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
cdb367c92a0ba72ddc0cbd13ff42b0e6df709554,08892bffd275c79ee1f8f67639eb170aaaf1181e,"[3.0.x] Fixed CVE-2020-24583, #31921 -- Fixed permissions on intermediate-level static and storage directories on Python 3.7+.

Thanks WhiteSage for the report.

Backport of ea0febbba531a3ecc8c77b570efbfb68ca7155db from master.",False
0dc9c016fadb71a067e5a42be30164e3f96c0492,fd68bfa6523b165763de58d1b9d8b7be2523a9bf,"[4.0.x] Added stub release notes for 4.0.6.

Backport of d5bc36203057627f6f7d0c6dc97b31adde6f4313 from main",False
0dc9c016fadb71a067e5a42be30164e3f96c0492,fd68bfa6523b165763de58d1b9d8b7be2523a9bf,"[4.0.x] Added stub release notes for 4.0.6.

Backport of d5bc36203057627f6f7d0c6dc97b31adde6f4313 from main",False
44debfeaa4473bd28872c735dd3d9afde6886752,52f5c949e9b50ae3b0034d67f2d385219588aaf1,"Added default Django admin templates

git-svn-id: http://code.djangoproject.com/svn/django/trunk@92 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,820e12dac6ab8ee7fa46a2b27da3575b094bf2bb,"Temporarily commented-out the link to 'forgotten your password?' on the default admin login.html template

git-svn-id: http://code.djangoproject.com/svn/django/trunk@123 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,52f5c949e9b50ae3b0034d67f2d385219588aaf1,"Added default Django admin templates

git-svn-id: http://code.djangoproject.com/svn/django/trunk@92 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,820e12dac6ab8ee7fa46a2b27da3575b094bf2bb,"Temporarily commented-out the link to 'forgotten your password?' on the default admin login.html template

git-svn-id: http://code.djangoproject.com/svn/django/trunk@123 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,5cf8f684237ab5addaf3549b2347c3adf107c0a7,"Merged i18n branch into the trunk! Fixes #65, and perhaps some others. NB: this means that the i18n branch is now obsolete and will be made read-only.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1068 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
44debfeaa4473bd28872c735dd3d9afde6886752,d5a5f0f79007fdb2302cf86d2bb97739964f0a03,"Fixed #1234 -- Fixed admin problem with login status getting out of sync with multiple windows/tabs. Thanks, oggie rob

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2010 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,baba996254ecfe0ba2fa49e5d8b6b177b20869fe,"Added translation strings to django/contrib/admin/views/decorators.py. Taken from new-admin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1418 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
44debfeaa4473bd28872c735dd3d9afde6886752,91c67bcd45facfc55abc8e7afcfc4af2732bac7f,"Added django.contrib.admin, with a staff_member_required decorator and code from AdminUserRequired middleware. Refs #627

git-svn-id: http://code.djangoproject.com/svn/django/trunk@921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,c09351aec63f004f89befa4752b386f2a2a3a63c,"Fixed #6965 -- Sped up the urlize and urlizetrunc filters. A nice patch from Andrew Badr.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7985 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,7477a4ffde4781f4e84503e66d7f775074089887,Fixed E125 pep8 warnings,False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,ed2f96819c9ad6e21e4d397b6418915f5caf522f,"Fixed #23715 -- Prevented urlize from treating a trailing ! as part of an URL

Thanks to 57even for the report.",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,64d3da63ae87c0f2fb4e7a723bdfbc091bdeb7b4,"Fixed #429 -- Small cleanup to code in utils/html.py. Thanks, pb@e-scribe.com

git-svn-id: http://code.djangoproject.com/svn/django/trunk@611 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,7aac81d28038dce5f1a250caa63cf5a86692be1c,"Cleaned up a couple unused imports and fixed docstrings to follow Python Style Guide.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5717 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,e3a7bfccbb83712caf0645e4e33f5c03d9dc462b,"Fixed #9655 -- Prevented the urlize template filter from double-quoting URLs. Thanks Claude Paroz for writing the tests.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,778ce245dd466bce1b19f89e52cf9ed8f1b46513,Corrected many style guide violations that the newest version of flake8 catches,False
abf89d729f210c692a50e0ad3f75fb6bec6fae16,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
eed53d0011622e70b936e203005f0e6f4ac48965,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
eed53d0011622e70b936e203005f0e6f4ac48965,a37e4d5d6ec5df97d81df0793b390d61212e645e,"[3.2.x] Added stub release notes for 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
eed53d0011622e70b936e203005f0e6f4ac48965,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
eed53d0011622e70b936e203005f0e6f4ac48965,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
eed53d0011622e70b936e203005f0e6f4ac48965,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
eed53d0011622e70b936e203005f0e6f4ac48965,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
eed53d0011622e70b936e203005f0e6f4ac48965,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
eed53d0011622e70b936e203005f0e6f4ac48965,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,56b8914eb968ad49d3a15a98cec65fec849e1227,"Fixed #3870, Refs #3787 -- Fixed handling of widget attributes on RadioSelect and MultiWidget. In particular, handling of the id attribute has been fixed. Thanks to Gary Wilson and Max Derkachev.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,728b6fd9ca8624271f072d5f4618dc3fd38e87f1,"Fixed #24219 -- Moved SelectDateWidget together with the other widgets
and deprecated django.forms.extras.

Thanks Berker Peksag and Tim Graham for the reviews.",False
eed53d0011622e70b936e203005f0e6f4ac48965,a0137c41f3b9b95d48f42ddd0fb48703a88a8c94,"Fixed #3289 -- newforms: Added value_from_datadict method to MultipleHiddenInput

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4311 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,fbd1a6277e9cc04a953a242c45d216685afbf873,"Fixed #3297 -- Implemented FileField and ImageField for newforms. Thanks to the many users that contributed to and tested this patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5819 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,c4186c2fec6f5418c81366a911792bf5295db494,Fixed #4117: Apply id attribute to the outer <ul> of RadioSelect,False
eed53d0011622e70b936e203005f0e6f4ac48965,6474092e9a55af5e5096bf934e17fe6371181cf0,"Fixed a bug introduced by [10316].

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10319 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,341c85bed0676e4bcd762186139367549ffceabb,"Fixed #11843 - Give MultipleHiddenInput different IDs. Thanks Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12151 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,788f8f74540b87f79fbfbe44a4b2f00502d66d8a,"newforms: Implemented NullBooleanField and NullBooleanSelect

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4411 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,4add4e4272a05a8c9773f8a450d1f15b4fdf4b63,"Fixed #3114 -- newforms MultipleChoiceField now handles MultiValueDicts properly. Thanks for the patch, Honza Král

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,4a3ad338d67c2412fb4c0f7b44b7a5651a7ec1a6,"newforms: Added Widget.value_from_datadict hook, which allows a Widget to define how to convert its post data dictionary to a value. Implemented it for CheckboxSelectMultiple and updated unit tests

git-svn-id: http://code.djangoproject.com/svn/django/trunk@4136 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
eed53d0011622e70b936e203005f0e6f4ac48965,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
eed53d0011622e70b936e203005f0e6f4ac48965,54febdb8be7c9793caae9c781f4d6b7cbbdcd900,Fixed #26604 -- Added a multiple file upload example to topics/http/file-uploads.txt.,False
eed53d0011622e70b936e203005f0e6f4ac48965,a37e4d5d6ec5df97d81df0793b390d61212e645e,"[3.2.x] Added stub release notes for 3.2.19.

Backport of 18a7f2c711529f8e43c36190a5e2479f13899749 from main",False
eed53d0011622e70b936e203005f0e6f4ac48965,9ef4a18dbe71f538a9ef8c39111ae2f0b62eb90b,"Changed django.forms.ValidationError imports to django.core.exceptions.ValidationError.

Co-Authored-By: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
eed53d0011622e70b936e203005f0e6f4ac48965,4157c502a5202798d0f73645181cb82aa71d34d9,Removed unnecessary arguments in .get method calls,False
58e08e80e362db79eb0fd775dc81faad90dca47a,885dd85b5f7f35cf3266c6552d77f5577bb66828,"Fixed #1785 -- debug view no longer assumes _get_lines_from_file returns None. Thanks, django@binaryfeed.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2864 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,b1603563a3514eeab29780b0f4e5a54d70a7e4ff,"Fixed #822 -- Changed 500 view to use disclosure triangles instead of up/down arrows. Thanks, aaronsw

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1272 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,29c4a578af58f6da7c77830a0ff99260f2338d36,"Fixed #10863 -- Added HTML support to mail_managers() and mail_admins(), and used this to provide more and prettier detail in error emails. Thanks to boxed for the suggestion, and to Rob Hudson and Brodie Rao for their work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,9a82eb6ff109e95dbb6cf26ee3d2ce1c548714bb,"Fixed #14972 -- Ensure that the HTML email logger always produces useful output, regardless of whether it has been given an exception or a request. Thanks to jamstooks for the report, and bpeschier for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
58e08e80e362db79eb0fd775dc81faad90dca47a,5d863f1fbd26537a8bca2920bc591279d15fbdf1,"Fixed #603 -- Added template debugging errors to pretty error-page output, if TEMPLATE_DEBUG setting is True. Also refactored FilterParser for a significant speed increase and changed the template_loader interface so that it returns information about the loader. Taken from new-admin. Thanks rjwittams and crew

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1379 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,172b50b72224dea985cd665accab2ff3110f6674,"Clearer explanation when exception has no message

""No exception supplied"" is misleading; actually there is an exception,
but there's no message string.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,5e4e0b6fe97c6c9de8355f8738403691637a0b07,Fixed #22306 -- Deprecated future versions of cycle and firstof template tags.,False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,cc4196a407095b803f0325513c58520ebbff82bb,"Fixed #1059 -- Fixed off-by-one line number in heading of debug error pages.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,116b9d06cc492f1dcc78fce4926799a771555cfd,"Fixed #5974 -- Added autoescaping for source code lines and local variables in
technical debug page.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6704 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,3afa4a462691b537b38222c9869c997a0ff04a21,"Fixed #8178: Cleaned up the rendering of exceptions on the error template. Thanks to Marinho Brandão for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,bc5a7c0dbd05cf02d89d0f9913856a96e0a56b09,"Fixed #11512 -- Corrected unclosed tag in HTML on debug page. Thanks to rlaager for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11276 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,285cc6f101d13ccbf9e6d268402b76e840dfccfc,"Fixed #5046 -- Added 'Unicode error hint' section to debug page in the case of a UnicodeError. Thanks, Thomas Guttler

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5862 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,885dd85b5f7f35cf3266c6552d77f5577bb66828,"Fixed #1785 -- debug view no longer assumes _get_lines_from_file returns None. Thanks, django@binaryfeed.org

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2864 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,b1603563a3514eeab29780b0f4e5a54d70a7e4ff,"Fixed #822 -- Changed 500 view to use disclosure triangles instead of up/down arrows. Thanks, aaronsw

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1272 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,29c4a578af58f6da7c77830a0ff99260f2338d36,"Fixed #10863 -- Added HTML support to mail_managers() and mail_admins(), and used this to provide more and prettier detail in error emails. Thanks to boxed for the suggestion, and to Rob Hudson and Brodie Rao for their work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14844 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,9a82eb6ff109e95dbb6cf26ee3d2ce1c548714bb,"Fixed #14972 -- Ensure that the HTML email logger always produces useful output, regardless of whether it has been given an exception or a request. Thanks to jamstooks for the report, and bpeschier for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15383 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
58e08e80e362db79eb0fd775dc81faad90dca47a,5d863f1fbd26537a8bca2920bc591279d15fbdf1,"Fixed #603 -- Added template debugging errors to pretty error-page output, if TEMPLATE_DEBUG setting is True. Also refactored FilterParser for a significant speed increase and changed the template_loader interface so that it returns information about the loader. Taken from new-admin. Thanks rjwittams and crew

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1379 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,172b50b72224dea985cd665accab2ff3110f6674,"Clearer explanation when exception has no message

""No exception supplied"" is misleading; actually there is an exception,
but there's no message string.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,e7e4b8b0f774b119bc1c46a62a97e51d7c8a35e3,"Fixed #6862 -- Refactored debug traceback extraction into an easy-to-use class.

Aside from being a little easier to read and use, this means you could subclass
a request/response handler class (from django.core.handlers) to add your own
traceback extraction handling in non-DEBUG environments and reuse this code.
Thanks, Ned Batchelder.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,5e4e0b6fe97c6c9de8355f8738403691637a0b07,Fixed #22306 -- Deprecated future versions of cycle and firstof template tags.,False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0d9b6a5bc43c06716212bd3f847460ce985381aa,"Fixed #10841 -- Switched response served when DEBUG=True and request.is_ajax() returns True (indicating request has been generated by a JS library) to a plain text version for easier debugging.

Contents of this response are similar to its HTML counterpart modulo frame variables values in the Python traceback section.

Thanks to Riz for the report, to SmileyChris for the patch and to Julien for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16921 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,cc4196a407095b803f0325513c58520ebbff82bb,"Fixed #1059 -- Fixed off-by-one line number in heading of debug error pages.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2815 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,074299db83c065993cadfb96dcccaf5d3080e4c7,"Fixed #1420 -- Added copy-and-paste (pastebin-friendly) toggle for debug view. Thanks, jpaulofarias

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2444 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,39eac9bdff25078b89845d94706523fdeec0a213,"Added Wilson's HTML tweaks to the template error screen

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1381 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,668e8b3df933b7ed979c23d48233d59be595f734,"Added 'It worked' page, in a empty_urlconf() view in views/debug.py. It's called if the URLconf is empty.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@1565 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,116b9d06cc492f1dcc78fce4926799a771555cfd,"Fixed #5974 -- Added autoescaping for source code lines and local variables in
technical debug page.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6704 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,3afa4a462691b537b38222c9869c997a0ff04a21,"Fixed #8178: Cleaned up the rendering of exceptions on the error template. Thanks to Marinho Brandão for the fix.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,bc5a7c0dbd05cf02d89d0f9913856a96e0a56b09,"Fixed #11512 -- Corrected unclosed tag in HTML on debug page. Thanks to rlaager for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11276 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,13aa1970d44ab282fb2f1da763e558c84e0ca906,"Fixed #2437, #6091 -- Added ""paste to dpaste"" button to debug page. Thanks,
Christian Metts, Erik Karulf, Simon Greenhill, dummy@habmalnefrage.de.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6820 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,285cc6f101d13ccbf9e6d268402b76e840dfccfc,"Fixed #5046 -- Added 'Unicode error hint' section to debug page in the case of a UnicodeError. Thanks, Thomas Guttler

git-svn-id: http://code.djangoproject.com/svn/django/trunk@5862 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,6bdd3840be63582531c3125a26cd00294e6f8346,"Improved whitespace in debug templates.

Removed extra blank lines in the template text debug template,
and prevented overindentation in the HTML debug template.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
58e08e80e362db79eb0fd775dc81faad90dca47a,a56a226241f5808b2eaf1e4b5a155d35047b8a06,"Display a repr-like result for safe-string local variables on the debug page.

Fixed #7697. Thanks, SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,6bdd3840be63582531c3125a26cd00294e6f8346,"Improved whitespace in debug templates.

Removed extra blank lines in the template text debug template,
and prevented overindentation in the HTML debug template.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
58e08e80e362db79eb0fd775dc81faad90dca47a,43cd7bb110bb7d012f37fe93767168e99821d86d,"Fixed #3734 -- Added support for import hooks to the debugging traceback
output. Also respect hidden traceback frames. Thanks to Armin Ronacher.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5051 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
58e08e80e362db79eb0fd775dc81faad90dca47a,a56a226241f5808b2eaf1e4b5a155d35047b8a06,"Display a repr-like result for safe-string local variables on the debug page.

Fixed #7697. Thanks, SmileyChris.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
58e08e80e362db79eb0fd775dc81faad90dca47a,8414fcf16b9cfa8d989db913f0961fc4ce18c71b,Fixes #23643 -- Added chained exception details to debug view.,True
58e08e80e362db79eb0fd775dc81faad90dca47a,59383f1e3a8ab5a6477dbd5bb1d7c32366a9d8f8,Ref #23643 -- Added plain text report of exception chain.,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,21b858cb6735cdfdc695ff7b076e4cbc1981bc88,Fixed #24060 -- Added OrderBy Expressions,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,af69f14e7ba06bb7dee257ec02b885f4828c77ff,"Removed unused sql.Query.query_terms

Unused since 5008a4db440c8f7d108a6979b959025ffb5789ba.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,21b858cb6735cdfdc695ff7b076e4cbc1981bc88,Fixed #24060 -- Added OrderBy Expressions,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,af69f14e7ba06bb7dee257ec02b885f4828c77ff,"Removed unused sql.Query.query_terms

Unused since 5008a4db440c8f7d108a6979b959025ffb5789ba.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,513948735b799239f3ef8c89397592445e1a0cd5,"Fixed #31426 -- Added proper field validation to QuerySet.order_by().

Resolve the field reference instead of using fragile regex based string
reference validation.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,da2269dc6f7daca090a28508dbd92207b6f639d0,"[3.2.x] Added stub release notes for 3.1.13 and release date for 3.2.5.

Backport of 8e97698d7b537cd298438a8d7b55916d275ff851 from main",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,66cc97c6b3ac626e41cba66a9e9b3ed302f89605,"[3.2.x] Added stub release notes for Django 3.2.5.

Backport of ba10772bf659a9507075d713c416882ce2c8df28 from main",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,66cc97c6b3ac626e41cba66a9e9b3ed302f89605,"[3.2.x] Added stub release notes for Django 3.2.5.

Backport of ba10772bf659a9507075d713c416882ce2c8df28 from main",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,04b744050f1743a88e2bf0ca2ca82b34e3361f50,[3.2.x] Updated translations from Transifex.,False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,513948735b799239f3ef8c89397592445e1a0cd5,"Fixed #31426 -- Added proper field validation to QuerySet.order_by().

Resolve the field reference instead of using fragile regex based string
reference validation.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,98ea4f0f4696221f00e111f1d623452002192e6c,"Refs #7098 -- Deprecated passing raw column aliases to order_by().

Now that order_by() has expression support passing RawSQL() can achieve
the same result.

This was also already supported through QuerySet.extra(order_by) for
years but this API is more or less deprecated at this point.",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,da2269dc6f7daca090a28508dbd92207b6f639d0,"[3.2.x] Added stub release notes for 3.1.13 and release date for 3.2.5.

Backport of 8e97698d7b537cd298438a8d7b55916d275ff851 from main",False
a34a5f724c5d5adb2109374ba3989ebb7b11f81f,04b744050f1743a88e2bf0ca2ca82b34e3361f50,[3.2.x] Updated translations from Transifex.,False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,a323fd3c5e9d53b22efb8660e9dd0d666002dc09,"Fixed #14112 -- Various Markup fixes for the docs. Thanks to ramiro for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13628 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,d128eac316dd5a8578fbae506028a3f2ade49420,"Changed Oracle test-user creation to grant privileges instead of roles

because the roles (specifically RESOURCE) are deprecated.
Also added optional support for creating views in tests, and made an
introspection test fail (rather than skip)  if a view cannot be created
due to lacking privileges.

Refs #18782

Thanks Tim Graham for review, and Josh Smeaton",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ca020a5edd5ba3e6f1d1eb4d2a0d9c622011ab2f,"Fixed oracle-specific test DB creation code so the test suite will run again.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8330 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9dc4ba875f21d5690f6ad5995123a67a3c44bafe,"Fixed #5461 -- Refactored the database backend code to use classes for the creation and introspection modules. Introduces a new validation module for DB-specific validation. This is a backwards incompatible change; see the wiki for details.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8296 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,905ea9619b871ded3204b1d0deb7e6fb9b081679,"Made sure global settings are changed in test db creation

There was an assumption that changing connection.settings_dict changed
also the settings.DATABASES values. This assumption is now gone.",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ff60c5f9de3e8690d1e86f3e9e3f7248a15397c8,"Fixed #1142 -- Added multiple database support.

This monster of a patch is the result of Alex Gaynor's 2009 Google Summer of Code project.
Congratulations to Alex for a job well done.

Big thanks also go to:
 * Justin Bronn for keeping GIS in line with the changes,
 * Karen Tracey and Jani Tiainen for their help testing Oracle support
 * Brett Hoerner, Jon Loyens, and Craig Kimmerer for their feedback.
 * Malcolm Treddinick for his guidance during the GSoC submission process.
 * Simon Willison for driving the original design process
 * Cal Henderson for complaining about ponies he wanted.

... and everyone else too numerous to mention that helped to bring this feature into fruition.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11952 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,9c619ac48b1e4b61346b97b6838a6efb3416cd70,"Fixed some Oracle backend test DB creation code bugs.

Made saving of modified settings compatible with multi-db, removed dead and superfluous code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14489 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,cac7675f247da325cb862a312804fe64845d1155,"Added half of oracle backend. (The other half is all of the special-casing in django/db/models/query.py, which I will be refactoring.) Refs #1990. Thanks, Jason Huggins and tzellman

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2986 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,92c35a0617836b09aef3b6909579ee368004969b,"Fixed #2365, #3324 -- Renamed FloatField to DecimalField and changed the code
to return Decimal instances in Python for this field. Backwards incompatible
change.

Added a real FloatField (stores floats in the database) and support for
FloatField and DecimalField in newforms (analogous to IntegerField).

Included decimal.py module (as django.utils._decimal) from Python 2.4. This is
license compatible with Django and included for Python 2.3 compatibility only.

Large portions of this work are based on patches from Andy Durdin and Jorge
Gajon.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@5302 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,6a0b4faf43db70a35163dde0a5ea626ed4129fa7,"[1.9.x] Fixed #25421 -- Fixed test --keepdb option on Oracle.

Backport of a3a6def867c61d24dfded6cbfef7f820409dc739 from master",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,f77666a4affeff87d180fade251e7423e2459c3a,"Documented some Oracle-specific test settings.

Patch from aaugustin that should help people with specific testing
requirements for Oracle set things up in their preferred way. The
settings have always existed, but now they are documented.

Fixes #16478.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16646 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4844d86c7728c1a5a3bbce4ad336a8d32304072b,ac64e91a0cadc57f4bc5cd5d66955832320ca7a1,"Merged boulder-oracle-sprint branch (r3965:5512) back into trunk. All
expected tests pass for all databases.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5519 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,6a0b4faf43db70a35163dde0a5ea626ed4129fa7,"[1.9.x] Fixed #25421 -- Fixed test --keepdb option on Oracle.

Backport of a3a6def867c61d24dfded6cbfef7f820409dc739 from master",False
4844d86c7728c1a5a3bbce4ad336a8d32304072b,41afae4ce906838fc87d63962104cfb47991f68b,"Reorganized the database test settings

Change database test settings from ""TEST_""-prefixed entries in the
database settings dictionary to setting in a dictionary that is itself
an entry ""TEST"" in the database settings.

Refs #21775

Thanks Josh Smeaton for review.",False
0e7861aec73702f7933ce2a93056f7983939f0d6,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0e7861aec73702f7933ce2a93056f7983939f0d6,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0e7861aec73702f7933ce2a93056f7983939f0d6,5543b10608fc723e7245f5d57eaa22102e863d2a,"Fixed #12349: Added missing unquote in admin history view. Thanks for the report guard.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0e7861aec73702f7933ce2a93056f7983939f0d6,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0e7861aec73702f7933ce2a93056f7983939f0d6,5543b10608fc723e7245f5d57eaa22102e863d2a,"Fixed #12349: Added missing unquote in admin history view. Thanks for the report guard.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@11808 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
0e7861aec73702f7933ce2a93056f7983939f0d6,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd16b17099b7d86f27773df048c5014cf439b282,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
dd16b17099b7d86f27773df048c5014cf439b282,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
dd16b17099b7d86f27773df048c5014cf439b282,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd16b17099b7d86f27773df048c5014cf439b282,a7faf6424a8193cbf8a3a8d017461188fe9ea9c9,"Fixed #8817: get_image_dimensions correctly closes the files it opens, and leaves open the ones it doesn't. Thanks, mitsuhiko.

While I was at it, I converted the file_storage doctests to unit tests.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10707 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b2eb4787a0fff9c9993b78be5c698e85108f3446,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b2eb4787a0fff9c9993b78be5c698e85108f3446,63dd4f53220fa7a1962d69f1ea17ab03438bfd2a,"Fixed #3848 -- Added more comprehensive checks to ImageField validation, checking for image truncation or corruption. Thanks to Andrew C <andrewc-djangotrac1@piffle.org> for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6175 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b2eb4787a0fff9c9993b78be5c698e85108f3446,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
b2eb4787a0fff9c9993b78be5c698e85108f3446,63dd4f53220fa7a1962d69f1ea17ab03438bfd2a,"Fixed #3848 -- Added more comprehensive checks to ImageField validation, checking for image truncation or corruption. Thanks to Andrew C <andrewc-djangotrac1@piffle.org> for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6175 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4cb35b384ceef52123fc66411a73c36a706825e1,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
4cb35b384ceef52123fc66411a73c36a706825e1,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
4cb35b384ceef52123fc66411a73c36a706825e1,04ac1624bdc2fa737188401757cf95ced122d26d,[2.2.x] Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
4cb35b384ceef52123fc66411a73c36a706825e1,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4cb35b384ceef52123fc66411a73c36a706825e1,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
4cb35b384ceef52123fc66411a73c36a706825e1,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4cb35b384ceef52123fc66411a73c36a706825e1,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
4cb35b384ceef52123fc66411a73c36a706825e1,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
4cb35b384ceef52123fc66411a73c36a706825e1,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4cb35b384ceef52123fc66411a73c36a706825e1,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
4cb35b384ceef52123fc66411a73c36a706825e1,04ac1624bdc2fa737188401757cf95ced122d26d,[2.2.x] Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
4cb35b384ceef52123fc66411a73c36a706825e1,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,f026a519aea8f3ea7ca339bfbbb007e1ee0068b0,"Fixed #19733 - deprecated ModelForms without 'fields' or 'exclude', and added '__all__' shortcut

This also updates all dependent functionality, including modelform_factory
 and modelformset_factory, and the generic views `ModelFormMixin`,
 `CreateView` and `UpdateView` which gain a new `fields` attribute.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,6c9778a58e4f680db180d4cc9dc5639d2ec1b40c,"Fixed #30776 -- Restored max length validation on AuthenticationForm.UsernameField.

Regression in 5ceaf14686ce626404afb6a5fbd3d8286410bf13.

Thanks gopackgo90 for the report and Mariusz Felisiak for tests.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,874977d388decdd59022bf6b7f4d50caf2052155,Fixed #29270 -- Fixed UserChangeForm crash if password field is excluded.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d8dfff2ab0edf7a1ca5255eccf45c447b2f9d57e,Fixed #32235 -- Made ReadOnlyPasswordHashField disabled by default.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,"Fixed CVE-2019-19844 -- Used verified user email for password reset requests.

Co-Authored-By: Florian Apolloner <florian@apolloner.eu>",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a1889397a9f0e6a35189de455098b4c70923e561,"Fixed #12103 -- Added AuthenticationForm.confirm_login_allowed to allow customizing the logic policy.

Thanks ejucovy and lasko for work on the patch.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,6ed347d8518e23d7e453bdb21f7fa59ce2c4a885,Fixed #28706 -- Moved AuthenticationFormn invalid login ValidationError to a method for reuse.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,999891bd80b3d02dd916731a7a239e1036174885,"Refs #29379 -- Moved autocomplete attribute to UsernameField.

Moving the autocomplete attribute into UsernameField allows this to work
for custom forms making use of UsernameField, removes some duplication
in the code, and keeps consistency with the autocapitalize attribute
that is already defined on UsernameField.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,ed4c2e1c0d9e43c09767b02fd8b4bd74a5dfe512,"Fixed #22329 -- Used label_tag() in some admin auth templates.

refs #17922.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,f3fa86a89b3b85242f49b2b9acf58b5ea35acc1f,"Fixed #29449 -- Reverted ""Fixed #28757 -- Allowed using contrib.auth forms without installing contrib.auth.""

This reverts commit 3333d935d2914cd80cf31f4803821ad5c0e2a51d due to
a crash if USERNAME_FIELD isn't a CharField.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,c82893cb8c6b2a4a876965426c5a5bc4590e1583,"Refs #27795 -- Removed force_bytes() usage from django/utils/http.py.

django.utils.http.urlsafe_base64_encode() now returns a string, not a
bytestring. Since URLs are represented as strings,
urlsafe_base64_encode() should return a string. All uses immediately
decoded the bytestring to a string anyway.

As the inverse operation, urlsafe_base64_decode() accepts a string.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a96b981d84367fd41b1df40adf3ac9ca71a741dd,Fixed #28127 -- Allowed UserCreationForm's password validation to check all user fields.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d8d853378b3ff75c03d8bd91ea026d2b8c642b0f,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,cdad0b28d49eecb13773c112410f3c126fdd1625,Fixed #19573 -- Allow override of username field label in AuthenticationForm,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0732c8e8c6e156d4d9a4a1cc02d631fe41342bf8,Fixed #20357 -- Allow empty username field label in `AuthentificationForm`.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,302caa40e4caab7d95ef7d0a88a90f935039ab09,Made small readability improvements.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,4b9330ccc04575f9e5126529ec355a450d12e77c,Fixed #25187 -- Made request available in authentication backends.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,dcb8f00d06eec99072b78d54215c9a3dc04acb99,"Fixed #29379 -- Added autocomplete attribute to contrib.auth.forms fields.

Thank you to Nick Pope for review.

Co-authored-by: CHI Cheng <cloudream@gmail.com>",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,f026a519aea8f3ea7ca339bfbbb007e1ee0068b0,"Fixed #19733 - deprecated ModelForms without 'fields' or 'exclude', and added '__all__' shortcut

This also updates all dependent functionality, including modelform_factory
 and modelformset_factory, and the generic views `ModelFormMixin`,
 `CreateView` and `UpdateView` which gain a new `fields` attribute.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,6c9778a58e4f680db180d4cc9dc5639d2ec1b40c,"Fixed #30776 -- Restored max length validation on AuthenticationForm.UsernameField.

Regression in 5ceaf14686ce626404afb6a5fbd3d8286410bf13.

Thanks gopackgo90 for the report and Mariusz Felisiak for tests.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,874977d388decdd59022bf6b7f4d50caf2052155,Fixed #29270 -- Fixed UserChangeForm crash if password field is excluded.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d8dfff2ab0edf7a1ca5255eccf45c447b2f9d57e,Fixed #32235 -- Made ReadOnlyPasswordHashField disabled by default.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,"Fixed CVE-2019-19844 -- Used verified user email for password reset requests.

Co-Authored-By: Florian Apolloner <florian@apolloner.eu>",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a1889397a9f0e6a35189de455098b4c70923e561,"Fixed #12103 -- Added AuthenticationForm.confirm_login_allowed to allow customizing the logic policy.

Thanks ejucovy and lasko for work on the patch.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,6ed347d8518e23d7e453bdb21f7fa59ce2c4a885,Fixed #28706 -- Moved AuthenticationFormn invalid login ValidationError to a method for reuse.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,999891bd80b3d02dd916731a7a239e1036174885,"Refs #29379 -- Moved autocomplete attribute to UsernameField.

Moving the autocomplete attribute into UsernameField allows this to work
for custom forms making use of UsernameField, removes some duplication
in the code, and keeps consistency with the autocapitalize attribute
that is already defined on UsernameField.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,ed4c2e1c0d9e43c09767b02fd8b4bd74a5dfe512,"Fixed #22329 -- Used label_tag() in some admin auth templates.

refs #17922.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,f3fa86a89b3b85242f49b2b9acf58b5ea35acc1f,"Fixed #29449 -- Reverted ""Fixed #28757 -- Allowed using contrib.auth forms without installing contrib.auth.""

This reverts commit 3333d935d2914cd80cf31f4803821ad5c0e2a51d due to
a crash if USERNAME_FIELD isn't a CharField.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,c82893cb8c6b2a4a876965426c5a5bc4590e1583,"Refs #27795 -- Removed force_bytes() usage from django/utils/http.py.

django.utils.http.urlsafe_base64_encode() now returns a string, not a
bytestring. Since URLs are represented as strings,
urlsafe_base64_encode() should return a string. All uses immediately
decoded the bytestring to a string anyway.

As the inverse operation, urlsafe_base64_decode() accepts a string.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a96b981d84367fd41b1df40adf3ac9ca71a741dd,Fixed #28127 -- Allowed UserCreationForm's password validation to check all user fields.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d8d853378b3ff75c03d8bd91ea026d2b8c642b0f,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,cdad0b28d49eecb13773c112410f3c126fdd1625,Fixed #19573 -- Allow override of username field label in AuthenticationForm,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0732c8e8c6e156d4d9a4a1cc02d631fe41342bf8,Fixed #20357 -- Allow empty username field label in `AuthentificationForm`.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,302caa40e4caab7d95ef7d0a88a90f935039ab09,Made small readability improvements.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,4b9330ccc04575f9e5126529ec355a450d12e77c,Fixed #25187 -- Made request available in authentication backends.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,dcb8f00d06eec99072b78d54215c9a3dc04acb99,"Fixed #29379 -- Added autocomplete attribute to contrib.auth.forms fields.

Thank you to Nick Pope for review.

Co-authored-by: CHI Cheng <cloudream@gmail.com>",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0cd8b867a000624d27776e195a05dd7fe0a438bd,"[4.2.x] Added stub release notes and release date for 4.2.7, 4.1.13, and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0cd8b867a000624d27776e195a05dd7fe0a438bd,"[4.2.x] Added stub release notes and release date for 4.2.7, 4.1.13, and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0cd8b867a000624d27776e195a05dd7fe0a438bd,"[4.2.x] Added stub release notes and release date for 4.2.7, 4.1.13, and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main",False
048a9ebb6ea468426cb4e57c71572cbbd975517f,0cd8b867a000624d27776e195a05dd7fe0a438bd,"[4.2.x] Added stub release notes and release date for 4.2.7, 4.1.13, and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main",False
570a32a047ea56265646217264b0d3dab1a14dbd,602b7bca7aa0b94bb38ba16735635959e04d91ab,"Fixed #6082: file-based sessions now verify that SESSION_FILE_PATH is a valid storage location, and raise ImproperlyConfigured if not. Thanks, jags78.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,602b7bca7aa0b94bb38ba16735635959e04d91ab,"Fixed #6082: file-based sessions now verify that SESSION_FILE_PATH is a valid storage location, and raise ImproperlyConfigured if not. Thanks, jags78.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6889 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,5db4d602152c14bb4b25011d9a881f7fa1639152,"Several Django styling fixes in the `contrib.sessions` app.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7725 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
570a32a047ea56265646217264b0d3dab1a14dbd,bcf7e9a9fe037eff4d5dea0cdd8c35104590e1a8,"Fixed #2066: session data can now be stored in the cache or on the filesystem. This should be fully backwards-compatible (the database cache store is still the default). A big thanks to John D'Agostino for the bulk of this code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@6333 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,c9ec72ea1bb15a070724b7aca9b34ee600ed52ff,"[4.0.x] Added stub release notes for 4.0.1, 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,c9ec72ea1bb15a070724b7aca9b34ee600ed52ff,"[4.0.x] Added stub release notes for 4.0.1, 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,c9ec72ea1bb15a070724b7aca9b34ee600ed52ff,"[4.0.x] Added stub release notes for 4.0.1, 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,0d9ff873d9f93efbba875efbf582db88bb0e30ce,"Fixed #27467 -- Made UserAttributeSimilarityValidator max_similarity=0/1 work as documented.

Thanks goblinJoel for the report and feedback.",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
df79ef03ac867c93caaa6be56bc69e66abfeef8f,c9ec72ea1bb15a070724b7aca9b34ee600ed52ff,"[4.0.x] Added stub release notes for 4.0.1, 3.2.11, and 2.2.26 releases.

Backport of b13d920b7b56d3e088e35311f5ee54f25d2779af from main.",False
594a28a9044120bed58671dde8a805c9e0f6c79a,a2ce7669d902cf32eeac9307b804b78ed4150fe5,"Fixed #3421 -- Added IP and localhost validation to newforms URLField. Thanks, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6152 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,136d8b2854908ab0e43334a5b25d46c324270db6,"[1.0.X] Fixed #8422: FilePathField now respects required=False. Backport of r10447 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10448 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,21e0efcd64b7aa0ffdbb7254574644af6d7b7727,"[1.0.X] Fixed #7064: Made DemicmalField validation support max_digits equal to decimal_places. 

r9387 and r9388 from trunk.


git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@9389 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,88a2f53b858fedf46ceb84a9fe09558b31038eb7,"Split django.newforms into forms, fields, widgets, util. Also moved unit tests from docstrings to a standalone module in tests/regressiontests/forms, to save docstring memory overhead, keep code readable and fit our exisitng convention

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3945 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,a2ce7669d902cf32eeac9307b804b78ed4150fe5,"Fixed #3421 -- Added IP and localhost validation to newforms URLField. Thanks, SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6152 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,136d8b2854908ab0e43334a5b25d46c324270db6,"[1.0.X] Fixed #8422: FilePathField now respects required=False. Backport of r10447 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10448 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,21e0efcd64b7aa0ffdbb7254574644af6d7b7727,"[1.0.X] Fixed #7064: Made DemicmalField validation support max_digits equal to decimal_places. 

r9387 and r9388 from trunk.


git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@9389 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,88a2f53b858fedf46ceb84a9fe09558b31038eb7,"Split django.newforms into forms, fields, widgets, util. Also moved unit tests from docstrings to a standalone module in tests/regressiontests/forms, to save docstring memory overhead, keep code readable and fit our exisitng convention

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3945 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,f80769d0892b6f4cf8ae47ad8d15c7f43605555e,"[1.0.X] Fixed #9948 -- Corrected URLField validation to match RFC1035 (URL analog of #9890). Thanks to kratorius for the report and fix.

Merge of r10574 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10577 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,5f20587fcb43cac9a65b72d44a201edf0666dd07,"[1.0.X] Fixed #9890 -- Modified the regex validation for email addresses to match RFC822/1035. Thanks to ozgur for the report, and kratorius for the patch.

Merge of 10573 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10576 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,f80769d0892b6f4cf8ae47ad8d15c7f43605555e,"[1.0.X] Fixed #9948 -- Corrected URLField validation to match RFC1035 (URL analog of #9890). Thanks to kratorius for the report and fix.

Merge of r10574 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10577 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
594a28a9044120bed58671dde8a805c9e0f6c79a,5f20587fcb43cac9a65b72d44a201edf0666dd07,"[1.0.X] Fixed #9890 -- Modified the regex validation for email addresses to match RFC822/1035. Thanks to ozgur for the report, and kratorius for the patch.

Merge of 10573 from trunk.

git-svn-id: http://code.djangoproject.com/svn/django/branches/releases/1.0.X@10576 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,237f72c9fe20a51421fd354ab10ff56968a1ce2f,"[1.9.x] Added stub release notes for 1.9.2.

Backport of 3432f5d659bf926c96a7ede3304a4fda2bfea77d from master",False
adbca5e4db42542575734b8e5d26961c8ada7265,237f72c9fe20a51421fd354ab10ff56968a1ce2f,"[1.9.x] Added stub release notes for 1.9.2.

Backport of 3432f5d659bf926c96a7ede3304a4fda2bfea77d from master",False
adbca5e4db42542575734b8e5d26961c8ada7265,3306106fb1ce610e0961ce319a98e33c93795c1f,"[1.9.x] Fixed #25968 -- Changed project/app templates to use a ""py-tpl"" suffix.

Debian packages unconditionally byte-compile .py files on installation and
do not silence errors by design. Therefore, we need a way of shipping these
invalid .py files without a .py extension but ensuring that when we
template them, they end up as .py.

We don't special-case .py files so that the all the TemplateCommand
command-line options (eg. extra_files and extensions) still work entirely
as expected and it may even be useful for other formats too.

Backport of abc0777b63057e2ff97eee2ff184356051e14c47 from master",False
adbca5e4db42542575734b8e5d26961c8ada7265,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
adbca5e4db42542575734b8e5d26961c8ada7265,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
adbca5e4db42542575734b8e5d26961c8ada7265,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
adbca5e4db42542575734b8e5d26961c8ada7265,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
adbca5e4db42542575734b8e5d26961c8ada7265,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
adbca5e4db42542575734b8e5d26961c8ada7265,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
adbca5e4db42542575734b8e5d26961c8ada7265,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
adbca5e4db42542575734b8e5d26961c8ada7265,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
adbca5e4db42542575734b8e5d26961c8ada7265,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
adbca5e4db42542575734b8e5d26961c8ada7265,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
adbca5e4db42542575734b8e5d26961c8ada7265,5c31c68560b6de7765293fe5f740ab77437e1fdf,"Properly reference FieldDoesNotExist as it does not exist in global of django/contrib/admin/options.py.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8719 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,2fb5a51fa3ac276efc7121ec9de91f092a986104,"Fixed #18659 -- Deprecated request.REQUEST and MergeDict

Thanks Aymeric Augustin for the suggestion.",False
adbca5e4db42542575734b8e5d26961c8ada7265,3952d3129cbed5bdbf207c5c76e8b97e7e229279,"Fixed #11191 - Admin throws 500 instead of 404 for PK of incorrect type

Thanks to mmachine for report and test, and Chris Beaven for the patch



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12011 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,4a67fee785d4d71203031fc46c0aafa15c1437a1,"Fixed #10533 -- Worked around an apparent limitation of xgettext.

Looks like we have to use the same format specifiers in both singular and
plural forms of a message or the PO file cannot be compiled to MO format. This
commit changes one place in admin that was using different specifiers.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10081 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,332a485567420e844887344b6429d3b4db4b260b,"Fixed #16115 -- Added ModelAdmin.save_related method to be able to do pre- or post-save operations for objects related to the parent object currently displayed. Thanks, Julien Phalip.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16498 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,21928f2ba01c5411c57720eec82f7ad8658ed733,"Fixed #7738: support initial values via `GET` for `SelectMutliple` in the admin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8699 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,b46d90c63ad866d5d7d6b09d8986339e0842550d,"Fixed #7758 and #17189 -- Allowed to override the `form_url` context var in the admin change view and the user admin's password change view. Thanks, michal and krzysztof.szczesny.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17466 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
adbca5e4db42542575734b8e5d26961c8ada7265,f586c0b039170f0351832d8c57cce3bf7f4772fb,"Fixed media creation in the add_view. It was not pulling media from the correct place.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8384 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,bcd9482a2019158f4580c24cd50ee8bfae9b2739,"Fixed #342 -- added readonly_fields to ModelAdmin. Thanks Alex Gaynor for bootstrapping the patch.

ModelAdmin has been given a readonly_fields that allow field and calculated
values to be displayed alongside editable fields. This works on model
add/change pages and inlines.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@11965 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
adbca5e4db42542575734b8e5d26961c8ada7265,4bff19463361927ff752929da1bc04e9aa1c2e72,"Fixed #12804 - regression with decorating admin views.

This is a BACKWARDS INCOMPATIBLE change, because it removes the flawed
'auto_adapt_to_methods' decorator, and replaces it with 'method_decorator'
which must be applied manually when necessary, as described in the 1.2
release notes.

For users of 1.1 and 1.0, this affects the decorators:

 * login_required
 * permission_required
 * user_passes_test

For those following trunk, this also affects:

 * csrf_protect
 * anything created with decorator_from_middleware 

If a decorator does not depend on the signature of the function it is
supposed to decorate (for example if it only does post-processing of the
result), it will not be affected.
 



git-svn-id: http://code.djangoproject.com/svn/django/trunk@12399 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,62d9e278d7230f035b3521492c28dd8c1f66147a,"Fixed #7898 -- Moved formset media definition to a media property in InlineAdminFormSet display helper and added InlineAdminForm media at the same time. This now properly renders all media associated with the formset and its display helper children. Thanks dima.kozlov for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8057 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,71076ae299500df32a5b416c65099fde80657040,"Fixed some edge-case error handling from [8699]. Thanks, gkelly.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8714 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,c74504c2dd21974571ab72805fbfc8d4d76ce151,"Fixed #20522 - Allowed use of partially validated object in ModelAdmin.add_view formset validation.

Updated ModelAdmin to use form.instance when passing parent model to
child inlines for add_view. There is effectively no change in the
change_view since the previously passed 'obj' is the same as form.instance.

Thanks to meshy for report, and EvilDMP and timo for review.",False
adbca5e4db42542575734b8e5d26961c8ada7265,b1b1da1eac93297503c04b8394fb98e38f552f5f,"Fixed #8060 - Added permissions-checking for admin inlines. Thanks p.patruno for report and Stephan Jaensch for work on the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16934 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,0d1ba84d13eb6000c9f6e54b03d52863fcd31f27,"Fixed #20702 -- Deprecated get_formsets in favor of get_formsets_with_inlines.

Thanks stanislas.guerra at gmail.com for the report.",False
adbca5e4db42542575734b8e5d26961c8ada7265,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
adbca5e4db42542575734b8e5d26961c8ada7265,23fa913676d66ce4d32501618b1b74e8b2dca5fc,"Fixed #10448: correcting errors on ""save as new"" now correctly create a new object instead of modifying the old one. Thanks, bastih.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10713 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,3710a918b25311e5ce2f7f16f28ff2e2b8f7a12a,Switched the admin to use @transaction.atomic.,False
adbca5e4db42542575734b8e5d26961c8ada7265,c38a174f7c3d2dc5a1adab746ca44f0afd0d966c,"Remove several uses of the deprecated dict.has_key in favor of the in operator.  This is faster, has less code, and is in every single way better.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14392 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,65be56816fc173f823566728ab78b72d061bb466,"Fixed #5780 -- Adjusted the ModelAdmin API to allow the created/updated objects
to be passed to the formsets prior to validation.

This is a backward incompatible change for anyone overridding save_add or
save_change. They have been removed in favor of more granular methods
introduced in [8266] and the new response_add and response_change nethods.
save_model has been renamed to save_form due to its slightly changed behavior.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8273 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,6c17190bf8c6c23f21dd49b029106dd5cb41ae2e,"Fixed #11639, #13618 -- Added get_prepopulated_fields method to ModelAdmin and InlineModelAdmin to be able to handle prepopulated fields on a case-by-case basis. Thanks, leanmeandonothingmachine.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16069 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
adbca5e4db42542575734b8e5d26961c8ada7265,a962286b74f1e8c8cb19fb45a057800da8c2fb56,"Added AdminSite attributes for easily changing admin title.
AdminSite now has overridable site_header, site_title and index_title attributes. Changed
each admin view to pass these to the context (in a new AdminSite.each_context() method).
The intent here is to make it easier to override these things in the common case, instead of
having to override a template, which is a bigger burden.",False
adbca5e4db42542575734b8e5d26961c8ada7265,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
adbca5e4db42542575734b8e5d26961c8ada7265,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
adbca5e4db42542575734b8e5d26961c8ada7265,0894643e40327e48397573b7844585618200442b,"Fixed #23387 -- Kept ""Save as new"" button after validation errors in admin.

When ""Save as new"" is chosen and errors occur, only show the ""Save as new""
button and not the other save buttons.

Thanks to Tino de Bruijn for doing the real work on this fix.",False
adbca5e4db42542575734b8e5d26961c8ada7265,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
adbca5e4db42542575734b8e5d26961c8ada7265,3306106fb1ce610e0961ce319a98e33c93795c1f,"[1.9.x] Fixed #25968 -- Changed project/app templates to use a ""py-tpl"" suffix.

Debian packages unconditionally byte-compile .py files on installation and
do not silence errors by design. Therefore, we need a way of shipping these
invalid .py files without a .py extension but ensuring that when we
template them, they end up as .py.

We don't special-case .py files so that the all the TemplateCommand
command-line options (eg. extra_files and extensions) still work entirely
as expected and it may even be useful for other formats too.

Backport of abc0777b63057e2ff97eee2ff184356051e14c47 from master",False
adbca5e4db42542575734b8e5d26961c8ada7265,0894643e40327e48397573b7844585618200442b,"Fixed #23387 -- Kept ""Save as new"" button after validation errors in admin.

When ""Save as new"" is chosen and errors occur, only show the ""Save as new""
button and not the other save buttons.

Thanks to Tino de Bruijn for doing the real work on this fix.",False
adbca5e4db42542575734b8e5d26961c8ada7265,390001ce52802a7fa1fceeabfb646e6b32911fb9,Fixed #21064 -- Refactored common logic in ModelAdmin.add_view and change_view.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,74582b8d119a8c7d688538442b4149112b626057,"[4.2.x] Added stub release notes for 4.2.10 and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,74582b8d119a8c7d688538442b4149112b626057,"[4.2.x] Added stub release notes for 4.2.10 and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,85e6a1c634fed55c43090e37b802c721d9e7eaaa,"Fixed #28877 -- Made ordinal template filter results more localizable.

Marked the whole pattern (e.g. ""{value}th"") as translatable, instead of
just this suffix, so that languages not using suffixes for ordinals can
use this tag.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,8119b679eb85cdc0ae3d321e54d06dd0200a1e82,"Refs #27025 -- Fixed ""invalid escape sequence"" warnings in Python 3.6.

http://bugs.python.org/issue27364",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,bd4e409695f8d6deebb1b3f70ffb9bc670477c2a,Made intword/intcomma template filters independent of USE_L10N.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,56611a96df7172ab9a5e3b2ac19dc3fb83add722,Refactored naturaltime to use a class-based formatter,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,f62cf22c48c1aa1badffd675a360e87d5d3ddb23,Fixed #29931 -- Removed unused ValueError handling in naturalday template tag.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,9e38ed0536c7dc598a6c2c1bb774d0a8db3cdddc,"Fixed #27486 -- Fixed Python 3.7 DeprecationWarning in intword and filesizeformat filters.

intword and filesizeformat passed floats to ngettext() which is
deprecated in Python 3.7. The rationale for this warning is documented
in BPO-28692: https://bugs.python.org/issue28692.

For filesizeformat, the filesize value is expected to be an int -- it
fills %d string formatting placeholders. It was likely coerced to a
float to ensure floating point division on Python 2. Python 3 always
does floating point division, so coerce to an int instead of a float to
fix the warning.

For intword, the number may contain a decimal component. In English, a
decimal component makes the noun plural. A helper function,
round_away_from_one(), was added to convert the float to an integer that
is appropriate for ngettext().",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,6cae2a550d0d09d26554b9c0c0fbab2859ca45ec,"Fixed #16878 -- Improved intword filter to support numbers up to decillion and googol. Thanks to crodjer for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16897 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,e4430f22c8e3d29ce5d9d0263fba57121938d06d,Fixed #31937 -- Eased translation of time strings in some languages.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,74582b8d119a8c7d688538442b4149112b626057,"[4.2.x] Added stub release notes for 4.2.10 and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,74582b8d119a8c7d688538442b4149112b626057,"[4.2.x] Added stub release notes for 4.2.10 and 3.2.24.

Backport of 06d0a1bd56a9899c351ca047a05813e8dd6a4e17 from main",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,fb537e177d7d304d6642ee6005258a82584a8032,"Added django.contrib.humanize, a set of template tags for adding a 'human touch' to data. They're documented in add_ons.txt.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3076 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,8f3e1c1c63d3d3b36715afa9095e04142c4507e2,"Fixed #6392 -- Made django.contrib.humanize template tags locale aware. Thanks, Dave McLain.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16168 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,3a148f958dddd97c1379081118c30fbede6b6bc4,"Refs #27795 -- Removed force_text from the template layer

Thanks Tim Graham for the review.",False
572ea07e84b38ea8de0551f4b4eda685d91d09d2,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,acb20016c0567876e7fc8144ecbe77905ee8388a,"Fixed #6668 -- Optimized utils.text wrap function

This fixes a failing test after applying an optimization of the
utils.text.wrap function by user SmileyChris.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,5a468b4c085900ba28b7f8dfa2cb0b50d7699aa6,Fixed #32859 -- Simplified compress_string() by using gzip.compress().,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,9108696a7553123f57c5d42f9c4a90cad44532f4,"Refs #19705 -- Changed gzip modification times to 0.

This makes gzip output deterministic, which allows
ConditionalGetMiddleware to reliably compare ETags on gzipped
content (views using the gzip_page() decorator in particular).",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,a6f429e37e7fe9cf8801c8fbce4c40af7e0cec0c,"Added consistent support for double- and single-quote delimiters in templates.

Some template filters and tags understood single-quoted arguments, others
didn't. This makes everything consistent. Based on a patch from akaihola.

Fixed #7295.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10118 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,b906c3db63deb5ee58ab91fe6a7144ff6f8b6300,Removed duplicate lines in slugify().,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,c8cd8b80aa90f463814e1957d26e4a11f2f94414,"Fixed #12119. Changed smart_split to stop splitting on whitespace in quotes. Thanks, emulbreh.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12581 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,acb20016c0567876e7fc8144ecbe77905ee8388a,"Fixed #6668 -- Optimized utils.text wrap function

This fixes a failing test after applying an optimization of the
utils.text.wrap function by user SmileyChris.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,5a468b4c085900ba28b7f8dfa2cb0b50d7699aa6,Fixed #32859 -- Simplified compress_string() by using gzip.compress().,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,f8cc464452f495fce2a3d6f7494396c8f798a1e6,"Fixed #16501 -- Added an allow_unicode parameter to SlugField.

Thanks Flavio Curella and Berker Peksag for the initial patch.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,8f04f53dd847896f49a9bc367bb7269984ebdb6e,Removed a few gratuitous lambdas.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,9108696a7553123f57c5d42f9c4a90cad44532f4,"Refs #19705 -- Changed gzip modification times to 0.

This makes gzip output deterministic, which allows
ConditionalGetMiddleware to reliably compare ETags on gzipped
content (views using the gzip_page() decorator in particular).",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,a6f429e37e7fe9cf8801c8fbce4c40af7e0cec0c,"Added consistent support for double- and single-quote delimiters in templates.

Some template filters and tags understood single-quoted arguments, others
didn't. This makes everything consistent. Based on a patch from akaihola.

Fixed #7295.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10118 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,b906c3db63deb5ee58ab91fe6a7144ff6f8b6300,Removed duplicate lines in slugify().,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,c8cd8b80aa90f463814e1957d26e4a11f2f94414,"Fixed #12119. Changed smart_split to stop splitting on whitespace in quotes. Thanks, emulbreh.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12581 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,0382ecfe020b4c51b4c01e4e9a21892771e66941,Fixed #28694 -- Made django.utils.text.slugify() strip dashes and underscores.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,806f3b26f80c729dede7f10b463691d1f5aae13e,"Fixed #11021 -- Clarified newline stripping behavior in the truncatewords and truncatewords_html filters. Thanks to Ben Spaulding for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13555 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,5a0b72a6eb41a66af14d6256fa382380399eabfb,"Fixed #2027 -- added truncatewords_html filter that respects HTML tags whilst
truncating. Patch from SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4468 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,462d3115a32ca2f2dfb28231495bc9a42e828e47,"Fixed #5672 -- Allow the separator in the get_text_list utility function to be translated. Thanks, Claude.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14876 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,1d078be448ab45f5e865f50053a23705023e3c53,"Fixed #6799 - added an `end_text` argument to `truncate_words`/`truncate_html_words`.

This allows customizing the standard ""..."" end text. Yes, this is technically a
feature sneaking in after the deadline, but I just couldn't bring myself to punt
it again: we already used that excuse for not getting it into 1.1.

Thanks to Adam Fast and Travis Cline for work on this patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12431 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,3b774583711e39dae7a5cfde314288f8019f59c6,"Fixed #5025 -- Add a ""truncatechars"" template filter. Many thanks to Chris Beaven.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16542 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
3c9a2771cc80821e041b16eb36c1c37af5349d4a,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,2530735d2d57316d1df8177745e93a78de663ff7,Fixed a number of flake8 errors -- particularly around unused imports and local variables,False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,2530735d2d57316d1df8177745e93a78de663ff7,Fixed a number of flake8 errors -- particularly around unused imports and local variables,False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,5d263dee304fdaf95e18d2f0619d6925984a7f02,"Fixed #21674 -- Deprecated the import_by_path() function in favor of import_string().

Thanks Aymeric Augustin for the suggestion and review.",False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,9741912a9aaad083eaa8b9780cde37e1843cc4ae,"Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,5d263dee304fdaf95e18d2f0619d6925984a7f02,"Fixed #21674 -- Deprecated the import_by_path() function in favor of import_string().

Thanks Aymeric Augustin for the suggestion and review.",False
5307ce565fbedb9cc27cbe7c757b41a00438d37c,9741912a9aaad083eaa8b9780cde37e1843cc4ae,"Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,27560924ec1e567be4727ef8d7dfc4d3879c048c,"Fixed a security issue in get_host.

Full disclosure and new release forthcoming.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,893cea211ae88c6f68a6c2c281890d6f63541286,"Added protection against spoofing of X_FORWARDED_HOST headers. A security announcement will be made shortly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16758 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d7c6a57d606bbb8185f9215ffce4c0516a9ae438,Used @override_settings in several tests.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,4fb510fde4db95d15205afefdefade97eee4d3ef,Added missed poisoned host header tests,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,011f21b4faddf40fdb84f2adbb75fc4c3fb94ce8,"Used None-related assertions in CSRF tests

Thanks Markus Holtermann for spotting this.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,27dd7e727153cbf12632a2161217340123687c44,"Fixed #23815 -- Prevented UnicodeDecodeError in CSRF middleware

Thanks codeitloadit for the report, living180 for investigations
and Tim Graham for the review.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,051cb1f4c60ac8e7087d92ef34ed41e6684d8b9b,"Fixed #20411 -- Don't let invalid referers blow up CSRF same origin checks.

Thanks to edevil for the report and saz for the patch.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,011f21b4faddf40fdb84f2adbb75fc4c3fb94ce8,"Used None-related assertions in CSRF tests

Thanks Markus Holtermann for spotting this.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,27dd7e727153cbf12632a2161217340123687c44,"Fixed #23815 -- Prevented UnicodeDecodeError in CSRF middleware

Thanks codeitloadit for the report, living180 for investigations
and Tim Graham for the review.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,8e70cef9b67433edd70935dcc30c621d1e7fc0a0,"Fixed #9977 - CsrfMiddleware gets template tag added, session dependency removed, and turned on by default.

This is a large change to CSRF protection for Django.  It includes:

 * removing the dependency on the session framework.
 * deprecating CsrfResponseMiddleware, and replacing with a core template tag.
 * turning on CSRF protection by default by adding CsrfViewMiddleware to
   the default value of MIDDLEWARE_CLASSES.
 * protecting all contrib apps (whatever is in settings.py)
   using a decorator.

For existing users of the CSRF functionality, it should be a seamless update,
but please note that it includes DEPRECATION of features in Django 1.1,
and there are upgrade steps which are detailed in the docs.

Many thanks to 'Glenn' and 'bthomas', who did a lot of the thinking and work
on the patch, and to lots of other people including Simon Willison and
Russell Keith-Magee who refined the ideas.

Details of the rationale for these changes is found here:

http://code.djangoproject.com/wiki/CsrfProtection

As of this commit, the CSRF code is mainly in 'contrib'.  The code will be
moved to core in a separate commit, to make the changeset as readable as
possible.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@11660 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,051cb1f4c60ac8e7087d92ef34ed41e6684d8b9b,"Fixed #20411 -- Don't let invalid referers blow up CSRF same origin checks.

Thanks to edevil for the report and saz for the patch.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,b0c56b895fd2694d7f5d4595bdbbc41916607f45,"Fixed #24496 -- Added CSRF Referer checking against CSRF_COOKIE_DOMAIN.

Thanks Seth Gottlieb for help with the documentation and
Carl Meyer and Joshua Kehn for reviews.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,c250f9c99b59bb011dae9bc97783458621462b65,Fixed #20038 -- Better error message for host validation.,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,73f86f44417f883ba3aca1ba947fdad00206a615,Isolated host validation tests in own test case,False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,d51fb74360b94f2a856573174f8aae3cd905dd35,"Added a new required ALLOWED_HOSTS setting for HTTP host header validation.

This is a security fix; disclosure and advisory coming shortly.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,b0c56b895fd2694d7f5d4595bdbbc41916607f45,"Fixed #24496 -- Added CSRF Referer checking against CSRF_COOKIE_DOMAIN.

Thanks Seth Gottlieb for help with the documentation and
Carl Meyer and Joshua Kehn for reviews.",False
884e113838e5a72b4b0ec9e5e87aa480f6aa4472,1c3c21b38d154eff0286c194711dced2ac39dd3d,"Fixed #19987 -- Disabled host validation when DEBUG=True.

The documentation promises that host validation is disabled when
DEBUG=True, that all hostnames are accepted. Domains not compliant with
RFC 1034/1035 were however being validated, this validation has now been
removed when DEBUG=True.

Additionally, when DEBUG=False a more detailed SuspiciousOperation
exception message is provided when host validation fails because the
hostname is not RFC 1034/1035 compliant.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
af7d09b0c5c6ab68e629fd9baf736f9dd203b18e,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
25d84d64122c15050a0ee739e859f22ddab5ac48,45ec013116f5d3b9f6a626528e04276b78b688da,"[3.1.x] Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.

Backport of 36db4dd937ae11c5b687c5d2e5fa3c27e4140001 from master",False
25d84d64122c15050a0ee739e859f22ddab5ac48,b915b9f10f1110bf6b8468060ce9753ff78ffb07,"Refs #27753 -- Deprecated django.utils.text.unescape_entities().

The function was undocumented and only required for compatibility with
Python 2.

Code should use Python's html.unescape() that was added in Python 3.4.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
25d84d64122c15050a0ee739e859f22ddab5ac48,45ec013116f5d3b9f6a626528e04276b78b688da,"[3.1.x] Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.

Backport of 36db4dd937ae11c5b687c5d2e5fa3c27e4140001 from master",False
25d84d64122c15050a0ee739e859f22ddab5ac48,b915b9f10f1110bf6b8468060ce9753ff78ffb07,"Refs #27753 -- Deprecated django.utils.text.unescape_entities().

The function was undocumented and only required for compatibility with
Python 2.

Code should use Python's html.unescape() that was added in Python 3.4.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,cca0d98118cccf9ae0c6dcf2d6c57fc50469fbf0,"[3.1.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,45ec013116f5d3b9f6a626528e04276b78b688da,"[3.1.x] Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.

Backport of 36db4dd937ae11c5b687c5d2e5fa3c27e4140001 from master",False
25d84d64122c15050a0ee739e859f22ddab5ac48,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
25d84d64122c15050a0ee739e859f22ddab5ac48,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
25d84d64122c15050a0ee739e859f22ddab5ac48,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,60586dd7379b295b72d8af4e03423c286913b5e8,Fixed #26125 -- Fixed E731 flake warnings.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,2c837233f5de7d5e309833e39782c7a208a03880,"Fixed #21574 -- Handle bytes consistently in utils.text.normalize_newlines.

All input is now coerced to text before being normalized.
This changes nothing under Python 2 but it allows bytes
to be passed to the function without a TypeError under Python3
(bytes are assumed to be utf-8 encoded text).

Thanks to trac user vajrasky for the report.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,a1c9c525330ae489c5ad124818ea42097b0d3b73,"Added django.utils.text.smart_split. Thanks, ckknight

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3101 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,54e695331b07a572e0f37085725d23df69980628,"Fixed #20221 -- Allowed some functions that use mark_safe() to result in SafeText.

Thanks Baptiste Mispelon for the report.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
25d84d64122c15050a0ee739e859f22ddab5ac48,eb214452c3b1dc399b629aabea926e27b5538c52,Fixed #21270 -- Fixed E701 pep8 warnings,False
25d84d64122c15050a0ee739e859f22ddab5ac48,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,cca0d98118cccf9ae0c6dcf2d6c57fc50469fbf0,"[3.1.x] Fixed CVE-2021-28658 -- Fixed potential directory-traversal via uploaded files.

Thanks Claude Paroz for the initial patch.
Thanks Dennis Brinkrolf for the report.

Backport of d4d800ca1addc4141e03c5440a849bb64d1582cd from main.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,45ec013116f5d3b9f6a626528e04276b78b688da,"[3.1.x] Fixed #28132 -- Made MultiPartParser ignore filenames with trailing slash.

Backport of 36db4dd937ae11c5b687c5d2e5fa3c27e4140001 from master",False
25d84d64122c15050a0ee739e859f22ddab5ac48,0247c9b08f8da4a2d93b9cede6c615011552b55a,Split form's test_fields.py into different files.,False
25d84d64122c15050a0ee739e859f22ddab5ac48,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
25d84d64122c15050a0ee739e859f22ddab5ac48,668bc4f7bef79c7177bfa5b7dabd1403e0d6fa30,"Fixed #10254: Changed the regex in get_valid_filename to allow unicode alphanumerics (thanks gulliver).  Also updated the file_uploads test for this case to check the name after saving the uploaded file. As it was the test ensured that files with unicode characters in their names could be uploaded, but it wasn't actually ensuring that the unicode characters were preserved through save.  


git-svn-id: http://code.djangoproject.com/svn/django/trunk@10388 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
25d84d64122c15050a0ee739e859f22ddab5ac48,d911a64ce8bdb10e7704262837473215fcdb9cbe,"Fixed #6450 -- Improved the checking of errors when creating the directories for saved files. Thanks to henry@precheur.org for the report and patch, and vung for the excellent test case.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8007 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
00b0fc50e1738c7174c495464a5ef069408a4402,273dc550a4eccdad958541f456332312b3369504,"Fixed #20462 -- null/non-string regex lookups are now consistent

Thanks to noirbizarre for the report and initial patch.",False
00b0fc50e1738c7174c495464a5ef069408a4402,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
00b0fc50e1738c7174c495464a5ef069408a4402,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
00b0fc50e1738c7174c495464a5ef069408a4402,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
00b0fc50e1738c7174c495464a5ef069408a4402,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
00b0fc50e1738c7174c495464a5ef069408a4402,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
00b0fc50e1738c7174c495464a5ef069408a4402,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,f1fbef6cd171ddfae41fcc901f1f60ccad039f51,Fixed #28668 -- Allowed QuerySet.bulk_create() to ignore insert conflicts.,False
00b0fc50e1738c7174c495464a5ef069408a4402,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
00b0fc50e1738c7174c495464a5ef069408a4402,f758bdab5eec3e615598948dd5bcf9bb7b910c9d,"Fixed #18271 -- Changed stage at which TransactionTestCase flushes DB tables.

Previously, the flush was done before the test case execution and now
it is performed after it.

Other changes to the testing infrastructure include:

* TransactionTestCase now doesn't reset autoincrement sequences either
  (previous behavior can achieved by using `reset_sequences`.)
  With this, no implicit such reset is performed by any of the provided
  TestCase classes.

* New ordering of test cases: All unittest tes cases are run first and
  doctests are run at the end.

THse changes could be backward-incompatible with test cases that relied
on some kind of state being preserved between tests. Please read the
relevant sections of the release notes and testing documentation for
further details.

Thanks Andreas Pelme for the initial patch. Karen Tracey and Anssi
Kääriäinen for the feedback and Anssi for reviewing.

This also fixes #12408.",True
00b0fc50e1738c7174c495464a5ef069408a4402,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
00b0fc50e1738c7174c495464a5ef069408a4402,39d95fb6ada99c59d47fa0eae6d3128abafe2d58,"Fixed #24092 -- Widened base field support for ArrayField.

Several issues resolved here, following from a report that a base_field
of GenericIpAddressField was failing.

We were using get_prep_value instead of get_db_prep_value in ArrayField
which was bypassing any extra modifications to the value being made in
the base field's get_db_prep_value. Changing this broke datetime
support, so the postgres backend has gained the relevant operation
methods to send dates/times/datetimes directly to the db backend instead
of casting them to strings. Similarly, a new database feature has been
added allowing the uuid to be passed directly to the backend, as we do
with timedeltas.

On the other side, psycopg2 expects an Inet() instance for IP address
fields, so we add a value_to_db_ipaddress method to wrap the strings on
postgres. We also have to manually add a database adapter to psycopg2,
as we do not wish to use the built in adapter which would turn
everything into Inet() instances.

Thanks to smclenithan for the report.",False
00b0fc50e1738c7174c495464a5ef069408a4402,65246de7b1d70d25831ab394c4f4a75813f629fe,Fixed #24031 -- Added CASE expressions to the ORM.,False
00b0fc50e1738c7174c495464a5ef069408a4402,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
00b0fc50e1738c7174c495464a5ef069408a4402,f0a68c25118786d47041d0a435b2afa953be3c86,Fixed #28702 -- Made query lookups for CIText fields use citext.,False
00b0fc50e1738c7174c495464a5ef069408a4402,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
00b0fc50e1738c7174c495464a5ef069408a4402,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
00b0fc50e1738c7174c495464a5ef069408a4402,d7b2aa24f75434c2ce50100cfef3586071e0747a,Fixed #28982 -- Simplified code with and/or.,False
00b0fc50e1738c7174c495464a5ef069408a4402,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
00b0fc50e1738c7174c495464a5ef069408a4402,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
00b0fc50e1738c7174c495464a5ef069408a4402,d54aa49a7d15e708b7da1620310167f39e859cba,"[4.0.x] Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.

Backport of 661316b066923493ff91d6d2aa92e463f595a6b1 from main.",False
00b0fc50e1738c7174c495464a5ef069408a4402,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
00b0fc50e1738c7174c495464a5ef069408a4402,3df72660560730393fc958700d2a3ab975c4b361,"Fixed #3575: use UPPER() instead ILIKE for postgres case-insensitive comparisons.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
00b0fc50e1738c7174c495464a5ef069408a4402,273dc550a4eccdad958541f456332312b3369504,"Fixed #20462 -- null/non-string regex lookups are now consistent

Thanks to noirbizarre for the report and initial patch.",False
00b0fc50e1738c7174c495464a5ef069408a4402,2162f0983de0dfe2178531638ce7ea56f54dd4e7,Fixed #24747 -- Allowed transforms in QuerySet.order_by() and distinct(*fields).,False
00b0fc50e1738c7174c495464a5ef069408a4402,ac25dd1f8d48accc765c05aebb47c427e51f3255,Fixed #29569 -- Fixed Cast() with AutoField and BigAutoField.,False
00b0fc50e1738c7174c495464a5ef069408a4402,3e09b37f80ab34cf57e245e1fcdabb3d4ff92a38,Fixed #28649 -- Added ExtractIsoYear database function and iso_year lookup.,False
00b0fc50e1738c7174c495464a5ef069408a4402,7254f1138d9c51fa558229c39c9559b369c4278a,"Refs #29444 -- Allowed returning multiple fields from INSERT statements on PostgreSQL.

Thanks Florian Apolloner, Tim Graham, Simon Charette, Nick Pope, and
Mariusz Felisiak for reviews.",False
00b0fc50e1738c7174c495464a5ef069408a4402,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
00b0fc50e1738c7174c495464a5ef069408a4402,1101467ce0756272a54f4c7bc65c4c335a94111b,"Limited lines to 119 characters in django/

refs #23395.",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,f1fbef6cd171ddfae41fcc901f1f60ccad039f51,Fixed #28668 -- Allowed QuerySet.bulk_create() to ignore insert conflicts.,False
00b0fc50e1738c7174c495464a5ef069408a4402,766afc22a1dfa7d34a08de85356b7bc9dba025e7,Fixed #24793 -- Unified temporal difference support.,False
00b0fc50e1738c7174c495464a5ef069408a4402,f758bdab5eec3e615598948dd5bcf9bb7b910c9d,"Fixed #18271 -- Changed stage at which TransactionTestCase flushes DB tables.

Previously, the flush was done before the test case execution and now
it is performed after it.

Other changes to the testing infrastructure include:

* TransactionTestCase now doesn't reset autoincrement sequences either
  (previous behavior can achieved by using `reset_sequences`.)
  With this, no implicit such reset is performed by any of the provided
  TestCase classes.

* New ordering of test cases: All unittest tes cases are run first and
  doctests are run at the end.

THse changes could be backward-incompatible with test cases that relied
on some kind of state being preserved between tests. Please read the
relevant sections of the release notes and testing documentation for
further details.

Thanks Andreas Pelme for the initial patch. Karen Tracey and Anssi
Kääriäinen for the feedback and Anssi for reviewing.

This also fixes #12408.",True
00b0fc50e1738c7174c495464a5ef069408a4402,b61d5b1991e2ca2c3450ccc334224f3d51da39dc,"Fixed #28371 -- Fixed Cast() with CharField if the max_length argument isn't provided.

Thanks Tim Graham for the review.",False
00b0fc50e1738c7174c495464a5ef069408a4402,39d95fb6ada99c59d47fa0eae6d3128abafe2d58,"Fixed #24092 -- Widened base field support for ArrayField.

Several issues resolved here, following from a report that a base_field
of GenericIpAddressField was failing.

We were using get_prep_value instead of get_db_prep_value in ArrayField
which was bypassing any extra modifications to the value being made in
the base field's get_db_prep_value. Changing this broke datetime
support, so the postgres backend has gained the relevant operation
methods to send dates/times/datetimes directly to the db backend instead
of casting them to strings. Similarly, a new database feature has been
added allowing the uuid to be passed directly to the backend, as we do
with timedeltas.

On the other side, psycopg2 expects an Inet() instance for IP address
fields, so we add a value_to_db_ipaddress method to wrap the strings on
postgres. We also have to manually add a database adapter to psycopg2,
as we do not wish to use the built in adapter which would turn
everything into Inet() instances.

Thanks to smclenithan for the report.",False
00b0fc50e1738c7174c495464a5ef069408a4402,65246de7b1d70d25831ab394c4f4a75813f629fe,Fixed #24031 -- Added CASE expressions to the ORM.,False
00b0fc50e1738c7174c495464a5ef069408a4402,8ed6788aa479034a44a8aa87da47de56dd728c95,Fixed #30821 -- Added ExtractIsoWeekYear database function and iso_week_day lookup.,False
00b0fc50e1738c7174c495464a5ef069408a4402,f0a68c25118786d47041d0a435b2afa953be3c86,Fixed #28702 -- Made query lookups for CIText fields use citext.,False
00b0fc50e1738c7174c495464a5ef069408a4402,addd3df3bd39730cd82c52d9726c9b7dbf1bdb8f,"Fixed #7672 -- Added a 'week_day' lookup type. Many thanks to Ross Poulton for the proposal and implementation on all built-in database backends..


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9818 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
00b0fc50e1738c7174c495464a5ef069408a4402,15c14f6f16af22b970e5693b349113d80f10f82d,Fixed #27802 -- Unified return value of db backend datetime SQL methods.,False
00b0fc50e1738c7174c495464a5ef069408a4402,d7b2aa24f75434c2ce50100cfef3586071e0747a,Fixed #28982 -- Simplified code with and/or.,False
00b0fc50e1738c7174c495464a5ef069408a4402,fde9b7d35e4e185903cc14aa587ca870037941b1,Fixed #30128 -- Fixed handling timedelta timezone in database functions.,False
00b0fc50e1738c7174c495464a5ef069408a4402,75410228dfd16e49eb3c0ea30b59b4c0d2ea6b03,"Fixed #31473 -- Made sql_flush() use RESTART IDENTITY to reset sequences on PostgreSQL.

The sql_flush() positional argument sequences is replaced by the boolean
keyword-only argument reset_sequences. This ensures that the old
function signature can't be used by mistake when upgrading Django. When
the new argument is True, the sequences of the truncated tables will
reset. Using a single boolean value, rather than a list, allows making a
binary yes/no choice as to whether to reset all sequences rather than a
working on a completely different set.",False
00b0fc50e1738c7174c495464a5ef069408a4402,d54aa49a7d15e708b7da1620310167f39e859cba,"[4.0.x] Fixed #33279 -- Fixed handling time zones with ""-"" sign in names.

Thanks yakimka for the report.

Regression in fde9b7d35e4e185903cc14aa587ca870037941b1.

Backport of 661316b066923493ff91d6d2aa92e463f595a6b1 from main.",False
00b0fc50e1738c7174c495464a5ef069408a4402,194d1dfc186cc8d2b35dabf64f3ed38b757cbd98,Fixed #30661 -- Added models.SmallAutoField.,False
00b0fc50e1738c7174c495464a5ef069408a4402,3df72660560730393fc958700d2a3ab975c4b361,"Fixed #3575: use UPPER() instead ILIKE for postgres case-insensitive comparisons.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8536 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,b3b04ad2111f1e3eb0640cd5d51d4391655317ce,Refs #28574 -- Added test for XML format output to Queryset.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6e9189c0807a8b4818e77c2d83618a788b2ba906,Refs #30897 -- Added test for SETTINGS option to Queryset.explain() on PostgreSQL 12+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,5371342ed66f5ff9feae9dc4586ec43830bbeca6,Fixed #32357 -- Dropped support for PostgreSQL 9.6 and PostGIS 2.3.,False
00b0fc50e1738c7174c495464a5ef069408a4402,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,b3124215117541a86b0740314ef991e1d521da69,Refs #30897 -- Added test for WAL option to Queryset.explain() on PostgreSQL 13+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,aba9c2de669dcc0278c7ffde7981be91801be00b,Fixed #32226 -- Fixed JSON format of QuerySet.explain() on PostgreSQL.,False
00b0fc50e1738c7174c495464a5ef069408a4402,b3b04ad2111f1e3eb0640cd5d51d4391655317ce,Refs #28574 -- Added test for XML format output to Queryset.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6e9189c0807a8b4818e77c2d83618a788b2ba906,Refs #30897 -- Added test for SETTINGS option to Queryset.explain() on PostgreSQL 12+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,5371342ed66f5ff9feae9dc4586ec43830bbeca6,Fixed #32357 -- Dropped support for PostgreSQL 9.6 and PostGIS 2.3.,False
00b0fc50e1738c7174c495464a5ef069408a4402,55df1750be3c88db89444335f77dca10681dcbe3,Refs #30897 -- Added support for ANALYZE option to Queryset.explain() on MariaDB and MySQL 8.0.18+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,b3124215117541a86b0740314ef991e1d521da69,Refs #30897 -- Added test for WAL option to Queryset.explain() on PostgreSQL 13+.,False
00b0fc50e1738c7174c495464a5ef069408a4402,aba9c2de669dcc0278c7ffde7981be91801be00b,Fixed #32226 -- Fixed JSON format of QuerySet.explain() on PostgreSQL.,False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,c1c163b42717ed5e051098ebf0e2f5c77810f20e,Fixed #28574 -- Added QuerySet.explain().,False
00b0fc50e1738c7174c495464a5ef069408a4402,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,26b61aa8131c2bce21be22aa4d00720d6c1326ad,"Fixed #395 -- Added SESSION_EXPIRE_AT_BROWSER_CLOSE setting, which regulates whether session framework should use browser-session-length cookies.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3049 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,aeda55e6bffc3cfbf53698af398a19c1a0f02d46,"Fixed #3881 -- skip saving session when response status is 500

Saving session data is somewhat likely to lead into error when the
status code is 500. It is guaranteed to lead into error if the reason
for the 500 code is query error on PostgreSQL.",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,8c442f21dc7079a880eb626d20b84fc090563dff,"Fixed #5816 -- Fixed a regression from [6333] that generates incorrect cookie ""expires"" dates when using a locale other than English.  Introduced `http_date` and `cookie_date` utility functions.  Thanks for the report Michael Lemaire.  Thanks for the patch Karen Tracey and `SmileyChris`.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6634 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,a10fcbdb8b36e12fb839c7e760f047568877e9da,"Fixed #9096 -- Fixed a slightly out-of-date comment.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9062 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,8d4f79a799136edf8190c357e3e0497d7db3ad77,"Fixed #2548: added get/set_expiry methods to session objects. Thanks, Amit Upadhyay and SmileyChris.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7586 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,c651b08f3981cb9c1e4631563675730a3577e0a9,"Fixed #3586 -- Only output ""Vary: Cookie"" HTTP header when the session object
is accessed. Leads to better caching performance. Thanks, Owen Griffiths.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@4680 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
8cc41ce7a7a8f6bebfdd89d5ab276cd0109f4fc5,393c0e24223c701edeb8ce7dc9d0f852f0c081ad,"Fixed #20936 -- When logging out/ending a session, don't create a new, empty session.

Previously, when logging out, the existing session was overwritten by a
new sessionid instead of deleting the session altogether.

This behavior added overhead by creating a new session record in
whichever backend was in use: db, cache, etc.

This extra session is unnecessary at the time since no session data is
meant to be preserved when explicitly logging out.",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,70a0de37d132e5f1514fb939875f69649f103124,"Fixed #3011 -- Added swappable auth.User models.

Thanks to the many people that contributed to the development and review of
this patch, including (but not limited to) Jacob Kaplan-Moss, Anssi
Kääriäinen, Ramiro Morales, Preston Holmes, Josh Ourisman, Thomas Sutton,
and Roger Barnes, as well as the many, many people who have contributed to
the design discussion around this ticket over many years.

Squashed commit of the following:

commit d84749a0f034a0a6906d20df047086b1219040d0
Merge: 531e771 7c11b1a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 18:37:04 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 531e7715da545f930c49919a19e954d41c59b446
Merge: 29d1abb 1f84b04
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Wed Sep 26 07:09:23 2012 +0800

    Merged recent trunk changes.

commit 29d1abbe351fd5da855fe5ce09e24227d90ddc91
Merge: 8a527dd 54c81a1
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:49:46 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8a527dda13c9bec955b1f7e8db5822d1d9b32a01
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 24 07:48:05 2012 +0800

    Ensure sequences are reset correctly in the presence of swapped models.

commit e2b6e22f298eb986d74d28b8d9906f37f5ff8eb8
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 17:53:05 2012 +0800

    Modifications to the handling and docs for auth forms.

commit 98aba856b534620aea9091f824b442b47d2fdb3c
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 15:28:57 2012 +0800

    Improved error handling and docs for get_user_model()

commit 0229209c844f06dfeb33b0b8eeec000c127695b6
Merge: 6494bf9 8599f64
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 23 14:50:11 2012 +0800

    Merged recent Django trunk changes.

commit 6494bf91f2ddaaabec3ec017f2e3131937c35517
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 21:38:44 2012 +0800

    Improved validation of swappable model settings.

commit 5a04cde342cc860384eb844cfda5af55204564ad
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Sep 17 07:15:14 2012 +0800

    Removed some unused imports.

commit ffd535e4136dc54f084b6ac467e81444696e1c8a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:31:28 2012 +0800

    Corrected attribute access on for get_by_natural_key

commit 913e1ac84c3d9c7c58a9b3bdbbb15ebccd8a8c0a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 20:12:34 2012 +0800

    Added test for proxy model safeguards on swappable models.

commit 280bf19e94d0d534d0e51bae485c1842558f4ff4
Merge: dbb3900 935a863
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:16:49 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit dbb3900775a99df8b6cb1d7063cf364eab55621a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 18:09:27 2012 +0800

    Fixes for Python 3 compatibility.

commit dfd72131d8664615e245aa0f95b82604ba6b3821
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:54:30 2012 +0800

    Added protection against proxying swapped models.

commit abcb027190e53613e7f1734e77ee185b2587de31
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 15:11:10 2012 +0800

    Cleanup and documentation of AbstractUser base class.

commit a9491a87763e307f0eb0dc246f54ac865a6ffb34
Merge: fd8bb4e 08bcb4a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:46:49 2012 +0800

    Merge commit '08bcb4aec1ed154cefc631b8510ee13e9af0c19d' into t3011

commit fd8bb4e3e498a92d7a8b340f0684d5f088aa4c92
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 14:20:14 2012 +0800

    Documentation improvements coming from community review.

commit b550a6d06d016ab6a0198c4cb2dffe9cceabe8a5
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:52:47 2012 +0800

    Refactored skipIfCustomUser into the contrib.auth tests.

commit 52a02f11107c3f0d711742b8ca65b75175b79d6a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:46:10 2012 +0800

    Refactored common 'get' pattern into manager method.

commit b441a6bbc7d6065175715cb09316b9f13268171b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 16 13:41:33 2012 +0800

    Added note about backwards incompatible change to admin login messages.

commit 08bcb4aec1ed154cefc631b8510ee13e9af0c19d
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:33 2012 +0300

    Splitted User to AbstractUser and User

commit d9f5e5addbad5e1a01f67e7358e4f5091c3cad81
Author: Anssi Kääriäinen <akaariai@gmail.com>
Date:   Sat Sep 15 18:30:02 2012 +0300

    Reworked REQUIRED_FIELDS + create_user() interaction

commit 579f152e4a6e06671e1ac1e59e2b43cf4d764bf4
Merge: 9184972 93e6733
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:37 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 918497218c58227f5032873ff97261627b2ceab2
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:18:19 2012 +0800

    Deprecate AUTH_PROFILE_MODULE and get_profile().

commit 334cdfc1bb6a6794791497cdefda843bca2ea57a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 20:00:12 2012 +0800

    Added release notes for new swappable User feature.

commit 5d7bb22e8d913b51aba1c3360e7af8b01b6c0ab6
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 19:59:49 2012 +0800

    Ensure swapped models can't be queried.

commit 57ac6e3d32605a67581e875b37ec5b2284711a32
Merge: f2ec915 abfba3b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 15 14:31:54 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit f2ec915b20f81c8afeaa3df25f80689712f720f8
Merge: 1952656 5e99a3d
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:29:51 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 19526563b54fa300785c49cfb625c0c6158ced67
Merge: 2c5e833 c4aa26a
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 08:22:26 2012 +0800

    Merge recent changes from master.

commit 2c5e833a30bef4305d55eacc0703533152f5c427
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 07:53:46 2012 +0800

    Corrected admin_views tests following removal of the email fallback on admin logins.

commit 20d1892491839d6ef21f37db4ca136935c2076bf
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sun Sep 9 01:00:37 2012 +0800

    Added conditional skips for all tests dependent on the default User model

commit 40ea8b888284775481fc1eaadeff267dbd7e3dfa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:47:02 2012 +0800

    Added documentation for REQUIRED_FIELDS in custom auth.

commit e6aaf659708cf6491f5485d3edfa616cb9214cc0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Sat Sep 8 23:20:02 2012 +0800

    Added first draft of custom User docs.

    Thanks to Greg Turner for the initial text.

commit 75118bd242eec87649da2859e8c50a199a8a1dca
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 11:17:26 2012 +0800

    Admin app should not allow username discovery

    The admin app login form should not allow users to discover the username
    associated with an email address.

commit d088b3af58dad7449fc58493193a327725c57c22
Author: Thomas Sutton <me@thomas-sutton.id.au>
Date:   Mon Aug 20 10:32:13 2012 +0800

    Admin app login form should use swapped user model

commit 7e82e83d67ee0871a72e1a3a723afdd214fcefc3
Merge: e29c010 39aa890
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Fri Sep 7 23:45:03 2012 +0800

    Merged master changes.

commit e29c010beb96ca07697c4e3e0c0d5d3ffdc4c0a3
Merge: 8e3fd70 30bdf22
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:12:57 2012 +0800

    Merge remote-tracking branch 'django/master' into t3011

commit 8e3fd703d02c31a4c3ac9f51f5011d03c0bd47f6
Merge: 507bb50 26e0ba0
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Aug 20 13:09:09 2012 +0800

    Merged recent changes from trunk.

commit 507bb50a9291bfcdcfa1198f9fea21d4e3b1e762
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:41:37 2012 +0800

    Modified auth app so that login with alternate auth app is possible.

commit dabe3628362ab7a4a6c9686dd874803baa997eaa
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 20:10:51 2012 +0800

    Modified auth management commands to handle custom user definitions.

commit 7cc0baf89d490c92ef3f1dc909b8090191a1294b
Author: Russell Keith-Magee <russell@keith-magee.com>
Date:   Mon Jun 4 14:17:28 2012 +0800

    Added model Meta option for swappable models, and made auth.User a swappable model",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,424fe76349a2e34eafef13c2450a7a1f4d3115a6,"Fixed #22579 -- Corrected validation for email to reject trailing slash

Thanks to Claude Paroz for the report and patch and Tomasz
Paczkowski for the review.",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
9f75e2e562fa0c0482f3dde6fc7399a9070b4a3d,2e65d56156b622e2393dee1af66e9c799a51924f,"Fixed #20003 -- Improved and extended URLValidator

This adds support for authentication data (`user:password`) in URLs,
IPv6 addresses, and unicode domains.

The test suite has been improved by adding test URLs from
http://mathiasbynens.be/demo/url-regex (with a few adjustments,
like allowing local and reserved IPs).

The previous URL validation regex failed this test suite on 13
occasions, the validator was updated based on
https://gist.github.com/dperini/729294.",False
2a4113dbd532ce952308992633d802dc169a75f1,e7b0cace455c2da24492660636bfd48c45a19cdf,"[1.7.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
2a4113dbd532ce952308992633d802dc169a75f1,e7b0cace455c2da24492660636bfd48c45a19cdf,"[1.7.x] Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
2a4113dbd532ce952308992633d802dc169a75f1,de67dedc771ad2edec15c1d00c083a1a084e1e89,"[1.7.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2a4113dbd532ce952308992633d802dc169a75f1,d9061c01a975c3313a815f793cd773d3e657c3cf,"Fixed #5964 -- Added unicode-aware versions of urlunquote and urlunquote_plus.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,243d0bec1954ad7fab44625f1440a8ce580df26c,"Fixed #15617 - CSRF referer checking too strict

Thanks to adam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15840 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,6fb4f6e2996cf442b614a073f30839419d9db030,"Fixed #13765 - 'safe' parameter for urlencode filter

Thanks to KyleMac for the suggestion and SmileyChris for the patch

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13849 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,f2303b6f7aa744f8edf4ecf28b7c88db222386f8,"Fixed #4402 -- Modified test client to allow multi-valued inputs on GET requests. Thanks for the suggestion, eddymul@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,d9061c01a975c3313a815f793cd773d3e657c3cf,"Fixed #5964 -- Added unicode-aware versions of urlunquote and urlunquote_plus.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17407 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,4fe87c370dc7c282212c63c0502de13f411da79a,"Removed some Python < 2.6 compatibility code. Refs #17965.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17830 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,953badbea5a04159adbfa970f5805c0232b6a401,"Merged Unicode branch into trunk (r4952:5608). This should be fully
backwards compatible for all practical purposes.

Fixed #2391, #2489, #2996, #3322, #3344, #3370, #3406, #3432, #3454, #3492, #3582, #3690, #3878, #3891, #3937, #4039, #4141, #4227, #4286, #4291, #4300, #4452, #4702


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5609 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,243d0bec1954ad7fab44625f1440a8ce580df26c,"Fixed #15617 - CSRF referer checking too strict

Thanks to adam for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15840 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,6fb4f6e2996cf442b614a073f30839419d9db030,"Fixed #13765 - 'safe' parameter for urlencode filter

Thanks to KyleMac for the suggestion and SmileyChris for the patch

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13849 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,f2303b6f7aa744f8edf4ecf28b7c88db222386f8,"Fixed #4402 -- Modified test client to allow multi-valued inputs on GET requests. Thanks for the suggestion, eddymul@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5741 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a4113dbd532ce952308992633d802dc169a75f1,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
2a4113dbd532ce952308992633d802dc169a75f1,de67dedc771ad2edec15c1d00c083a1a084e1e89,"[1.7.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2a4113dbd532ce952308992633d802dc169a75f1,de67dedc771ad2edec15c1d00c083a1a084e1e89,"[1.7.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
2a4113dbd532ce952308992633d802dc169a75f1,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
2a4113dbd532ce952308992633d802dc169a75f1,de67dedc771ad2edec15c1d00c083a1a084e1e89,"[1.7.x] Fixed is_safe_url() to handle leading whitespace.

This is a security fix. Disclosure following shortly.",False
05413afa8c18cdb978fcdf470e09f7a12b234a23,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
05413afa8c18cdb978fcdf470e09f7a12b234a23,966ed414b2adfc9ecc26a9d529dec99d94262cd9,Added stub release notes for 3.1.6.,False
05413afa8c18cdb978fcdf470e09f7a12b234a23,a9a0f0b03f9a02deb03617bf7e9773a307d1328f,"Fixed #17042 -- Extended startproject and startapp management commands to better handle custom app and project templates. Many thanks to Preston Holmes for his initial patch and Alex Gaynor, Carl Meyer, Donald Stufft, Jacob Kaplan-Moss and Julien Phalip for code reviewing.

* Added ability to pass the project or app directory path as the second argument
* Added ``--template`` option for specifying custom project and app templates
* Cleaned up admin_scripts tests a little while I was there

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17246 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
05413afa8c18cdb978fcdf470e09f7a12b234a23,966ed414b2adfc9ecc26a9d529dec99d94262cd9,Added stub release notes for 3.1.6.,False
0bbb560183fabf0533289700845dafa94951f227,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
0bbb560183fabf0533289700845dafa94951f227,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
0bbb560183fabf0533289700845dafa94951f227,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
0bbb560183fabf0533289700845dafa94951f227,9d1a69579b996eaa208f141b409141be63f597ec,Fixed #23935 -- Converted decimals to fixed point in utils.numberformat.format,False
f4e6e02f7713a6924d16540be279909ff4091eb6,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,0dc3fc954f53d5b03b864e63b309acfdbb40dbf9,"Fixed #19509 -- Fixed crypt/bcrypt non-ascii password encoding

Also systematically added non-ascii passwords in hashers test suite.
Thanks Vaal for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
f4e6e02f7713a6924d16540be279909ff4091eb6,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
f4e6e02f7713a6924d16540be279909ff4091eb6,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,7d0d0dbf26a3c0d16e9c2b930fd6d7b89f215946,Force update of the password on iteration count changes.,False
f4e6e02f7713a6924d16540be279909ff4091eb6,3070e8f711f891aa3bf6e9d1e123047094bf1bb0,Properly force bytes or str for bcrypt on Python3,False
f4e6e02f7713a6924d16540be279909ff4091eb6,d15985d81ff1c3b353a48a87189b7847798214c0,"Fixed #21398 -- Fixed BCryptSHA256PasswordHasher with py-bcrypt and Python 3.

Thanks arjan at anymore.nl for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,90e05aaeac612a4251640564aa65f103ac635e12,"Renovated password hashing, including the forgotten files in r17253.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17254 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f4e6e02f7713a6924d16540be279909ff4091eb6,25f2acfed0fc110f88abbfffb5c5c62a76670db0,"Fixed #20138 -- Added BCryptSHA256PasswordHasher

BCryptSHA256PasswordHasher pre-hashes the users password using
SHA256 to prevent the 72 byte truncation inherient in the BCrypt
algorithm.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
f4e6e02f7713a6924d16540be279909ff4091eb6,fddb0131d37109c809ec391e1a134ef1d9e442a7,"Fixed #21535 -- Fixed password hash iteration upgrade.

Thanks jared_mess for the report.",False
4d334bea06cac63dc1272abcec545b85136cca0e,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
4d334bea06cac63dc1272abcec545b85136cca0e,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
4d334bea06cac63dc1272abcec545b85136cca0e,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
4d334bea06cac63dc1272abcec545b85136cca0e,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
4d334bea06cac63dc1272abcec545b85136cca0e,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4d334bea06cac63dc1272abcec545b85136cca0e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
4d334bea06cac63dc1272abcec545b85136cca0e,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
4d334bea06cac63dc1272abcec545b85136cca0e,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
4d334bea06cac63dc1272abcec545b85136cca0e,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
4d334bea06cac63dc1272abcec545b85136cca0e,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
4d334bea06cac63dc1272abcec545b85136cca0e,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4d334bea06cac63dc1272abcec545b85136cca0e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
4d334bea06cac63dc1272abcec545b85136cca0e,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
4d334bea06cac63dc1272abcec545b85136cca0e,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
4d334bea06cac63dc1272abcec545b85136cca0e,86befcc172c23170a720b3e0c06db51a99b3da59,"[2.2.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
4d334bea06cac63dc1272abcec545b85136cca0e,86befcc172c23170a720b3e0c06db51a99b3da59,"[2.2.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
4d334bea06cac63dc1272abcec545b85136cca0e,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
4d334bea06cac63dc1272abcec545b85136cca0e,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
4d334bea06cac63dc1272abcec545b85136cca0e,86befcc172c23170a720b3e0c06db51a99b3da59,"[2.2.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
4d334bea06cac63dc1272abcec545b85136cca0e,86befcc172c23170a720b3e0c06db51a99b3da59,"[2.2.x] Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.

Backport of ec12c37384798093e359971c8980fe0c68d555bc from master.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,908c67e719a54b8b612cb7df732126f42350f3fa,Added stub release notes for 3.0.1.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,aeb1389442d0f9669edf6660b747fd10693b63a7,Fixed #20079 -- Improve security of password reset tokens,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,2f4a4703e1931fadf5ed81387b26cf84caf5bef9,Fixed #19758 -- Avoided leaking email existence through the password reset form.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,5f52590368063fc8284e23be492d83ba751f66bf,"Fixed #21291 -- Ensured inactive users cannot reset their passwords

Thanks kz26 for the report and the suggested fix. Refs #19758.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,ec12c37384798093e359971c8980fe0c68d555bc,Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,ec12c37384798093e359971c8980fe0c68d555bc,Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,908c67e719a54b8b612cb7df732126f42350f3fa,Added stub release notes for 3.0.1.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,89559bcfb096ccc625e0e9ab41e2136fcb32a514,"Fixed #23409 -- Extract PasswordResetForm.get_users method.

Allows easier customization of policies regarding which users are allowed to
reset their password.

Thanks Aymeric for review.",False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,ec12c37384798093e359971c8980fe0c68d555bc,Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.,False
5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,ec12c37384798093e359971c8980fe0c68d555bc,Refs #31073 -- Added release notes for 02eff7ef60466da108b1a33f1e4dc01eec45c99d.,False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a8ec7f546d6d5806e221ec948c5146b55bd7489,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,d17a035132c4ddba51d57286b2185bc459f69067,"Moved engine-related exceptions to django.template.exceptions.

With the introduction of multiple template engines these exceptions are no
longer DTL-specific. It makes more sense for them to be moved out of
DTL-related modules.",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a8ec7f546d6d5806e221ec948c5146b55bd7489,0be14b0b9647b1662c41e7e408072ebe19f28929,"Fixed #12248 -- Refactored django.template to get code out of __init__.py, to help with avoiding circular import dependencies. Thanks to Tom Tobin for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14722 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,561af6417e1c8232904b726fb0219cc0b7c2e71d,"Fixed #13828 -- DRY'd up the dictsort(reversed) filters, will speed them up as well.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15316 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a8ec7f546d6d5806e221ec948c5146b55bd7489,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,f91d7366e066dc5e1edd90c6bde438fae9fe67fb,Fixed #16028 -- Moved defaultfilters tests into template_tests.,False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,c5dcba4159e00ed7fc43b605946be489602ab369,"Made dictsort and dictsort reversed template filters fail silently
when passed list of things that aren't dictionaries.

Thanks Harris Lapiroff for the report and Daniel Barreto for the patch.

Fixes #15652.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17374 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a8ec7f546d6d5806e221ec948c5146b55bd7489,655f52491505932ef04264de2bce21a03f3a7cd0,"Fixed #17085, #24783 -- Refactored template library registration.

* Converted the ``libraries`` and ``builtins`` globals of
  ``django.template.base`` into properties of the Engine class.
* Added a public API for explicit registration of libraries and builtins.",False
2a8ec7f546d6d5806e221ec948c5146b55bd7489,e81d1c995c0cc5573d3627de0fe6b803b2f43fb2,"Fixed #25670 -- Allowed dictsort to sort a list of lists.

Thanks Tim Graham for the review.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,be67400b477c1b0e7e81766f41bbceed0de74bdc,Refs #24652 -- Used SimpleTestCase where appropriate.,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,801bb146e8d4b74160c0927be184186f30194247,"Converted tests for contrib.auth.forms to unit tests.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,be67400b477c1b0e7e81766f41bbceed0de74bdc,Refs #24652 -- Used SimpleTestCase where appropriate.,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,801bb146e8d4b74160c0927be184186f30194247,"Converted tests for contrib.auth.forms to unit tests.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,f5e9d67907510881c7f132d0a80e39f47caea5f6,"Refs #16860 -- Moved password_changed() logic to AbstractBaseUser.

Thanks Carl Meyer for review.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,bdd13a4daaf2471c851f538a76e86010a968d24d,"Fixed #14090 - Many sql queries needed to display change user form

Thanks to Suor for report and patch.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,9935f97cd203bdcc722bc3d4e96858e221d96ff8,Refs #21379 -- Normalized unicode username inputs,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,718a5ba1a1a77374c26b134ded46dab13776d1a1,"Fixed #16845 -- Admin 'Change user' page no longer shows the password hash. Thanks, dstufft

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17185 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,bdd13a4daaf2471c851f538a76e86010a968d24d,"Fixed #14090 - Many sql queries needed to display change user form

Thanks to Suor for report and patch.



git-svn-id: http://code.djangoproject.com/svn/django/trunk@13683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,9935f97cd203bdcc722bc3d4e96858e221d96ff8,Refs #21379 -- Normalized unicode username inputs,False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,e6d2591d9e8a517b891e49de476640ecae93cc41,"[3.2.x] Added stub release notes for 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,f5e9d67907510881c7f132d0a80e39f47caea5f6,"Refs #16860 -- Moved password_changed() logic to AbstractBaseUser.

Thanks Carl Meyer for review.",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
f9a7fb8466a7ba4857eaf930099b5258f3eafb2b,e6d2591d9e8a517b891e49de476640ecae93cc41,"[3.2.x] Added stub release notes for 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
523da8771bce321023f490f70d71a9e973ddc927,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
523da8771bce321023f490f70d71a9e973ddc927,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
523da8771bce321023f490f70d71a9e973ddc927,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
523da8771bce321023f490f70d71a9e973ddc927,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
523da8771bce321023f490f70d71a9e973ddc927,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
523da8771bce321023f490f70d71a9e973ddc927,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
523da8771bce321023f490f70d71a9e973ddc927,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
523da8771bce321023f490f70d71a9e973ddc927,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
523da8771bce321023f490f70d71a9e973ddc927,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
523da8771bce321023f490f70d71a9e973ddc927,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
523da8771bce321023f490f70d71a9e973ddc927,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
523da8771bce321023f490f70d71a9e973ddc927,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
523da8771bce321023f490f70d71a9e973ddc927,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
523da8771bce321023f490f70d71a9e973ddc927,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,910548634a23f7a3346158e93de0ab308ae52c0c,"Refs #29826 -- Removed unused characters from urlize configuration.

The HTML characters are unused because urlize is meant to be applied to
plain text and these characters aren't properly detected (refs #29826).
Angle brackets and quotes are present in word_split_re and therefore
won't be used in WRAPPING_PUNCTUATION.",False
523da8771bce321023f490f70d71a9e973ddc927,aa4e1522968b19499801fe3d73d6b2f3bf3b3acd,"Fixed #12183 -- Made the urlize filter insert the nofollow attribute properly when an http: URL occurs after a mailto: URL. Thanks eronen for the report.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17356 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,201017df308266c7d5ed20181e6d0ffa5832e3e9,"Fixed #29654 -- Made text truncation an ellipsis character instead of three dots.

Thanks Sudhanshu Mishra for the initial patch and Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,f21a9da4857f4877a5178ba1c80fb0f7ad328a3f,"Fixed #13704 -- Handled IDN properly in the urlize template filter. Thanks Claude Paroz for the initial version of the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,e734477bd739de737d98deef91dfe9f7b8c1c030,"Fixed #17592 -- Handle URLs starting with a dot when using urlize. Thanks, Claude Paroz.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17435 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,f226bdbf4e06aa8ca787e34b0c626965ac526f28,Refs #30608 -- Added django.utils.encoding.punycode().,False
523da8771bce321023f490f70d71a9e973ddc927,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,129f1ac8484d63c2e61a44fb2a18dd17246c1c4d,"Remove a temporary variable deletion, it's not a big deal and it doesn't exist on python3.",False
523da8771bce321023f490f70d71a9e973ddc927,8618271caa0b09daba39ff3b46567d33ae1e1d3a,"Fixed CVE-2018-7536 -- Fixed catastrophic backtracking in urlize and urlizetrunc template filters.

Thanks Florian Apolloner for assisting with the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,9c487b5974ee7e7f196079611d7352364e8873ed,"Replaced an antiquated pattern.

Thanks Lennart Regebro for pointing it out.",False
523da8771bce321023f490f70d71a9e973ddc927,ed114e15106192b22ebb78ef5bf5bce72b419d13,"Imported Django from private SVN repository (created from r. 8825)


git-svn-id: http://code.djangoproject.com/svn/django/trunk@3 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41,Fixed #30899 -- Lazily compiled import time regular expressions.,False
523da8771bce321023f490f70d71a9e973ddc927,b9d9287f59eb5c33dd8bc81179b4cf197fd54456,"Fixed urlize after smart_urlquote rewrite

Refs #22267.",False
523da8771bce321023f490f70d71a9e973ddc927,968329b5c254fc0d77bde78f81b8bcd17655b14e,Refs #27795 -- Replaced force_text() calls with str() in django.utils.html.,False
523da8771bce321023f490f70d71a9e973ddc927,27508918fbbbfda6f5e3b697bbea6bf2c4a6b8b8,"Fixed #16395 -- Prevented urlize from highlighting some malformed URLs. Thanks BernhardEssl for the report and initial patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17358 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,356662cf74c99fac90afb0f5e6aac8d2d573e62a,"Implemented auto-escaping of variable output in templates. Fully controllable by template authors and it's possible to write filters and templates that simulataneously work in both auto-escaped and non-auto-escaped environments if you need to. Fixed #2359

See documentation in templates.txt and templates_python.txt for how everything
works.

Backwards incompatible if you're inserting raw HTML output via template variables.

Based on an original design from Simon Willison and with debugging help from Michael Radziej.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6671 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
523da8771bce321023f490f70d71a9e973ddc927,a944613b3a71bd5a4749a75119775271b4b009cc,"Minor style fixes.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6911 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,4585b4d6c23cfad0366480fc1bb03edc34ebe428,"Fixed some missed auto-escaping and URL quoting cases in the urlize filter.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6683 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,05a3ecbf9637b8873dc0eb6913a94117a90c9bc0,"Fixed #16656 -- Changed the urlize filter to accept more top-level domains.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17359 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,9718fa2e8abe430c3526a9278dd976443d4ae3c6,Refs #27656 -- Updated django.utils docstring verbs according to PEP 257.,False
523da8771bce321023f490f70d71a9e973ddc927,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
523da8771bce321023f490f70d71a9e973ddc927,7b1a67cce52e5c191fbfa1bca501c6f0222db019,"Fixed escaping regression in urlize filter.

Now that the URL is always unescaped as of refs #22267,
we should re-escape it before inserting it into the anchor.",False
523da8771bce321023f490f70d71a9e973ddc927,d693074d431c50e4801dd6bf52525ce1436358f0,"Fixed #20223 -- Added keep_lazy() as a replacement for allow_lazy().

Thanks to bmispelon and uruz for the initial patch.",False
523da8771bce321023f490f70d71a9e973ddc927,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
523da8771bce321023f490f70d71a9e973ddc927,0c4ea9b922206219c73a0de18620b79f2b24b5e1,"Fixed #6279, #6514 -- Fixed some HTML escaping problems in the urlize filter.
Based on a patch from SmileyChris with some test additions from Rob Hudson.
Thanks, both.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7079 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,b7fea9409618ac23485a1048f4435f6afbc11739,"Fixed #7542 -- Fixed bug in urlize where it was appending 'http://' to the link text. Thanks for the patch and tests, devin

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7755 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
523da8771bce321023f490f70d71a9e973ddc927,165f44aaaa0b9008f35d8f6a3474db061559ad53,"Combine consecutive with statements

Python 2.7 allows to combine several 'with' instructions.",False
523da8771bce321023f490f70d71a9e973ddc927,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
523da8771bce321023f490f70d71a9e973ddc927,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
523da8771bce321023f490f70d71a9e973ddc927,4da29717fd46234d5b44705646f629800c80982a,"Fixed #15673 -- Allow limit_choices_to to use a tuple for __in filters. Thanks, EnTeQuAk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16078 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,f212b24b6469b66424354bf970f3051df180b88d,"Cleaned up and refactored `ModelAdmin.formfield_for_dbfield`:

  * The new method uses an admin configuration option (`formfield_overrides`); this makes custom admin widgets especially easy.
  * Refactored what was left of `formfield_for_dbfield` into a handful of smaller methods so that it's easier to hook in and return custom fields where needed.
  * These `formfield_for_*` methods now pass around `request` so that you can easily modify fields based on request (as in #3987).

Fixes #8306, #3987, #9148.

Thanks to James Bennet for the original patch; Alex Gaynor and Brian Rosner also contributed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
523da8771bce321023f490f70d71a9e973ddc927,8fa974fcdde90b6719a1058e77541389ff1809b5,Refs #33211 -- Added assertCountSeleniumElements() test helper.,False
523da8771bce321023f490f70d71a9e973ddc927,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
523da8771bce321023f490f70d71a9e973ddc927,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
523da8771bce321023f490f70d71a9e973ddc927,676bd084f2509f4201561d5c77ed4ecbd157bfa0,"Fixed #32873 -- Deprecated settings.USE_L10N.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
523da8771bce321023f490f70d71a9e973ddc927,249a6190aef5e3676c6d9aa6c38cecff895b5993,Fixed #30975 -- Replaced custom get_select_option with Selenium's select_by_value.,False
523da8771bce321023f490f70d71a9e973ddc927,552abffab16cbdff571486b683e7e7ef12e46066,"Fixed #29094 -- Fixed crash when entering an invalid uuid in ModelAdmin.raw_id_fields.

Regression in 2f9861d823620da7ecb291a8f005f53da12b1e89.

Thanks Carel Burger for the report and fix.",False
523da8771bce321023f490f70d71a9e973ddc927,25e06bca57c068d4b9e9b4221b16a667ccb0d38e,"Fixed #18767 -- Fixed admin calendar for other locales than English.

Refactored openCalendar function from DateTimeShortcuts.js. Now, when
entered manually in the input field, the date will show up correctly on
the calendar for locales that don't use ""-"" for separator.

Thanks charettes for revivew and Alexey Boriskin for some of the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,85c22dd4c4a406301b4378a4682456dfa1900830,Fixed #23262 -- Made SelectFilter2.js move items on enter Key press.,False
523da8771bce321023f490f70d71a9e973ddc927,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,7e6d852bac4de2d5ed2d5ddeabf71482d644ef51,"Fixed #20663 -- ""Today"" and ""now"" admin shortcuts.

Changed the shortcuts next to date and time intput widgets
to account for the current timezone.

Refs #7717, #14253 and #18768.",False
523da8771bce321023f490f70d71a9e973ddc927,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
523da8771bce321023f490f70d71a9e973ddc927,c438cc2a3653644ea42987f7e65f6f638ca85f6c,"Fixed #20821 -- Added tooltips to Admin SelectBox widget

The Admin widget, which can be used to filter multiple selects
can sometimes be too narrow and hide information such as
user permissions. This commit adds tooltips to the select
options so that a user can hover over and see the hidden text.",False
523da8771bce321023f490f70d71a9e973ddc927,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
523da8771bce321023f490f70d71a9e973ddc927,44c0ecdd9226d039a8c666b36ae320af2046a1c1,"Fixed #25364 -- Added generic way to test on all browsers supported by selenium.

Browser names should be passed as a comma separated list to the --selenium flag.

Thanks Tim Graham, Simon Charette and Moritz Sichert for review and discussion.",False
523da8771bce321023f490f70d71a9e973ddc927,07cfe1bd822f4108b5029aef1615a17000d0b0dc,Refs #14497 -- Handled empty readonly admin FileFields,False
523da8771bce321023f490f70d71a9e973ddc927,7ac0cd445e056cac9bfc1fed11026ab6c74b8818,Fixed #25323 -- Fixed selenium test failures with chromedriver 2.18.,False
523da8771bce321023f490f70d71a9e973ddc927,995ffbb2a60c80217bf4cbe028b7712fafaf11f2,Added some Selenium tests for the admin raw id widget.,False
523da8771bce321023f490f70d71a9e973ddc927,7c9cb1ed37354c184fe0438ecae923d5be711c86,Refs #27953 -- Removed hardcoded uses of Model.__str__() in tests.,False
523da8771bce321023f490f70d71a9e973ddc927,2f02a05ffb45be68b4164b4785ff1826833150a3,"Fixed #2879 -- Added support for the integration with Selenium and other in-browser testing frameworks. Also added the first Selenium tests for `contrib.admin`. Many thanks to everyone for their contributions and feedback: Mikeal Rogers, Dirk Datzert, mir, Simon G., Almad, Russell Keith-Magee, Denis Golomazov, devin, robertrv, andrewbadr, Idan Gazit, voidspace, Tom Christie, hjwp2, Adam Nelson, Jannis Leidel, Anssi Kääriäinen, Preston Holmes, Bruno Renié and Jacob Kaplan-Moss.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17241 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,aa12cf07c9202e117712abe2621d901dd6dd94b4,Removed unnecessary numeric indexes in format strings.,False
523da8771bce321023f490f70d71a9e973ddc927,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
523da8771bce321023f490f70d71a9e973ddc927,d53e574676ba0809394017f1f3a5bc24512e5bed,Fixed #20865 -- Fixed raw_id_fields to work with callable limit_choices_to.,False
523da8771bce321023f490f70d71a9e973ddc927,4dca9d166a42717b7d7bf5cf3c5da8149cf88cb2,"Added more thorough Selenium tests for the admin horizontal/vertical filter widgets.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,c79852acee9a2ca137ff0e19657342c7406bbbb9,Fixed #14402 -- Removed clearing of help_text for ManyToManyField's raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,7f155a07032caf916518beca5b33fa5a90300209,Refs #25006 -- Added a '6 p.m.' option to the admin's time picker.,False
523da8771bce321023f490f70d71a9e973ddc927,e744c7e459bae0fbb656c70f368c7183fd7a6013,Imported specific models in a few tests that didn't.,False
523da8771bce321023f490f70d71a9e973ddc927,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
523da8771bce321023f490f70d71a9e973ddc927,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
523da8771bce321023f490f70d71a9e973ddc927,b3162cab94ca2988c99afe01887a4b61d6a35c1a,Fixed #27386 -- Wrapped admin's readonly fields in <div> rather than <p>.,False
523da8771bce321023f490f70d71a9e973ddc927,b9290b1d49538c1092b59c41e6046b11c25ecafb,"Fixed #26449 -- Merged admin's FORMFIELD_FOR_DBFIELD_DEFAULTS with formfield_overrides.

Useful for overriding the DateTimeField widget.",False
523da8771bce321023f490f70d71a9e973ddc927,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
523da8771bce321023f490f70d71a9e973ddc927,4b67e8dc75b50073a80239569016936f10a95ded,"Complemented datetime picker selenium test

This includes test coverage for the calendarMonth JS function in calendar.js",False
523da8771bce321023f490f70d71a9e973ddc927,d51c50d836c5cf8db5566da17963f871be554615,Fixed #31462 -- Allowed overriding autocomplete/raw_id_fields/filter widgets for ManyToManyFields with formfield_overrides.,False
523da8771bce321023f490f70d71a9e973ddc927,7f663aeccf17a75d5fe3fee02d1ac577fdeb57f2,"Fixed #25820 -- Allowed whitespace in admin's calendar.js month/weekday names.

This is useful for certain language translations.",False
523da8771bce321023f490f70d71a9e973ddc927,525dc283a68c0d47f5eb2192cc4a20111d561ae0,Fixed #28278 -- Fixed invalid HTML for a required AdminFileWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
523da8771bce321023f490f70d71a9e973ddc927,39a7eed1bbf12020a077e4bec3d82e08f171a021,Converted test fixtures to setUpTestData methods,False
523da8771bce321023f490f70d71a9e973ddc927,306607d5b99b6eca6ae2c1e726d8eb32b9b2ca1b,"Fixed #32365 -- Made zoneinfo the default timezone implementation.

Thanks to Adam Johnson, Aymeric Augustin, David Smith, Mariusz Felisiak, Nick
Pope, and Paul Ganssle for reviews.",False
523da8771bce321023f490f70d71a9e973ddc927,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
523da8771bce321023f490f70d71a9e973ddc927,f2de5f4caba819fad10a78bfec47ae6f29cc2c29,"Added some Selenium tests for the admin's filter_horizontal and filter_vertical widgets. Ref #13614, #15220.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17579 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,015fad9060a8a6fb273a33b8e8457e504ed26131,Fixed #26175 -- Removed SHA1 password hashes in tests.,False
523da8771bce321023f490f70d71a9e973ddc927,2e8bc8f9862f127b0e69766c7fc7dc92f3156d20,"Fixed #14454 -- converted admin_widgets tests from doctests to unittests.  We have always been at war with doctests.  Thanks to prestontimmons for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,7bc94b58bf4e139b669d023e0fb10ce380fc89f6,"Refs #13614 -- Added test for admin's many-to-many widget data loss bug.

It looks like browsers have fixed the reported issue.",False
523da8771bce321023f490f70d71a9e973ddc927,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
523da8771bce321023f490f70d71a9e973ddc927,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
523da8771bce321023f490f70d71a9e973ddc927,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
523da8771bce321023f490f70d71a9e973ddc927,bf33d3eb1d20157a09b4bf1f36f9c928bc1cabc7,"Fixed #12444 - Date based widgets now correctly handle input values when using locale-aware formatting. Also fixes #7656.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12029 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
523da8771bce321023f490f70d71a9e973ddc927,2ed2db2ea3246c7f985ddfbb780850a23e851f9d,Replaced selenium.find_element_by_css_selector where by_id is sufficient.,False
523da8771bce321023f490f70d71a9e973ddc927,3bc6b18cb92462ff5ae54efd0fce5340e9149b0f,"Fixed selenium failure.

This fixes (at least according to tests on the ci itself)
admin_widgets.tests.RelatedFieldWidgetSeleniumFirefoxTests.test_foreign_key_using_to_field

(http://ci.djangoproject.com/job/Django/database=mysql_gis,python=python2.7/3792/testReport/junit/admin_widgets.tests/RelatedFieldWidgetSeleniumFirefoxTests/test_foreign_key_using_to_field/)

The cause for this issue seems to be that wait_page_loaded was executed before click fired
and as such no profile got saved (again just an educated guess, but with this fix I can no
longer reproduce it -- fingers crossed).",False
523da8771bce321023f490f70d71a9e973ddc927,2ccc0b22db6730ba0950b10bbc5238ae575e4a45,"Fixed #33211 -- Updated tests for Selenium 4.0.0.

Replaced deprecated `find_element[s]_by_*()` usages, in favour of
`find_element[s]()` with an explicit `By`.",False
523da8771bce321023f490f70d71a9e973ddc927,b120c74032c1131e46e4073db1298cf92c4e34c3,"Changed ""date"" column to ""start_date""--Oracle won't name columns with reserved keywords.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,0603f09318049e67320121ace035b7ab03f88ca3,Refs #25149 -- Fixed regression in admin datetime widget for timezones on the negative side of UTC.,False
523da8771bce321023f490f70d71a9e973ddc927,4e50e4065489f06d72eed8ce2d9ae98639be5a93,Removed unneeded conditional_escapes from the testsuite.,False
523da8771bce321023f490f70d71a9e973ddc927,845817b039fc059955bb1eafa5fd78565a49159d,"Fixed #24466 -- Added JavaScript escaping in a couple places in the admin.

Thanks Aymeric Augustin and Florian Apolloner for work on the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,0cc32a8f9782f0e465b4653012de9bc41e6d7db4,"Refs #22955 -- Added test for admin's many-to-many widget refresh data loss bug.

This was fixed by 4a438e400b7ce0ab9d0b6876196cbe8d620a4171.",False
523da8771bce321023f490f70d71a9e973ddc927,f55f2b9d74bf59d1b3ace5df5f498998eb62cb28,"Fixed #10059: `ModelAdmin.formfield_for_dbfield` now handles custom `Field` subclasses. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
523da8771bce321023f490f70d71a9e973ddc927,8fc8c958a5840df48a2bda110c6f06656968b156,Fixed broken selenium tests after 42b9a23267f14be39b9b00958e18d5746783208e.,False
523da8771bce321023f490f70d71a9e973ddc927,04e6542b5a904762a4e723c9b04ba5650ee9dc2e,"Fixed #19423 -- Prevented ModelAdmin sharing widgets due to formfield_overrides

Thanks joebuyer at manycycles.com for the report and Simon Charette
for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,2be621e44c1b5b68c895383f3e20b1f17ddb447a,"Fixed #14497 -- Improved admin widget for ""read only"" FileFields

Based on patch by Adam J Forster, Paul Collins, and Julien.",False
523da8771bce321023f490f70d71a9e973ddc927,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
523da8771bce321023f490f70d71a9e973ddc927,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,2607fa901699916c4825f145fa8a84f49b8524ff,"Fixed #21774 -- Isolate all test urls from eachother.

This (nearly) completes the work to isolate all the test modules from
each other. This is now more important as importing models from another
module will case PendingDeprecationWarnings if those modules are not in
INSTALLED_APPS. The only remaining obvious dependencies are:

- d.c.auth depends on d.c.admin (because of the is_admin flag to some
  views), but this is not so important and d.c.admin is in
  always_installed_apps
- test_client_regress depends on test_client. Eventually these should
  become a single module, as the split serves no useful purpose.",False
523da8771bce321023f490f70d71a9e973ddc927,e46c2326c8cfc038e015f55fd050ab5d7eb91b62,Fixed #31536 -- Fixed rendering of disabled AdminFileWidget and ClearableFileInput.,False
523da8771bce321023f490f70d71a9e973ddc927,af67ce5e18525ba52ee4533229468ed07f912536,Fixed #4574 -- Added CSS classes to the admin calendar widget for better control over styling.,False
523da8771bce321023f490f70d71a9e973ddc927,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,5c9901323ec07c399efbcf0fc6886a5f8a3f8589,"Fixed #12073 -- Made `AdminDateWidget` and `AdminTimeWidget` consider user-supplied `attrs`. Thanks to elliss for the report and to koenb for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17125 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,2a3a0eb09231f7cade8fd945bf4af1b251df12e3,Fixed #27905 -- Added RelatedFieldWidgetWrapper.value_omitted_from_data().,False
523da8771bce321023f490f70d71a9e973ddc927,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,9e04c3b7444ba136efa03896a67e46d2e7045e28,"Fixed #13149 -- The admin `ForeignKeyRawIdWidget` now properly handles non-integer values.  Thanks, Chris Adams.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@13751 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,491419b5ffac3752a1c1804a763c017a2ed82e16,"Made m2m fields form help_text munging specific to admin widgets.

Refs #9321 and follow-up to e80de93af6a0a21a9063a55c4d6d20e3927243e9.",False
523da8771bce321023f490f70d71a9e973ddc927,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
523da8771bce321023f490f70d71a9e973ddc927,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
523da8771bce321023f490f70d71a9e973ddc927,165f44aaaa0b9008f35d8f6a3474db061559ad53,"Combine consecutive with statements

Python 2.7 allows to combine several 'with' instructions.",False
523da8771bce321023f490f70d71a9e973ddc927,ff05de760cc4ef4c7f188e163c722ec3bc1f0cbf,Fixed #29038 -- Removed closing slash from HTML void tags.,False
523da8771bce321023f490f70d71a9e973ddc927,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
523da8771bce321023f490f70d71a9e973ddc927,4da29717fd46234d5b44705646f629800c80982a,"Fixed #15673 -- Allow limit_choices_to to use a tuple for __in filters. Thanks, EnTeQuAk.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16078 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,f212b24b6469b66424354bf970f3051df180b88d,"Cleaned up and refactored `ModelAdmin.formfield_for_dbfield`:

  * The new method uses an admin configuration option (`formfield_overrides`); this makes custom admin widgets especially easy.
  * Refactored what was left of `formfield_for_dbfield` into a handful of smaller methods so that it's easier to hook in and return custom fields where needed.
  * These `formfield_for_*` methods now pass around `request` so that you can easily modify fields based on request (as in #3987).

Fixes #8306, #3987, #9148.

Thanks to James Bennet for the original patch; Alex Gaynor and Brian Rosner also contributed.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@9760 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
523da8771bce321023f490f70d71a9e973ddc927,8fa974fcdde90b6719a1058e77541389ff1809b5,Refs #33211 -- Added assertCountSeleniumElements() test helper.,False
523da8771bce321023f490f70d71a9e973ddc927,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
523da8771bce321023f490f70d71a9e973ddc927,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
523da8771bce321023f490f70d71a9e973ddc927,676bd084f2509f4201561d5c77ed4ecbd157bfa0,"Fixed #32873 -- Deprecated settings.USE_L10N.

Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>",False
523da8771bce321023f490f70d71a9e973ddc927,249a6190aef5e3676c6d9aa6c38cecff895b5993,Fixed #30975 -- Replaced custom get_select_option with Selenium's select_by_value.,False
523da8771bce321023f490f70d71a9e973ddc927,552abffab16cbdff571486b683e7e7ef12e46066,"Fixed #29094 -- Fixed crash when entering an invalid uuid in ModelAdmin.raw_id_fields.

Regression in 2f9861d823620da7ecb291a8f005f53da12b1e89.

Thanks Carel Burger for the report and fix.",False
523da8771bce321023f490f70d71a9e973ddc927,25e06bca57c068d4b9e9b4221b16a667ccb0d38e,"Fixed #18767 -- Fixed admin calendar for other locales than English.

Refactored openCalendar function from DateTimeShortcuts.js. Now, when
entered manually in the input field, the date will show up correctly on
the calendar for locales that don't use ""-"" for separator.

Thanks charettes for revivew and Alexey Boriskin for some of the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,85c22dd4c4a406301b4378a4682456dfa1900830,Fixed #23262 -- Made SelectFilter2.js move items on enter Key press.,False
523da8771bce321023f490f70d71a9e973ddc927,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,7e6d852bac4de2d5ed2d5ddeabf71482d644ef51,"Fixed #20663 -- ""Today"" and ""now"" admin shortcuts.

Changed the shortcuts next to date and time intput widgets
to account for the current timezone.

Refs #7717, #14253 and #18768.",False
523da8771bce321023f490f70d71a9e973ddc927,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
523da8771bce321023f490f70d71a9e973ddc927,c438cc2a3653644ea42987f7e65f6f638ca85f6c,"Fixed #20821 -- Added tooltips to Admin SelectBox widget

The Admin widget, which can be used to filter multiple selects
can sometimes be too narrow and hide information such as
user permissions. This commit adds tooltips to the select
options so that a user can hover over and see the hidden text.",False
523da8771bce321023f490f70d71a9e973ddc927,55a11683f7b094ae4fd0b9fa030d18a12657ba98,"Fixed #20836 -- Ensure that the ForeignKey's to_field attribute is properly considered by the admin's interface when creating related objects.
Many thanks to Collin Anderson for the report and patch and to Peter Sheats for the test.",False
523da8771bce321023f490f70d71a9e973ddc927,44c0ecdd9226d039a8c666b36ae320af2046a1c1,"Fixed #25364 -- Added generic way to test on all browsers supported by selenium.

Browser names should be passed as a comma separated list to the --selenium flag.

Thanks Tim Graham, Simon Charette and Moritz Sichert for review and discussion.",False
523da8771bce321023f490f70d71a9e973ddc927,07cfe1bd822f4108b5029aef1615a17000d0b0dc,Refs #14497 -- Handled empty readonly admin FileFields,False
523da8771bce321023f490f70d71a9e973ddc927,7ac0cd445e056cac9bfc1fed11026ab6c74b8818,Fixed #25323 -- Fixed selenium test failures with chromedriver 2.18.,False
523da8771bce321023f490f70d71a9e973ddc927,995ffbb2a60c80217bf4cbe028b7712fafaf11f2,Added some Selenium tests for the admin raw id widget.,False
523da8771bce321023f490f70d71a9e973ddc927,7c9cb1ed37354c184fe0438ecae923d5be711c86,Refs #27953 -- Removed hardcoded uses of Model.__str__() in tests.,False
523da8771bce321023f490f70d71a9e973ddc927,2f02a05ffb45be68b4164b4785ff1826833150a3,"Fixed #2879 -- Added support for the integration with Selenium and other in-browser testing frameworks. Also added the first Selenium tests for `contrib.admin`. Many thanks to everyone for their contributions and feedback: Mikeal Rogers, Dirk Datzert, mir, Simon G., Almad, Russell Keith-Magee, Denis Golomazov, devin, robertrv, andrewbadr, Idan Gazit, voidspace, Tom Christie, hjwp2, Adam Nelson, Jannis Leidel, Anssi Kääriäinen, Preston Holmes, Bruno Renié and Jacob Kaplan-Moss.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17241 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,aa12cf07c9202e117712abe2621d901dd6dd94b4,Removed unnecessary numeric indexes in format strings.,False
523da8771bce321023f490f70d71a9e973ddc927,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
523da8771bce321023f490f70d71a9e973ddc927,d53e574676ba0809394017f1f3a5bc24512e5bed,Fixed #20865 -- Fixed raw_id_fields to work with callable limit_choices_to.,False
523da8771bce321023f490f70d71a9e973ddc927,4dca9d166a42717b7d7bf5cf3c5da8149cf88cb2,"Added more thorough Selenium tests for the admin horizontal/vertical filter widgets.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,c79852acee9a2ca137ff0e19657342c7406bbbb9,Fixed #14402 -- Removed clearing of help_text for ManyToManyField's raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,7f155a07032caf916518beca5b33fa5a90300209,Refs #25006 -- Added a '6 p.m.' option to the admin's time picker.,False
523da8771bce321023f490f70d71a9e973ddc927,e744c7e459bae0fbb656c70f368c7183fd7a6013,Imported specific models in a few tests that didn't.,False
523da8771bce321023f490f70d71a9e973ddc927,2c69824e5ab5ddf4b9964c4cf9f9e16ff3bb7929,"Refs #23968 -- Removed unnecessary lists, generators, and tuple calls.",False
523da8771bce321023f490f70d71a9e973ddc927,9d740eb8b15de31f1c5520659df683d90342bb44,Fix all violators of E231,False
523da8771bce321023f490f70d71a9e973ddc927,b3162cab94ca2988c99afe01887a4b61d6a35c1a,Fixed #27386 -- Wrapped admin's readonly fields in <div> rather than <p>.,False
523da8771bce321023f490f70d71a9e973ddc927,b9290b1d49538c1092b59c41e6046b11c25ecafb,"Fixed #26449 -- Merged admin's FORMFIELD_FOR_DBFIELD_DEFAULTS with formfield_overrides.

Useful for overriding the DateTimeField widget.",False
523da8771bce321023f490f70d71a9e973ddc927,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
523da8771bce321023f490f70d71a9e973ddc927,4b67e8dc75b50073a80239569016936f10a95ded,"Complemented datetime picker selenium test

This includes test coverage for the calendarMonth JS function in calendar.js",False
523da8771bce321023f490f70d71a9e973ddc927,d51c50d836c5cf8db5566da17963f871be554615,Fixed #31462 -- Allowed overriding autocomplete/raw_id_fields/filter widgets for ManyToManyFields with formfield_overrides.,False
523da8771bce321023f490f70d71a9e973ddc927,7f663aeccf17a75d5fe3fee02d1ac577fdeb57f2,"Fixed #25820 -- Allowed whitespace in admin's calendar.js month/weekday names.

This is useful for certain language translations.",False
523da8771bce321023f490f70d71a9e973ddc927,525dc283a68c0d47f5eb2192cc4a20111d561ae0,Fixed #28278 -- Fixed invalid HTML for a required AdminFileWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
523da8771bce321023f490f70d71a9e973ddc927,39a7eed1bbf12020a077e4bec3d82e08f171a021,Converted test fixtures to setUpTestData methods,False
523da8771bce321023f490f70d71a9e973ddc927,306607d5b99b6eca6ae2c1e726d8eb32b9b2ca1b,"Fixed #32365 -- Made zoneinfo the default timezone implementation.

Thanks to Adam Johnson, Aymeric Augustin, David Smith, Mariusz Felisiak, Nick
Pope, and Paul Ganssle for reviews.",False
523da8771bce321023f490f70d71a9e973ddc927,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
523da8771bce321023f490f70d71a9e973ddc927,f2de5f4caba819fad10a78bfec47ae6f29cc2c29,"Added some Selenium tests for the admin's filter_horizontal and filter_vertical widgets. Ref #13614, #15220.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17579 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,015fad9060a8a6fb273a33b8e8457e504ed26131,Fixed #26175 -- Removed SHA1 password hashes in tests.,False
523da8771bce321023f490f70d71a9e973ddc927,2e8bc8f9862f127b0e69766c7fc7dc92f3156d20,"Fixed #14454 -- converted admin_widgets tests from doctests to unittests.  We have always been at war with doctests.  Thanks to prestontimmons for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14221 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,7bc94b58bf4e139b669d023e0fb10ce380fc89f6,"Refs #13614 -- Added test for admin's many-to-many widget data loss bug.

It looks like browsers have fixed the reported issue.",False
523da8771bce321023f490f70d71a9e973ddc927,f7969b0920c403118656f6bfec58d6454d79ef1a,Fixed #23620 -- Used more specific assertions in the Django test suite.,False
523da8771bce321023f490f70d71a9e973ddc927,cd914e31c9a889f18c50c15b4f6ee4959624001f,Fixed #21977 -- Deprecated SimpleTestCase.urls,False
523da8771bce321023f490f70d71a9e973ddc927,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
523da8771bce321023f490f70d71a9e973ddc927,bf33d3eb1d20157a09b4bf1f36f9c928bc1cabc7,"Fixed #12444 - Date based widgets now correctly handle input values when using locale-aware formatting. Also fixes #7656.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12029 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
523da8771bce321023f490f70d71a9e973ddc927,2ed2db2ea3246c7f985ddfbb780850a23e851f9d,Replaced selenium.find_element_by_css_selector where by_id is sufficient.,False
523da8771bce321023f490f70d71a9e973ddc927,3bc6b18cb92462ff5ae54efd0fce5340e9149b0f,"Fixed selenium failure.

This fixes (at least according to tests on the ci itself)
admin_widgets.tests.RelatedFieldWidgetSeleniumFirefoxTests.test_foreign_key_using_to_field

(http://ci.djangoproject.com/job/Django/database=mysql_gis,python=python2.7/3792/testReport/junit/admin_widgets.tests/RelatedFieldWidgetSeleniumFirefoxTests/test_foreign_key_using_to_field/)

The cause for this issue seems to be that wait_page_loaded was executed before click fired
and as such no profile got saved (again just an educated guess, but with this fix I can no
longer reproduce it -- fingers crossed).",False
523da8771bce321023f490f70d71a9e973ddc927,2ccc0b22db6730ba0950b10bbc5238ae575e4a45,"Fixed #33211 -- Updated tests for Selenium 4.0.0.

Replaced deprecated `find_element[s]_by_*()` usages, in favour of
`find_element[s]()` with an explicit `By`.",False
523da8771bce321023f490f70d71a9e973ddc927,b120c74032c1131e46e4073db1298cf92c4e34c3,"Changed ""date"" column to ""start_date""--Oracle won't name columns with reserved keywords.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9764 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,0603f09318049e67320121ace035b7ab03f88ca3,Refs #25149 -- Fixed regression in admin datetime widget for timezones on the negative side of UTC.,False
523da8771bce321023f490f70d71a9e973ddc927,4e50e4065489f06d72eed8ce2d9ae98639be5a93,Removed unneeded conditional_escapes from the testsuite.,False
523da8771bce321023f490f70d71a9e973ddc927,845817b039fc059955bb1eafa5fd78565a49159d,"Fixed #24466 -- Added JavaScript escaping in a couple places in the admin.

Thanks Aymeric Augustin and Florian Apolloner for work on the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,0cc32a8f9782f0e465b4653012de9bc41e6d7db4,"Refs #22955 -- Added test for admin's many-to-many widget refresh data loss bug.

This was fixed by 4a438e400b7ce0ab9d0b6876196cbe8d620a4171.",False
523da8771bce321023f490f70d71a9e973ddc927,f55f2b9d74bf59d1b3ace5df5f498998eb62cb28,"Fixed #10059: `ModelAdmin.formfield_for_dbfield` now handles custom `Field` subclasses. Thanks, Alex Gaynor.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
523da8771bce321023f490f70d71a9e973ddc927,8fc8c958a5840df48a2bda110c6f06656968b156,Fixed broken selenium tests after 42b9a23267f14be39b9b00958e18d5746783208e.,False
523da8771bce321023f490f70d71a9e973ddc927,04e6542b5a904762a4e723c9b04ba5650ee9dc2e,"Fixed #19423 -- Prevented ModelAdmin sharing widgets due to formfield_overrides

Thanks joebuyer at manycycles.com for the report and Simon Charette
for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,2be621e44c1b5b68c895383f3e20b1f17ddb447a,"Fixed #14497 -- Improved admin widget for ""read only"" FileFields

Based on patch by Adam J Forster, Paul Collins, and Julien.",False
523da8771bce321023f490f70d71a9e973ddc927,92053acbb9160862c3e743a99ed8ccff8d4f8fd6,Fixed E128 flake8 warnings in tests/.,False
523da8771bce321023f490f70d71a9e973ddc927,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,2607fa901699916c4825f145fa8a84f49b8524ff,"Fixed #21774 -- Isolate all test urls from eachother.

This (nearly) completes the work to isolate all the test modules from
each other. This is now more important as importing models from another
module will case PendingDeprecationWarnings if those modules are not in
INSTALLED_APPS. The only remaining obvious dependencies are:

- d.c.auth depends on d.c.admin (because of the is_admin flag to some
  views), but this is not so important and d.c.admin is in
  always_installed_apps
- test_client_regress depends on test_client. Eventually these should
  become a single module, as the split serves no useful purpose.",False
523da8771bce321023f490f70d71a9e973ddc927,e46c2326c8cfc038e015f55fd050ab5d7eb91b62,Fixed #31536 -- Fixed rendering of disabled AdminFileWidget and ClearableFileInput.,False
523da8771bce321023f490f70d71a9e973ddc927,af67ce5e18525ba52ee4533229468ed07f912536,Fixed #4574 -- Added CSS classes to the admin calendar widget for better control over styling.,False
523da8771bce321023f490f70d71a9e973ddc927,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,5c9901323ec07c399efbcf0fc6886a5f8a3f8589,"Fixed #12073 -- Made `AdminDateWidget` and `AdminTimeWidget` consider user-supplied `attrs`. Thanks to elliss for the report and to koenb for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17125 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,2a3a0eb09231f7cade8fd945bf4af1b251df12e3,Fixed #27905 -- Added RelatedFieldWidgetWrapper.value_omitted_from_data().,False
523da8771bce321023f490f70d71a9e973ddc927,32e6a7d3a57b2287d55e8b8efa4e8cb7643b1720,"Replaced hardcoded URLs in admin_* tests

Refs #15779. This will allow easier admin URL changes, when needed.
Thanks Simon Charette for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,9e04c3b7444ba136efa03896a67e46d2e7045e28,"Fixed #13149 -- The admin `ForeignKeyRawIdWidget` now properly handles non-integer values.  Thanks, Chris Adams.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@13751 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,491419b5ffac3752a1c1804a763c017a2ed82e16,"Made m2m fields form help_text munging specific to admin widgets.

Refs #9321 and follow-up to e80de93af6a0a21a9063a55c4d6d20e3927243e9.",False
523da8771bce321023f490f70d71a9e973ddc927,b1e33ceceda1e75ff68c7deed8f6659683a195d3,Fixed #23395 -- Limited line lengths to 119 characters.,False
523da8771bce321023f490f70d71a9e973ddc927,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
523da8771bce321023f490f70d71a9e973ddc927,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
523da8771bce321023f490f70d71a9e973ddc927,f6a0b7cfe31367935cd124907b54fdd0b87ce261,"Fixed #14407 -- Simplified ManyToManyRawIdWidget.value_from_datadict, Thanks tyrion!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14283 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,655d5afea9d1f3d5aa55efc9fe77a14b353e35a6,"Fixed #14880 - raw_id_fields in admin does not work when limit_choices_to dictionary has value=False

Thanks to smallming for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,c24bdf044ba23f2aa09ea4637a368ea86fd1c128,"Fixed #15103 - SuspiciousOperation with limit_choices_to and raw_id_fields

Thanks to natrius for the report.

This patch also fixes some unicode bugs in affected code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
523da8771bce321023f490f70d71a9e973ddc927,94cd8efc50c717cd00244f4b2233f971a53b205e,"Fixed #14370 -- Allowed using a Select2 widget for ForeignKey and ManyToManyField in the admin.

Thanks Florian Apolloner and Tim Graham for review and
contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,3a807a6f597a97b0fa514039a8ea41fb90769981,Fixed #31365 -- Removed jQuery usage in SelectFilter2.js.,False
523da8771bce321023f490f70d71a9e973ddc927,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
523da8771bce321023f490f70d71a9e973ddc927,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
523da8771bce321023f490f70d71a9e973ddc927,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,a2f7433adc610cb0a85b3e23a1fec2267591f866,Fixed #29221 -- Corrected admin's autocomplete widget to add a space after custom classes.,False
523da8771bce321023f490f70d71a9e973ddc927,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
523da8771bce321023f490f70d71a9e973ddc927,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,fbb73894395b728ec96c661da6f87523718c5398,Ticket #17804 fix.,False
523da8771bce321023f490f70d71a9e973ddc927,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
523da8771bce321023f490f70d71a9e973ddc927,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
523da8771bce321023f490f70d71a9e973ddc927,540ae68a5cc6339c72375fad9b04dc48f3af4c93,"Fixed #27920 -- Restored empty RadioSelect choice producing value=""""

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.
Thanks Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
523da8771bce321023f490f70d71a9e973ddc927,8f6860863e34cb1cbe24161f1c4e7c79007e93dc,Fixed #30722 -- Added default rate-limiting requests to admin's Select2 widget.,False
523da8771bce321023f490f70d71a9e973ddc927,a9f5652113f0721a7066e359ae28d14692ea3c47,Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.,False
523da8771bce321023f490f70d71a9e973ddc927,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
523da8771bce321023f490f70d71a9e973ddc927,e17088a108e604cad23b000a83189fdd02a8a2f9,Fixed #29213 -- Fixed autocomplete widget's translations for zh-hans/zh-hant.,False
523da8771bce321023f490f70d71a9e973ddc927,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
523da8771bce321023f490f70d71a9e973ddc927,668571386926ff5453d0e11f59b0a89c0dc1dfa2,Fixed E127 pep8 warnings.,False
523da8771bce321023f490f70d71a9e973ddc927,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
523da8771bce321023f490f70d71a9e973ddc927,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,ba83378a7762c51be235b521aa5b48233d6c6c82,Fixed #29523 -- Removed jQuery usage in DateTimeShortcuts.js & collapse.js.,False
523da8771bce321023f490f70d71a9e973ddc927,8eb56930915f8022aa27ec29ab5be7d21764608c,Fixed #33070 -- Fixed loading translations with language subtags in admin's Select2 widget.,False
523da8771bce321023f490f70d71a9e973ddc927,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
523da8771bce321023f490f70d71a9e973ddc927,f6a0b7cfe31367935cd124907b54fdd0b87ce261,"Fixed #14407 -- Simplified ManyToManyRawIdWidget.value_from_datadict, Thanks tyrion!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14283 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,655d5afea9d1f3d5aa55efc9fe77a14b353e35a6,"Fixed #14880 - raw_id_fields in admin does not work when limit_choices_to dictionary has value=False

Thanks to smallming for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15348 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,c24bdf044ba23f2aa09ea4637a368ea86fd1c128,"Fixed #15103 - SuspiciousOperation with limit_choices_to and raw_id_fields

Thanks to natrius for the report.

This patch also fixes some unicode bugs in affected code.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15347 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
523da8771bce321023f490f70d71a9e973ddc927,3071660acfbdf4b5c59457c8e9dc345d5e8894c5,"Fixed #29010, Fixed #29138 -- Added limit_choices_to and to_field support to autocomplete fields.

* Fixed #29010 -- Added limit_choices_to support to autocomplete fields.
* Fixed #29138 -- Allowed autocomplete fields to target a custom
  to_field rather than the PK.",False
523da8771bce321023f490f70d71a9e973ddc927,94cd8efc50c717cd00244f4b2233f971a53b205e,"Fixed #14370 -- Allowed using a Select2 widget for ForeignKey and ManyToManyField in the admin.

Thanks Florian Apolloner and Tim Graham for review and
contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,3a807a6f597a97b0fa514039a8ea41fb90769981,Fixed #31365 -- Removed jQuery usage in SelectFilter2.js.,False
523da8771bce321023f490f70d71a9e973ddc927,825f0beda804e48e9197fcf3b0d909f9f548aa47,"Fixed #8936 -- Added a view permission and a read-only admin.

Co-authored-by: Petr Dlouhy <petr.dlouhy@email.cz>
Co-authored-by: Olivier Dalang <olivier.dalang@gmail.com>",False
523da8771bce321023f490f70d71a9e973ddc927,fb7e0e01af5364987de7fc95ae4d66e22130f2bc,Fixed #27850 -- Made RelatedFieldWidgetWrapper call render() of the wrapped widget.,False
523da8771bce321023f490f70d71a9e973ddc927,2dd4d110c159d0c81dff42eaead2c378a0998735,Fixed CVE-2020-13596 -- Fixed potential XSS in admin ForeignKeyRawIdWidget.,False
523da8771bce321023f490f70d71a9e973ddc927,a2f7433adc610cb0a85b3e23a1fec2267591f866,Fixed #29221 -- Corrected admin's autocomplete widget to add a space after custom classes.,False
523da8771bce321023f490f70d71a9e973ddc927,c832885a3e8659d4a704bf103d523b610c24e4ec,Fixed #29426 -- Made UUID inputs in the admin match the width of a UUID.,False
523da8771bce321023f490f70d71a9e973ddc927,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
523da8771bce321023f490f70d71a9e973ddc927,fbb73894395b728ec96c661da6f87523718c5398,Ticket #17804 fix.,False
523da8771bce321023f490f70d71a9e973ddc927,deeba6d92006999fee9adfbd8be79bf0a59e8008,Fixed CVE-2019-12308 -- Made AdminURLFieldWidget validate URL before rendering clickable link.,False
523da8771bce321023f490f70d71a9e973ddc927,05e29da4212fa9f590d7bd10767ebacb25acfde9,"Fixed #32545 -- Improved admin widget for raw_id_fields for UUIDFields.

Co-Authored-By: Jerome Leclanche <jerome@leclan.ch>",False
523da8771bce321023f490f70d71a9e973ddc927,540ae68a5cc6339c72375fad9b04dc48f3af4c93,"Fixed #27920 -- Restored empty RadioSelect choice producing value=""""

Regression in b52c73008a9d67e9ddbb841872dc15cdd3d6ee01.
Thanks Tim Graham for the review.",False
523da8771bce321023f490f70d71a9e973ddc927,d13a9e44ded4e93570c6ba42ec84e45ddca2505b,Fixed #28909 -- Simplified code using tuple/list/set/dict unpacking.,False
523da8771bce321023f490f70d71a9e973ddc927,8f6860863e34cb1cbe24161f1c4e7c79007e93dc,Fixed #30722 -- Added default rate-limiting requests to admin's Select2 widget.,False
523da8771bce321023f490f70d71a9e973ddc927,a9f5652113f0721a7066e359ae28d14692ea3c47,Fixed #28529 -- Fixed VariableDoesNotExist warnings in admin templates.,False
523da8771bce321023f490f70d71a9e973ddc927,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
523da8771bce321023f490f70d71a9e973ddc927,e17088a108e604cad23b000a83189fdd02a8a2f9,Fixed #29213 -- Fixed autocomplete widget's translations for zh-hans/zh-hant.,False
523da8771bce321023f490f70d71a9e973ddc927,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
523da8771bce321023f490f70d71a9e973ddc927,668571386926ff5453d0e11f59b0a89c0dc1dfa2,Fixed E127 pep8 warnings.,False
523da8771bce321023f490f70d71a9e973ddc927,03d0f12c823239812da21e5180aaa74dc6fd146e,"Fixed #32466 -- Corrected autocomplete to_field resolution for complex cases.

In MTI or ForeignKey as primary key cases, it is required to fetch the attname
from the field instance on the remote model in order to reliably resolve the
to_field_name.

Co-authored-by: Johannes Maron <info@johanneshoppe.com>
Co-authored-by: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Co-authored-by: Carlton Gibson <carlton.gibson@noumenal.es>",False
523da8771bce321023f490f70d71a9e973ddc927,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
523da8771bce321023f490f70d71a9e973ddc927,ba83378a7762c51be235b521aa5b48233d6c6c82,Fixed #29523 -- Removed jQuery usage in DateTimeShortcuts.js & collapse.js.,False
523da8771bce321023f490f70d71a9e973ddc927,8eb56930915f8022aa27ec29ab5be7d21764608c,Fixed #33070 -- Fixed loading translations with language subtags in admin's Select2 widget.,False
523da8771bce321023f490f70d71a9e973ddc927,89a2216486fa8a0513cbb1d49d2d587d4116c60b,Fixed #29961 -- Made RelatedFieldWidgetWrapper hide related item links if wrapping a hidden widget.,False
523da8771bce321023f490f70d71a9e973ddc927,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
523da8771bce321023f490f70d71a9e973ddc927,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
523da8771bce321023f490f70d71a9e973ddc927,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
523da8771bce321023f490f70d71a9e973ddc927,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
382ab137312961ad62feb8109d70a5a581fe8350,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
382ab137312961ad62feb8109d70a5a581fe8350,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
553779c4055e8742cc832ed525b9ee34b174934f,3cbe686af6b6a3f23a607b2eb7497c55d88e8345,"Fixed #18675 -- Fixed was_modified_since with floating-point mtime

Thanks Simon Charette for the patch.",False
553779c4055e8742cc832ed525b9ee34b174934f,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
553779c4055e8742cc832ed525b9ee34b174934f,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
553779c4055e8742cc832ed525b9ee34b174934f,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
553779c4055e8742cc832ed525b9ee34b174934f,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
553779c4055e8742cc832ed525b9ee34b174934f,57c6617c92959856e8cacd809f0e29f57df4f318,Minor optimization in the static serve view.,False
553779c4055e8742cc832ed525b9ee34b174934f,3cbe686af6b6a3f23a607b2eb7497c55d88e8345,"Fixed #18675 -- Fixed was_modified_since with floating-point mtime

Thanks Simon Charette for the patch.",False
553779c4055e8742cc832ed525b9ee34b174934f,57c6617c92959856e8cacd809f0e29f57df4f318,Minor optimization in the static serve view.,False
053cc9534d174dc89daba36724ed2dcb36755b90,f163ad5c638f79d3fd0e76bed0e15e6928fae1f5,"[2.2.x] Added stub release notes and date for Django 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
053cc9534d174dc89daba36724ed2dcb36755b90,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
053cc9534d174dc89daba36724ed2dcb36755b90,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
053cc9534d174dc89daba36724ed2dcb36755b90,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
053cc9534d174dc89daba36724ed2dcb36755b90,511a53b3142551a1bc3093ed1b6655f57634f510,"Avoided exceptions in admindocs' template detail view.

This is marginally better than crashing when several Django template
engines are configured in a project.

Refs #24125.",False
053cc9534d174dc89daba36724ed2dcb36755b90,a2fb2b3a1feee512131c76e9040232faf2362526,Fixed #27020 -- Used a context manager to close files.,False
053cc9534d174dc89daba36724ed2dcb36755b90,24f4764a48e4141923a78c8820e4cd7b411ec0fc,"Fixed #16225 -- Removed unused imports. Many thanks to Aymeric Augustin for the work on the patch and Alex for reviewing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16539 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
053cc9534d174dc89daba36724ed2dcb36755b90,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
053cc9534d174dc89daba36724ed2dcb36755b90,f163ad5c638f79d3fd0e76bed0e15e6928fae1f5,"[2.2.x] Added stub release notes and date for Django 2.2.24.

Backport of b46dbd4e3e255223078ae0028934ea986e19ebc1 from main",False
053cc9534d174dc89daba36724ed2dcb36755b90,11b8c30b9e02ef6ecb996ad3280979dfeab700fa,Ref #23919 -- Replaced some os.path usage with pathlib.Path.,False
c14f325c4eef628bc7bfd8873c3a72aeb0219141,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c14f325c4eef628bc7bfd8873c3a72aeb0219141,63dd4f53220fa7a1962d69f1ea17ab03438bfd2a,"Fixed #3848 -- Added more comprehensive checks to ImageField validation, checking for image truncation or corruption. Thanks to Andrew C <andrewc-djangotrac1@piffle.org> for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6175 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c14f325c4eef628bc7bfd8873c3a72aeb0219141,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
c14f325c4eef628bc7bfd8873c3a72aeb0219141,63dd4f53220fa7a1962d69f1ea17ab03438bfd2a,"Fixed #3848 -- Added more comprehensive checks to ImageField validation, checking for image truncation or corruption. Thanks to Andrew C <andrewc-djangotrac1@piffle.org> for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6175 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,f026a519aea8f3ea7ca339bfbbb007e1ee0068b0,"Fixed #19733 - deprecated ModelForms without 'fields' or 'exclude', and added '__all__' shortcut

This also updates all dependent functionality, including modelform_factory
 and modelformset_factory, and the generic views `ModelFormMixin`,
 `CreateView` and `UpdateView` which gain a new `fields` attribute.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,6c9778a58e4f680db180d4cc9dc5639d2ec1b40c,"Fixed #30776 -- Restored max length validation on AuthenticationForm.UsernameField.

Regression in 5ceaf14686ce626404afb6a5fbd3d8286410bf13.

Thanks gopackgo90 for the report and Mariusz Felisiak for tests.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,874977d388decdd59022bf6b7f4d50caf2052155,Fixed #29270 -- Fixed UserChangeForm crash if password field is excluded.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,d8dfff2ab0edf7a1ca5255eccf45c447b2f9d57e,Fixed #32235 -- Made ReadOnlyPasswordHashField disabled by default.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,"Fixed CVE-2019-19844 -- Used verified user email for password reset requests.

Co-Authored-By: Florian Apolloner <florian@apolloner.eu>",False
4965bfdde2e5a5c883685019e57d123a3368a75e,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a1889397a9f0e6a35189de455098b4c70923e561,"Fixed #12103 -- Added AuthenticationForm.confirm_login_allowed to allow customizing the logic policy.

Thanks ejucovy and lasko for work on the patch.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,6ed347d8518e23d7e453bdb21f7fa59ce2c4a885,Fixed #28706 -- Moved AuthenticationFormn invalid login ValidationError to a method for reuse.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
4965bfdde2e5a5c883685019e57d123a3368a75e,999891bd80b3d02dd916731a7a239e1036174885,"Refs #29379 -- Moved autocomplete attribute to UsernameField.

Moving the autocomplete attribute into UsernameField allows this to work
for custom forms making use of UsernameField, removes some duplication
in the code, and keeps consistency with the autocapitalize attribute
that is already defined on UsernameField.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,ed4c2e1c0d9e43c09767b02fd8b4bd74a5dfe512,"Fixed #22329 -- Used label_tag() in some admin auth templates.

refs #17922.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,f3fa86a89b3b85242f49b2b9acf58b5ea35acc1f,"Fixed #29449 -- Reverted ""Fixed #28757 -- Allowed using contrib.auth forms without installing contrib.auth.""

This reverts commit 3333d935d2914cd80cf31f4803821ad5c0e2a51d due to
a crash if USERNAME_FIELD isn't a CharField.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,c82893cb8c6b2a4a876965426c5a5bc4590e1583,"Refs #27795 -- Removed force_bytes() usage from django/utils/http.py.

django.utils.http.urlsafe_base64_encode() now returns a string, not a
bytestring. Since URLs are represented as strings,
urlsafe_base64_encode() should return a string. All uses immediately
decoded the bytestring to a string anyway.

As the inverse operation, urlsafe_base64_decode() accepts a string.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a96b981d84367fd41b1df40adf3ac9ca71a741dd,Fixed #28127 -- Allowed UserCreationForm's password validation to check all user fields.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,d8d853378b3ff75c03d8bd91ea026d2b8c642b0f,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,cdad0b28d49eecb13773c112410f3c126fdd1625,Fixed #19573 -- Allow override of username field label in AuthenticationForm,False
4965bfdde2e5a5c883685019e57d123a3368a75e,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
4965bfdde2e5a5c883685019e57d123a3368a75e,0732c8e8c6e156d4d9a4a1cc02d631fe41342bf8,Fixed #20357 -- Allow empty username field label in `AuthentificationForm`.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
4965bfdde2e5a5c883685019e57d123a3368a75e,302caa40e4caab7d95ef7d0a88a90f935039ab09,Made small readability improvements.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,4b9330ccc04575f9e5126529ec355a450d12e77c,Fixed #25187 -- Made request available in authentication backends.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,dcb8f00d06eec99072b78d54215c9a3dc04acb99,"Fixed #29379 -- Added autocomplete attribute to contrib.auth.forms fields.

Thank you to Nick Pope for review.

Co-authored-by: CHI Cheng <cloudream@gmail.com>",False
4965bfdde2e5a5c883685019e57d123a3368a75e,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,1daae25bdcd735151de394a5578c22257e3e5dc7,Fixed #16860 -- Added password validation to django.contrib.auth.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,f026a519aea8f3ea7ca339bfbbb007e1ee0068b0,"Fixed #19733 - deprecated ModelForms without 'fields' or 'exclude', and added '__all__' shortcut

This also updates all dependent functionality, including modelform_factory
 and modelformset_factory, and the generic views `ModelFormMixin`,
 `CreateView` and `UpdateView` which gain a new `fields` attribute.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,6c9778a58e4f680db180d4cc9dc5639d2ec1b40c,"Fixed #30776 -- Restored max length validation on AuthenticationForm.UsernameField.

Regression in 5ceaf14686ce626404afb6a5fbd3d8286410bf13.

Thanks gopackgo90 for the report and Mariusz Felisiak for tests.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,18619a11eebc4139ec98ba254bcb760365d34db1,"Fixed behaviour of contrib.auth.forms.PasswordResetForm when more than
one User have the same e-mail address.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@5493 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,874977d388decdd59022bf6b7f4d50caf2052155,Fixed #29270 -- Fixed UserChangeForm crash if password field is excluded.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,d8dfff2ab0edf7a1ca5255eccf45c447b2f9d57e,Fixed #32235 -- Made ReadOnlyPasswordHashField disabled by default.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,5b1fbcef7a8bec991ebe7b2a18b5d5a95d72cb70,"Fixed CVE-2019-19844 -- Used verified user email for password reset requests.

Co-Authored-By: Florian Apolloner <florian@apolloner.eu>",False
4965bfdde2e5a5c883685019e57d123a3368a75e,42b9a23267f14be39b9b00958e18d5746783208e,"Fixed #30400 -- Improved typography of user facing strings.

Thanks Claude Paroz for assistance with translations.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,5df31c0164e9477a3ebb6b1bbde8604e06fbefd4,"Fixed #17194 -- Made sure the auth form tests work if a language other than English is activated by moving the error message translation strings into class level dictionaries. Many thanks to Claude Paroz, rabio and Bas Peschier for their initial work on this.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17204 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a1889397a9f0e6a35189de455098b4c70923e561,"Fixed #12103 -- Added AuthenticationForm.confirm_login_allowed to allow customizing the logic policy.

Thanks ejucovy and lasko for work on the patch.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,6ed347d8518e23d7e453bdb21f7fa59ce2c4a885,Fixed #28706 -- Moved AuthenticationFormn invalid login ValidationError to a method for reuse.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,0fa8d43e742ee8b480d938a47836b5a3720c2677,Replaced `and...or...` constructs with PEP 308 conditional expressions.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,ee77d4b25360a9fc050c32769a334fd69a011a63,Fixed #20199 -- Allow ModelForm fields to override error_messages from model fields,False
4965bfdde2e5a5c883685019e57d123a3368a75e,999891bd80b3d02dd916731a7a239e1036174885,"Refs #29379 -- Moved autocomplete attribute to UsernameField.

Moving the autocomplete attribute into UsernameField allows this to work
for custom forms making use of UsernameField, removes some duplication
in the code, and keeps consistency with the autocapitalize attribute
that is already defined on UsernameField.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a00b78b1e2ac9bf271d55c1799138a27f5e0d03e,"Fixed #17431 -- Added send_mail() method to PasswordResetForm.

Credits for the initial patch go to ejucovy;
big thanks to Tim Graham for the review.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,ed4c2e1c0d9e43c09767b02fd8b4bd74a5dfe512,"Fixed #22329 -- Used label_tag() in some admin auth templates.

refs #17922.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,f3fa86a89b3b85242f49b2b9acf58b5ea35acc1f,"Fixed #29449 -- Reverted ""Fixed #28757 -- Allowed using contrib.auth forms without installing contrib.auth.""

This reverts commit 3333d935d2914cd80cf31f4803821ad5c0e2a51d due to
a crash if USERNAME_FIELD isn't a CharField.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,c82893cb8c6b2a4a876965426c5a5bc4590e1583,"Refs #27795 -- Removed force_bytes() usage from django/utils/http.py.

django.utils.http.urlsafe_base64_encode() now returns a string, not a
bytestring. Since URLs are represented as strings,
urlsafe_base64_encode() should return a string. All uses immediately
decoded the bytestring to a string anyway.

As the inverse operation, urlsafe_base64_decode() accepts a string.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,a96b981d84367fd41b1df40adf3ac9ca71a741dd,Fixed #28127 -- Allowed UserCreationForm's password validation to check all user fields.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,d8d853378b3ff75c03d8bd91ea026d2b8c642b0f,Fixed #24944 -- Added extra_email_context parameter to password_reset() view.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,656360c24044e06c881baa648f2aad9d671c3bd8,"Fixed #12202 -- Removed hardcoded password reset subject and added a subject_template_name parameter to the password_reset view. Thanks, Ramiro Morales, Claude Paroz and agabel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16438 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,fcd837cd0f9b2c706bc49af509628778d442bb3f,"Fixed #7723 - implemented a secure password reset form that uses a token and prompts user for new password.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8162 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,cdad0b28d49eecb13773c112410f3c126fdd1625,Fixed #19573 -- Allow override of username field label in AuthenticationForm,False
4965bfdde2e5a5c883685019e57d123a3368a75e,617e36dc1ede2a311dfd03f18432b31cbfe4c0f7,Fixed #20705 -- Allowed using PasswordResetForm with user models with an email field not named 'email'.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,28986da4ca167ae257abcaf7caea230eca2bcd80,Fixed #5986 -- Added ability to customize order of Form fields,False
4965bfdde2e5a5c883685019e57d123a3368a75e,0732c8e8c6e156d4d9a4a1cc02d631fe41342bf8,Fixed #20357 -- Allow empty username field label in `AuthentificationForm`.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
4965bfdde2e5a5c883685019e57d123a3368a75e,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
4965bfdde2e5a5c883685019e57d123a3368a75e,302caa40e4caab7d95ef7d0a88a90f935039ab09,Made small readability improvements.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,4b9330ccc04575f9e5126529ec355a450d12e77c,Fixed #25187 -- Made request available in authentication backends.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,dcb8f00d06eec99072b78d54215c9a3dc04acb99,"Fixed #29379 -- Added autocomplete attribute to contrib.auth.forms fields.

Thank you to Nick Pope for review.

Co-authored-by: CHI Cheng <cloudream@gmail.com>",False
4965bfdde2e5a5c883685019e57d123a3368a75e,33242fe015a9519748cd328939dca3136f462344,"Fixed #19019 -- Fixed UserAdmin to log password change.

Thanks Tuttle for the report.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,e4aabf3f0f1638c8171962f92a8f8e9954c8636a,"[4.1.x] Added stub release notes for 4.1.13 and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,e4aabf3f0f1638c8171962f92a8f8e9954c8636a,"[4.1.x] Added stub release notes for 4.1.13 and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
4965bfdde2e5a5c883685019e57d123a3368a75e,e4aabf3f0f1638c8171962f92a8f8e9954c8636a,"[4.1.x] Added stub release notes for 4.1.13 and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
4965bfdde2e5a5c883685019e57d123a3368a75e,e4aabf3f0f1638c8171962f92a8f8e9954c8636a,"[4.1.x] Added stub release notes for 4.1.13 and 3.2.23.

Backport of fdd1323b9c83e56184e0c992af8faf8d54327775 from main.",False
6d61860b22875f358fac83d903dc629897934815,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
6d61860b22875f358fac83d903dc629897934815,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
6d61860b22875f358fac83d903dc629897934815,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
6d61860b22875f358fac83d903dc629897934815,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
6d61860b22875f358fac83d903dc629897934815,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6d61860b22875f358fac83d903dc629897934815,eaa17e13e849a18b0b0fb19468bd65a31b86b3b7,"Fixed #12705 -- Date/time and select filter widgets now work again with newly added inline forms in the admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
6d61860b22875f358fac83d903dc629897934815,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
6d61860b22875f358fac83d903dc629897934815,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
6d61860b22875f358fac83d903dc629897934815,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
6d61860b22875f358fac83d903dc629897934815,1d32bdd3c9586ff10d0799264105850fa7e3f512,"Fixed #15252 -- Added static template tag and CachedStaticFilesStorage to staticfiles contrib app.

Many thanks to Florian Apolloner and Jacob Kaplan-Moss for reviewing and eagle eyeing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16594 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
6d61860b22875f358fac83d903dc629897934815,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
6d61860b22875f358fac83d903dc629897934815,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6d61860b22875f358fac83d903dc629897934815,559c0da7c141488e5d7c6bc0ef54f27dca53ca42,"Fixed a small initialisation edge-case in the raw_id_fields section of admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8951 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,726ded5708e4e8767e69a6f6f6a039e75667ce03,Started attackign the next flake8 violation,False
6d61860b22875f358fac83d903dc629897934815,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
6d61860b22875f358fac83d903dc629897934815,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
6d61860b22875f358fac83d903dc629897934815,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
6d61860b22875f358fac83d903dc629897934815,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,859eeaa0f0b04c2644237ff04e6632b2f40475cb,Fixed #26533 -- Renamed Widget._format_value() to format_value().,False
6d61860b22875f358fac83d903dc629897934815,926e90132dc15d76bb8d16e2f9f1279566cac3c3,Fixed #25731 -- Removed unused choices kwarg for Select.render(),False
6d61860b22875f358fac83d903dc629897934815,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
6d61860b22875f358fac83d903dc629897934815,941e11e54d175f4ffc769852e5dd376ec1ba5239,"Fixed #14363 -- Fixed render method of ManyToManyRawIdWidget to set attrs to an empty dict. Thanks, tyrion and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13971 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,18ffdb1772ba60e085cff8fd9a1d4a7b129b4032,"Fixed #17627 -- Renamed util.py files to utils.py

Thanks PaulM for the suggestion and Luke Granger-Brown and
Wiktor Kołodziej for the initial patch.",False
6d61860b22875f358fac83d903dc629897934815,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
6d61860b22875f358fac83d903dc629897934815,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
6d61860b22875f358fac83d903dc629897934815,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
6d61860b22875f358fac83d903dc629897934815,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
6d61860b22875f358fac83d903dc629897934815,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
6d61860b22875f358fac83d903dc629897934815,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
6d61860b22875f358fac83d903dc629897934815,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6d61860b22875f358fac83d903dc629897934815,eaa17e13e849a18b0b0fb19468bd65a31b86b3b7,"Fixed #12705 -- Date/time and select filter widgets now work again with newly added inline forms in the admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
6d61860b22875f358fac83d903dc629897934815,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
6d61860b22875f358fac83d903dc629897934815,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
6d61860b22875f358fac83d903dc629897934815,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
6d61860b22875f358fac83d903dc629897934815,1d32bdd3c9586ff10d0799264105850fa7e3f512,"Fixed #15252 -- Added static template tag and CachedStaticFilesStorage to staticfiles contrib app.

Many thanks to Florian Apolloner and Jacob Kaplan-Moss for reviewing and eagle eyeing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16594 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
6d61860b22875f358fac83d903dc629897934815,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
6d61860b22875f358fac83d903dc629897934815,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
6d61860b22875f358fac83d903dc629897934815,559c0da7c141488e5d7c6bc0ef54f27dca53ca42,"Fixed a small initialisation edge-case in the raw_id_fields section of admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8951 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,726ded5708e4e8767e69a6f6f6a039e75667ce03,Started attackign the next flake8 violation,False
6d61860b22875f358fac83d903dc629897934815,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
6d61860b22875f358fac83d903dc629897934815,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
6d61860b22875f358fac83d903dc629897934815,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
6d61860b22875f358fac83d903dc629897934815,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,859eeaa0f0b04c2644237ff04e6632b2f40475cb,Fixed #26533 -- Renamed Widget._format_value() to format_value().,False
6d61860b22875f358fac83d903dc629897934815,926e90132dc15d76bb8d16e2f9f1279566cac3c3,Fixed #25731 -- Removed unused choices kwarg for Select.render(),False
6d61860b22875f358fac83d903dc629897934815,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
6d61860b22875f358fac83d903dc629897934815,941e11e54d175f4ffc769852e5dd376ec1ba5239,"Fixed #14363 -- Fixed render method of ManyToManyRawIdWidget to set attrs to an empty dict. Thanks, tyrion and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13971 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,18ffdb1772ba60e085cff8fd9a1d4a7b129b4032,"Fixed #17627 -- Renamed util.py files to utils.py

Thanks PaulM for the suggestion and Luke Granger-Brown and
Wiktor Kołodziej for the initial patch.",False
6d61860b22875f358fac83d903dc629897934815,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
6d61860b22875f358fac83d903dc629897934815,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
6d61860b22875f358fac83d903dc629897934815,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
6d61860b22875f358fac83d903dc629897934815,931c60c5216bd71bc11f489e00e063331cf21f40,"Refs #28814 -- Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7.

Due to https://bugs.python.org/issue32012.",False
6d61860b22875f358fac83d903dc629897934815,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
6d61860b22875f358fac83d903dc629897934815,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
6d61860b22875f358fac83d903dc629897934815,931c60c5216bd71bc11f489e00e063331cf21f40,"Refs #28814 -- Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7.

Due to https://bugs.python.org/issue32012.",False
6d61860b22875f358fac83d903dc629897934815,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
6d61860b22875f358fac83d903dc629897934815,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
1966786d2dde73e17f39cf340eb33fcb5d73904e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1966786d2dde73e17f39cf340eb33fcb5d73904e,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1966786d2dde73e17f39cf340eb33fcb5d73904e,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
1966786d2dde73e17f39cf340eb33fcb5d73904e,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,b6af8b6f2e15f4302205975d8519a8c0f5650e57,"[1.9.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,9c8c39be1ec5ed058914f2385bcf12de0126ac82,"Fixed #2462 -- Changed showRelatedObjectLookupPopup to open a window that's 800-pixels wide. Thanks for reporting, patrick@vonautomatisch.at

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3517 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,ac6164948efc541fc19b27e3968c330aa424d667,"Fixed JavaScript ""curly"" violations.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,38d972b9ecb01fdb863c686de0b958389bc20220,"Fixed #5880 -- Fixed an XSS hole in the admin interface.
 * Escaped text that gets sent after saving the admin foreignkey popup form.
 * Added quotes around the second argument passed to `opener.dismissAddAnotherPopup` to make the function also work when a text field is used as the primary key.
 * Added a `html_unescape` javascript function to unescape the strings passed in to the `dismissAddAnotherPopup` function so that the added choice displays correctly in the dropdown box.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6691 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,808b3f4b9180dbcd4a8a84323b44a58b9bcdbd4a,"Fixed #106 - ""Add another"" now correctly works in IE - thanks, Paolo


git-svn-id: http://code.djangoproject.com/svn/django/trunk@716 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,7d374ad5973ff5b14e996a38e078c7d46646ae5d,"Added raw_id_admin support to ManyToManyField objects; fixes #260


git-svn-id: http://code.djangoproject.com/svn/django/trunk@516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,1dae4ac1778f04805c0ed62c8debb13b281ba02b,"Whitespace cleanup.

* Removed trailing whitespace.
* Added newline to EOF if missing.
* Removed blank lines at EOF.
* Removed some stray tabs.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,6d39cb4119a0fa502fca1f9b3d07436fbd258655,"Fixed #5704 - Admin popup windows won't close when using application/xhtml as default content type

Thanks to Rob van der Linde for the report, and to mb0, dArignac and claudep
for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,c7078ff0a272ab81412b08561ae49fae27f20d3e,"Fixed #106 -- Refrain from generating popup window names that IE refuses to pop up.  Thanks for the reports and initial patches nbstrite and jsmullyan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9403 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,3723f8379887a3f47d70ca1e8b743154d62beac0,"Fixed #1404 (thanks, Tom Tobin)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2413 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,688cd557086dcd7b497775765899559575de33a2,"Fixed #1635 -- Admin-site related-object popup no longer fails for edit_inline objects in IE/Win. Thanks, Christopher Lenz

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3066 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,ec4f219ecb7a5e43d0353633fac4dac42d0ee492,Fixed #22463 -- Added code style guide and JavaScript linting (EditorConfig and ESLint),False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,6eaf154a2e81d21d02f3597dd0e3dad01db8d07c,"Fixed #9341: add another on `ManyToManyField`s with `raw_id_admins` now works correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,9c8c39be1ec5ed058914f2385bcf12de0126ac82,"Fixed #2462 -- Changed showRelatedObjectLookupPopup to open a window that's 800-pixels wide. Thanks for reporting, patrick@vonautomatisch.at

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3517 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,ac6164948efc541fc19b27e3968c330aa424d667,"Fixed JavaScript ""curly"" violations.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,38d972b9ecb01fdb863c686de0b958389bc20220,"Fixed #5880 -- Fixed an XSS hole in the admin interface.
 * Escaped text that gets sent after saving the admin foreignkey popup form.
 * Added quotes around the second argument passed to `opener.dismissAddAnotherPopup` to make the function also work when a text field is used as the primary key.
 * Added a `html_unescape` javascript function to unescape the strings passed in to the `dismissAddAnotherPopup` function so that the added choice displays correctly in the dropdown box.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6691 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,dd5320d1d56ca7603747dd68871e72eee99d9e67,"Added admin media to the Django distribution

git-svn-id: http://code.djangoproject.com/svn/django/trunk@96 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,808b3f4b9180dbcd4a8a84323b44a58b9bcdbd4a,"Fixed #106 - ""Add another"" now correctly works in IE - thanks, Paolo


git-svn-id: http://code.djangoproject.com/svn/django/trunk@716 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,7d374ad5973ff5b14e996a38e078c7d46646ae5d,"Added raw_id_admin support to ManyToManyField objects; fixes #260


git-svn-id: http://code.djangoproject.com/svn/django/trunk@516 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,1dae4ac1778f04805c0ed62c8debb13b281ba02b,"Whitespace cleanup.

* Removed trailing whitespace.
* Added newline to EOF if missing.
* Removed blank lines at EOF.
* Removed some stray tabs.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,6d39cb4119a0fa502fca1f9b3d07436fbd258655,"Fixed #5704 - Admin popup windows won't close when using application/xhtml as default content type

Thanks to Rob van der Linde for the report, and to mb0, dArignac and claudep
for the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@17065 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,68c9a72e29c929d896a25b3a0f566c09b6723dd4,"Fixed #22894 -- Made admin add related/raw ID fields widgets customizable.

Decoupled behavior and style from the RelatedFieldWidgetWrapper and
ForeignKeyRawIdWidget.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,c7078ff0a272ab81412b08561ae49fae27f20d3e,"Fixed #106 -- Refrain from generating popup window names that IE refuses to pop up.  Thanks for the reports and initial patches nbstrite and jsmullyan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@9403 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,3723f8379887a3f47d70ca1e8b743154d62beac0,"Fixed #1404 (thanks, Tom Tobin)

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2413 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,688cd557086dcd7b497775765899559575de33a2,"Fixed #1635 -- Admin-site related-object popup no longer fails for edit_inline objects in IE/Win. Thanks, Christopher Lenz

git-svn-id: http://code.djangoproject.com/svn/django/trunk@3066 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,ec4f219ecb7a5e43d0353633fac4dac42d0ee492,Fixed #22463 -- Added code style guide and JavaScript linting (EditorConfig and ESLint),False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,6eaf154a2e81d21d02f3597dd0e3dad01db8d07c,"Fixed #9341: add another on `ManyToManyField`s with `raw_id_admins` now works correctly.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10452 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,fbb4f0797cc44fe2dedda38d1c681fe09473859e,"Fixed JavaScript ""strict"" violations.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,b35ff0d9208c426cc0f67c65d724972974734f57,Fixed all the E203 violations,False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,d7848c11e008ddeb036a95d389caa3b2c97b795e,"Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,c80d85d4ad05ee905321e410e1a3e7a49d730233,"[1.9.x] Fixed #25903 -- Fixed the admin's list_editable add/change buttons.

Backport of f18b08748abaecb171fdcbcdfdcd7e4d95d931d1 from master",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,747c546bf591c0489953a7ed507ecb9fe31d3fd9,"[1.9.x] Added stub release notes for 1.9.8.

Backport of 01e567864ef9d9892e7181b62f7c51a1b9f76e37 from master",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,b6af8b6f2e15f4302205975d8519a8c0f5650e57,"[1.9.x] Fixed #26889 -- Fixed missing PostgreSQL index in SchemaEditor.add_field().

Backport of 2e4cfcd2b9a0984ad6c4087a5deebbf33413835c from master",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,fbb4f0797cc44fe2dedda38d1c681fe09473859e,"Fixed JavaScript ""strict"" violations.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,d7848c11e008ddeb036a95d389caa3b2c97b795e,"Fixed #25147 -- Fixed debug view copy-paste/interactive toggle.

The whitespace added in 1101467ce0756272a54f4c7bc65c4c335a94111b
broke the initial comparison.",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,0710243ea12f9f88189197703d4c2e9e2e9fe741,"Added ""pretty"" error pages to be used when DEBUG is True.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@1233 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,c80d85d4ad05ee905321e410e1a3e7a49d730233,"[1.9.x] Fixed #25903 -- Fixed the admin's list_editable add/change buttons.

Backport of f18b08748abaecb171fdcbcdfdcd7e4d95d931d1 from master",False
d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158,747c546bf591c0489953a7ed507ecb9fe31d3fd9,"[1.9.x] Added stub release notes for 1.9.8.

Backport of 01e567864ef9d9892e7181b62f7c51a1b9f76e37 from master",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,788fa9fffa0105d391b8fe35f2894bc5b4e29066,Fixed #12098 -- Simplified HttpRequest.__repr__().,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,ceecc962ad8f6bbbc2b989aec53eee6c6cca04b9,"Fixed #21447 -- Restored code erroneously removed in 20472aa827669d2b83b74e521504e88e18d086a1.

Also added some tests for HttpRequest.__repr__.
Note that the added tests don't actually catch the accidental code
removal (see ticket) but they do cover a codepath that wasn't tested
before.

Thanks to Tom Christie for the report and the original patch.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,788fa9fffa0105d391b8fe35f2894bc5b4e29066,Fixed #12098 -- Simplified HttpRequest.__repr__().,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,ceecc962ad8f6bbbc2b989aec53eee6c6cca04b9,"Fixed #21447 -- Restored code erroneously removed in 20472aa827669d2b83b74e521504e88e18d086a1.

Also added some tests for HttpRequest.__repr__.
Note that the added tests don't actually catch the accidental code
removal (see ticket) but they do cover a codepath that wasn't tested
before.

Thanks to Tom Christie for the report and the original patch.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,8f8c54f70bfa3aa8e311514297f1eeded2c32593,Fixed #25099 -- Cleaned up HttpRequest representations in error reporting.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,d63ee2097f4d0f0094e8e472de2236558e98a348,"Migrated requests doctests. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,02dda22832d313bde18798b2f5f1e9120a849815,"Don't use : as an invalid cookie character

Since http://bugs.python.org/issue2193 has been resolved in favour of
the colon in cookie names, we need to test invalid cookie removal using
a different character. ""@"" is still considered invalid by all sources.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,c91667338a4e774e2819ccf4da852dc7b759bc19,"Fixed #19357 -- Allow non-ASCII chars in filesystem paths

Thanks kujiu for the report and Aymeric Augustin for the review.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,3c45fb8589bfff580bb4d9d3c13172183c597abd,"Fixed #10491 -- Allowed passing lazy objects to HttpResponseRedirect.

Thanks liangent for the report.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0242134d32aa99a54442211ed05576b7061866d1,"Fixed #17942 -- Added a JsonResponse class to more easily create JSON encoded responses.

Thanks leahculver for the suggestion and Erik Romijn,
Simon Charette, and Marc Tamlyn for the reviews.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,c91667338a4e774e2819ccf4da852dc7b759bc19,"Fixed #19357 -- Allow non-ASCII chars in filesystem paths

Thanks kujiu for the report and Aymeric Augustin for the review.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4b27813198ae31892f1159d437e492f7745761a0,"Fixed #7581 -- Added streaming responses.

Thanks mrmachine and everyone else involved on this long-standing ticket.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,3c45fb8589bfff580bb4d9d3c13172183c597abd,"Fixed #10491 -- Allowed passing lazy objects to HttpResponseRedirect.

Thanks liangent for the report.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,4129201c3e0fa057c198bdefcb34686a23b4a93c,Fixed a security issue in http redirects. Disclosure and new release forthcoming.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,44c09de555f83b0596a0886e3f51a9a84368d036,"Fixed #18678 -- HttpResponse init arguments allowed for subclasses

Thanks hp1337@gmail.com for the report.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0242134d32aa99a54442211ed05576b7061866d1,"Fixed #17942 -- Added a JsonResponse class to more easily create JSON encoded responses.

Thanks leahculver for the suggestion and Erik Romijn,
Simon Charette, and Marc Tamlyn for the reviews.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,8f8c54f70bfa3aa8e311514297f1eeded2c32593,Fixed #25099 -- Cleaned up HttpRequest representations in error reporting.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,d63ee2097f4d0f0094e8e472de2236558e98a348,"Migrated requests doctests. Thanks to Stephan Jaekel.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13927 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,02dda22832d313bde18798b2f5f1e9120a849815,"Don't use : as an invalid cookie character

Since http://bugs.python.org/issue2193 has been resolved in favour of
the colon in cookie names, we need to test invalid cookie removal using
a different character. ""@"" is still considered invalid by all sources.",False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
d1bc980db1c0fffd6d60677e62f70beadb9fe64a,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,3ee3d6b5f3f3b20c509ae1516354914c5e52f773,"Fixed #5898 -- Changed a few response processing paths to make things harder to get wrong and easier to get right. Previous behaviour wasn't buggy, but it was harder to use than necessary.

We now have automatic HEAD processing always (previously required ConditionalGetMiddleware), middleware benefits from the Location header rewrite, so they can use relative URLs as well, and responses with response codes 1xx, 204 or 304 will always have their content removed, in accordance with the HTTP spec (so it's much harder to indavertently deliver invalid responses).

Based on a patch and diagnosis from regexbot@gmail.com.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6662 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,1f5309a99e94aec310c1fcd9117559356db40a65,"Fixed #15046 -- Added ""CHROMEFRAME"" as a user agent alias for various MSIE fixes. Thanks to chrj for the report and patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15340 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,affca1369c85116022e42d34f8deae245ce654cd,"Fixed #16632 -- Crash on responses without Content-Type with IE. Thanks juan for the report and kenth for the patch.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17196 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
28e23306aa53bbbb8fb87db85f99d970b051026c,8975bba742151a6a3164d5c7df7d793f12a7c5c1,"Fixed #4148 -- Changed the way attachments are served to IE to avoid some
caching and header-related bugs there. Only comes into play when Internet
Explorer is the user-agent.

Patch from Michael Axiak, with testing from Axis_of_Entropy and Karen Tracey.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7856 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8a01c6b53169ee079cb21ac5919fdafcc8c5e172,6184cb9baa8426ed8b3e1fb5d96afac809dd2a0c,"[1.7.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
8a01c6b53169ee079cb21ac5919fdafcc8c5e172,6184cb9baa8426ed8b3e1fb5d96afac809dd2a0c,"[1.7.x] Fixed #25693 -- Prevented data loss with Prefetch and ManyToManyField.

Thanks to Jamie Matthews for finding and explaining the bug.

Backport of 4608573788c04fc047da42b4b7b48fdee8136ad3 from master",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,eaa17e13e849a18b0b0fb19468bd65a31b86b3b7,"Fixed #12705 -- Date/time and select filter widgets now work again with newly added inline forms in the admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,1d32bdd3c9586ff10d0799264105850fa7e3f512,"Fixed #15252 -- Added static template tag and CachedStaticFilesStorage to staticfiles contrib app.

Many thanks to Florian Apolloner and Jacob Kaplan-Moss for reviewing and eagle eyeing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16594 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,559c0da7c141488e5d7c6bc0ef54f27dca53ca42,"Fixed a small initialisation edge-case in the raw_id_fields section of admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8951 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,726ded5708e4e8767e69a6f6f6a039e75667ce03,Started attackign the next flake8 violation,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,859eeaa0f0b04c2644237ff04e6632b2f40475cb,Fixed #26533 -- Renamed Widget._format_value() to format_value().,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,926e90132dc15d76bb8d16e2f9f1279566cac3c3,Fixed #25731 -- Removed unused choices kwarg for Select.render(),False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,941e11e54d175f4ffc769852e5dd376ec1ba5239,"Fixed #14363 -- Fixed render method of ManyToManyRawIdWidget to set attrs to an empty dict. Thanks, tyrion and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13971 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,18ffdb1772ba60e085cff8fd9a1d4a7b129b4032,"Fixed #17627 -- Renamed util.py files to utils.py

Thanks PaulM for the suggestion and Luke Granger-Brown and
Wiktor Kołodziej for the initial patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,eaa17e13e849a18b0b0fb19468bd65a31b86b3b7,"Fixed #12705 -- Date/time and select filter widgets now work again with newly added inline forms in the admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12454 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,d638cdc42acec608c1967f44af6be32a477c239f,"Fixed #25165 -- Removed inline JavaScript from the admin.

This allows setting a Content-Security-Policy HTTP header
(refs #15727).

Special thanks to blighj, the original author of this patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,df8d8d4292684d6ffa7474f1e201aed486f02b53,Fixed E128 flake8 warnings in django/.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,0decef337f7f00d73b380531ac22cbc843d6e806,"Fixed #24405 -- Made admin related object JavaScript overridable

Consolidated it in one file and move the DOM related stuff to the
template so it is easily overridable. To override the popup behavior
you need to add handlers for the custom events triggered in the
admin_change_form_document_ready template block.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,1d32bdd3c9586ff10d0799264105850fa7e3f512,"Fixed #15252 -- Added static template tag and CachedStaticFilesStorage to staticfiles contrib app.

Many thanks to Florian Apolloner and Jacob Kaplan-Moss for reviewing and eagle eyeing.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16594 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,11cd7388f77aa9d12ab6b57285c3801b237e241b,Fixed #20989 -- Removed useless explicit list comprehensions.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,07988744b347302925bc6cc66511e34224db55ab,"Fixed #13165 -- Added edit and delete links to admin foreign key widgets.

Thanks to Collin Anderson for the review and suggestions and Tim for the
final review.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,559c0da7c141488e5d7c6bc0ef54f27dca53ca42,"Fixed a small initialisation edge-case in the raw_id_fields section of admin.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8951 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,726ded5708e4e8767e69a6f6f6a039e75667ce03,Started attackign the next flake8 violation,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,3bc0d46a840f17dce561daca8a6b8690b2cf5d0a,Fixed all E261 warnings,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,560b4207b1490a7d0cbf70cfbeba7daf2082e5be,"Removed redundant numbered parameters from str.format().

Since Python 2.7 and 3.1, ""{0} {1}"" is equivalent to ""{} {}"".",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,8bf8d0e0ecc1805480deb94feb4675b09d3b3a95,Fixed #7923 -- Added links to objects displayed by ModelAdmin.raw_id_fields.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a19ed8aea395e8e07164ff7d85bd7dff2f24edca,"Merged the newforms-admin branch into trunk.

This is a backward incompatible change. The admin contrib app has been
refactored. The newforms module has several improvements including FormSets
and Media definitions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@7967 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,859eeaa0f0b04c2644237ff04e6632b2f40475cb,Fixed #26533 -- Renamed Widget._format_value() to format_value().,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,926e90132dc15d76bb8d16e2f9f1279566cac3c3,Fixed #25731 -- Removed unused choices kwarg for Select.render(),False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,a92e7f37c4ae84b6b8d8016cc6783211e9047219,Changed a lot of internal code to use 'format_html' where appropriate/possible,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,941e11e54d175f4ffc769852e5dd376ec1ba5239,"Fixed #14363 -- Fixed render method of ManyToManyRawIdWidget to set attrs to an empty dict. Thanks, tyrion and dpn.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13971 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,2890c2295bbd9144e30a74e7be9d11b4903a5101,"Fixed #11465: Ensure nonexistent pks enterd in an admin raw id field do not
cause a server error. Thanks for report and initial patch sacre@wp.pl.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@12648 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,18ffdb1772ba60e085cff8fd9a1d4a7b129b4032,"Fixed #17627 -- Renamed util.py files to utils.py

Thanks PaulM for the suggestion and Luke Granger-Brown and
Wiktor Kołodziej for the initial patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,ac2052ebc84c45709ab5f0f25e685bf656ce79bc,Fixed #17549 -- Added a clickable link for URLFields in admin change list.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,cbe6d5568f4f5053ed7228ca3c3d0cce77cf9560,"Apply autoescaping to AdminURLFieldWidget.

This is a security fix; disclosure to follow shortly.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,290d7d4d21692336aeb074917acbf9804275fbdd,"Fixed #16542 -- Made Raw ID form widgets shipped with the admin app render the related object lookup tool only when the related model is effectively registered with the AdminSite.

Also, converted these widgets to reverse named URLs instead of hard-coded '../../...'-style links, refs #15294.
Thanks Florian Apolloner for the initial patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16578 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,931c60c5216bd71bc11f489e00e063331cf21f40,"Refs #28814 -- Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7.

Due to https://bugs.python.org/issue32012.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,931c60c5216bd71bc11f489e00e063331cf21f40,"Refs #28814 -- Fixed ""SyntaxError: Generator expression must be parenthesized"" on Python 3.7.

Due to https://bugs.python.org/issue32012.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,b52c73008a9d67e9ddbb841872dc15cdd3d6ee01,"Fixed #15667 -- Added template-based widget rendering.

Thanks Carl Meyer and Tim Graham for contributing to the patch.",False
1f2dd37f6fcefdd10ed44cb233b2e62b520afb38,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,68cc04887b3c5b7ce8f28eaae5de266db99ca9a6,Fixed #32866 -- Fixed trimming trailing punctuation from escaped string in urlize().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,23e886886249ebe8f80a48b0d25fbb5308eeb06f,Refs #34233 -- Used str.removeprefix()/removesuffix().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,e567670b1abe61af4acfaa6a6a7e92a7acfa8b00,"Fixed #33195 -- Refactored urlize() based on a class.

This allows easier customization/",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,8d76443aba863b75ad3b1392ca7e1d59bad84dc4,Fixed #30399 -- Changed django.utils.html.escape()/urlize() to use html.escape()/unescape().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,a21ec12409a5b72d602cd03ee925b6ceb1cd5492,Fixed #27803 -- Kept safe status of lazy safe strings in conditional_escape,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,1e3cd5116367a15e2c9855dced062de885e1f0f0,Simplified django.utils.html.urlize().,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,dec334cb66b3ee59cb82e1bb99a584aa0b9fbbd5,Fixed #26193 -- Made urlize() trim multiple trailing punctuation.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,fbb83fefd43a89d1a802d77dcc3a9c9ac15a5afa,Fixed typos in comments and docs.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,9c19aff7c7561e3a82978a272ecdaad40dda5c00,Refs #33476 -- Reformatted code with Black.,False
813de2672bd7361e9a453ab62cd6e52f96b6525b,15d10a5210378bba88c7dfa1f45a4d3528ddfc3f,"Fixed #11911 -- Made the urlize filter smarter with closing punctuation.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@17362 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,7285644640f085f41d60ab0c8ae4e9153f0485db,"[5.0.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,ccd958324dee6d0a53ea33a9e3851532980944f3,"[5.0.x] Added stub release notes and release date for 5.0.9 and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,ccd958324dee6d0a53ea33a9e3851532980944f3,"[5.0.x] Added stub release notes and release date for 5.0.9 and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,7285644640f085f41d60ab0c8ae4e9153f0485db,"[5.0.x] Fixed CVE-2024-38875 -- Mitigated potential DoS in urlize and urlizetrunc template filters.

Thank you to Elias Myllymäki for the report.

Co-authored-by: Sarah Boyce <42296566+sarahboyce@users.noreply.github.com>",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,ccd958324dee6d0a53ea33a9e3851532980944f3,"[5.0.x] Added stub release notes and release date for 5.0.9 and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
813de2672bd7361e9a453ab62cd6e52f96b6525b,ccd958324dee6d0a53ea33a9e3851532980944f3,"[5.0.x] Added stub release notes and release date for 5.0.9 and 4.2.16.

Backport of 67efd42517af0faf24872df4295b39e98ce826af from main.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,4a30e0db269a364cb480f48524fa48e6abcf9e94,"[4.0.x] Set date and added stub notes for 4.0.8 and 3.2.16 releases.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,6e222dae5636f875c19ec66f730a4241abe33faa,Fixed #27453 -- Avoided unnecessary recompilation of non-translated URL regexes.,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,301de774c21d055e9e5a7073e5bffdb52bc71079,"Refs #27795 -- Replaced many force_text() with str()

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,389a5318a06e7e4d8f8aba14af88c4cc4ea0db47,"Fixed #26888 -- Fixed concurrency issue in URL resolver.

Fixed a regression in 625b8e9295d79650208bfb3fca8bf9e6aaf578e4:
improper short-circuiting could lead to a KeyError when threads
concurrently call RegexURLResolver._populate().",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,625b8e9295d79650208bfb3fca8bf9e6aaf578e4,"Fixed #24931 -- Made namespaced RegexURLResolvers populate callback strings.

Fixed a regression in 2f16ff5a6cbd71fc6c50e88e4087f3657222e90e.

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,e7fa89fb58cc7ba468e0167f506dc4fce7ec532a,"Fixed #27262 -- Moved URL checks to resolver and pattern classes.

Thanks Sjoerd Job Postmus for the report and review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,839a955d08fa0657622ed9b60fdd262658fa659f,Fixed #25933 -- Allowed an unprefixed default language in i18n_patterns().,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,c22212220a7900173358a1f16179dcfc9e03de78,Refs #23919 -- Removed re.U and re.UNICODE (default on Python 3).,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,7b2f2e74adb36a4334e83130f6abc2f79d395235,"Refs #23919 -- Removed six.<various>_types usage

Thanks Tim Graham and Simon Charette for the reviews.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,95ca01f9995ef72c6bbe9bba477781b46cf573b4,"Fixed #26271 -- Fixed i18n_patterns resolution when no language is active

Thanks Marten Kenbeek for the report.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,c651331b34b7c3841c126959e6e52879bc6f0834,"Converted usage of ugettext* functions to their gettext* aliases

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,16411b8400ad08f90c236bb2e18f65c655f903f8,"Fixed #26013 -- Moved django.core.urlresolvers to django.urls.

Thanks to Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,fee42fd99ee470528858c2ccb3621135c30ec262,"Refs #23919 -- Replaced usage of django.utils.http utilities with Python equivalents

Thanks Tim Graham for the review.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,d6eaf7c0183cd04b78f2a55e1d60bb7e59598310,"Refs #23919 -- Replaced super(ClassName, self) with super().",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,cecc079168e8669138728d31611ff3a1e7eb3a9f,Refs #23919 -- Stopped inheriting from object to define new style classes.,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,dc8834cad41aa407f402dc54788df3cd37ab3e22,Refs #23919 -- Removed unneeded force_str calls,False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,4a30e0db269a364cb480f48524fa48e6abcf9e94,"[4.0.x] Set date and added stub notes for 4.0.8 and 3.2.16 releases.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,4a30e0db269a364cb480f48524fa48e6abcf9e94,"[4.0.x] Set date and added stub notes for 4.0.8 and 3.2.16 releases.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,df41b5a05d4e00e80e73afe629072e37873e767a,"Fixed #28593 -- Added a simplified URL routing syntax per DEP 0201.

Thanks Aymeric Augustin for shepherding the DEP and patch review.
Thanks Marten Kenbeek and Tim Graham for contributing to the code.
Thanks Tom Christie, Shai Berger, and Tim Graham for the docs.",False
23f0093125ac2e553da6c1b2f9988eb6a3dd2ea1,4a30e0db269a364cb480f48524fa48e6abcf9e94,"[4.0.x] Set date and added stub notes for 4.0.8 and 3.2.16 releases.

Backport of 57c7220280db19dc9dda0910b90cf1ceac50c66f from main.",False
7268f8af86186518821d775c530d5558fd726930,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7268f8af86186518821d775c530d5558fd726930,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,2f9853b2dc90f30317e0374396f08e3d142844d2,"Fixed #12512. Changed ModelForm to stop performing model validation on fields that are not part of the form. Thanks, Honza Kral and Ivan Sagalaev.
This reverts some admin and test changes from [12098] and also fixes #12507, #12520, #12552 and #12553.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12206 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
7268f8af86186518821d775c530d5558fd726930,471596fc1afcb9c6258d317c619eaf5fd394e797,"Merged soc2009/model-validation to trunk. Thanks, Honza!

git-svn-id: http://code.djangoproject.com/svn/django/trunk@12098 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
7268f8af86186518821d775c530d5558fd726930,97cb07c3a10ff0e584a260a7ee1001614691eb1d,"Massive reorganization of the docs. See the new docs online at http://docs.djangoproject.com/.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8506 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,7e2d61a9724644d6d1c7ce9361d9fd5be3e2ab86,"Fixed #21380 -- Added a way to set different permission for static directories.

Previously when collecting static files, the directories would receive permissions
from the global umask. Now the default permission comes from FILE_UPLOAD_DIRECTORY_PERMISSIONS
and there's an option to specify the permissions by subclassing any of the
static files storage classes and setting the directory_permissions_mode parameter.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8d7271578d7b153435b40fe40236ebec43cbf1b9,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6bdb3b1135d1bd7b2dc24131b9d26ac19ebdba67,"Fixed #13518 -- Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting

This setting does for new directories what FILE_UPLOAD_PERMISSIONS
does for new files.

Thanks jacob@ for the suggestion.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,7e2d61a9724644d6d1c7ce9361d9fd5be3e2ab86,"Fixed #21380 -- Added a way to set different permission for static directories.

Previously when collecting static files, the directories would receive permissions
from the global umask. Now the default permission comes from FILE_UPLOAD_DIRECTORY_PERMISSIONS
and there's an option to specify the permissions by subclassing any of the
static files storage classes and setting the directory_permissions_mode parameter.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
8d7271578d7b153435b40fe40236ebec43cbf1b9,6e4c6281dbb7ee12bcdc22620894edb4e9cf623f,"Reverted ""Fixed #27818 -- Replaced try/except/pass with contextlib.suppress().""

This reverts commit 550cb3a365dee4edfdd1563224d5304de2a57fda
because try/except performs better.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6bdb3b1135d1bd7b2dc24131b9d26ac19ebdba67,"Fixed #13518 -- Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting

This setting does for new directories what FILE_UPLOAD_PERMISSIONS
does for new files.

Thanks jacob@ for the suggestion.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,98ef3829e96ebc73d4d446f92465e671ff520d2b,"Fixed #29890 -- Fixed FileSystemStorage crash if concurrent saves try to create the same directory.

Regression in 632c4ffd9cb1da273303bcd8005fff216506c795.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,723b620c7edab47561d6387c7db3ace2f3b7aa16,"Fixed #16082 -- Fixed race condition in the FileSystemStorage backend with regard to creating directories. Thanks, pjdelport.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16280 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6c1923029748de4a0f443260751a93c1e0ea10fa,Added stub release notes for 3.1.1.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6bdb3b1135d1bd7b2dc24131b9d26ac19ebdba67,"Fixed #13518 -- Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting

This setting does for new directories what FILE_UPLOAD_PERMISSIONS
does for new files.

Thanks jacob@ for the suggestion.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,b35b43dff81d46e930ffa1e05eb50968b8557102,Fixed #24982 -- Split staticfiles tests into multiple files,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,8a5683b6b2aede38edcff070686ed1fce470dec5,Added stub release notes for 2.2.16 and 3.0.10.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,8a5683b6b2aede38edcff070686ed1fce470dec5,Added stub release notes for 2.2.16 and 3.0.10.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,8a5683b6b2aede38edcff070686ed1fce470dec5,Added stub release notes for 2.2.16 and 3.0.10.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,8a5683b6b2aede38edcff070686ed1fce470dec5,Added stub release notes for 2.2.16 and 3.0.10.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,290d8471bba35980f3e228f9c171afc40f2550fa,"Fixed #30147 -- Simplified directory creation with os.makedirs(..., exist_ok=True).",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6c1923029748de4a0f443260751a93c1e0ea10fa,Added stub release notes for 3.1.1.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,6bdb3b1135d1bd7b2dc24131b9d26ac19ebdba67,"Fixed #13518 -- Added FILE_UPLOAD_DIRECTORY_PERMISSIONS setting

This setting does for new directories what FILE_UPLOAD_PERMISSIONS
does for new files.

Thanks jacob@ for the suggestion.",False
8d7271578d7b153435b40fe40236ebec43cbf1b9,b35b43dff81d46e930ffa1e05eb50968b8557102,Fixed #24982 -- Split staticfiles tests into multiple files,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
8d7271578d7b153435b40fe40236ebec43cbf1b9,21768a99f47ee73a2f93405151550ef7c3d9c8a2,Refs #31863 -- Added release notes for 94ea79be137f3cb30949bf82198e96e094f2650d.,False
001b0634cd309e372edb6d7d95d083d02b8e37bd,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
001b0634cd309e372edb6d7d95d083d02b8e37bd,e4cf8c8420634d6f2dc8ce873246256ce635972d,Fixed #24301 -- Added PostgreSQL-specific aggregate functions,False
001b0634cd309e372edb6d7d95d083d02b8e37bd,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
001b0634cd309e372edb6d7d95d083d02b8e37bd,df8412d2e5c95fe8c8238ebde8e0dbb68fe2ec1d,Fixed #26617 -- Added distinct argument to contrib.postgres's StringAgg.,False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,025498531714d4c3c82724493754f7b2b4ca329a,"[1.10.x] Fixed #26973 -- Fixed views.static.serve() crash with show_indexes enabled.

Backport of 1e32e1cc951ac9bada52aa20a9523acc7cc6ecb3 from master",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,8b9b8d3bda09eb1b447631182d06c6c5e51425f6,"Removed compatibility code for streaming responses.

This code provided a deprecation path for old-style streaming responses.

Refs #6527, #7581.",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,4d3ab063b1b36bd4fb9a75d26b6c883d632aef0e,"Fixed #15613: Don't send content-length headers for non-regular files. Thanks to jaylett.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16014 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,3d2cae0896ee8026d1c2c5d31e4c4c8f74f2fef4,Fixed #24072 -- Added FileResponse for streaming binary files.,False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,f69cf70ed813a8cd7e1f963a14ae39103e8d5265,"MERGED MAGIC-REMOVAL BRANCH TO TRUNK. This change is highly backwards-incompatible. Please read http://code.djangoproject.com/wiki/RemovingTheMagic for upgrade instructions.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@2809 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,8e96584f6363cba7cbbac41771a4318dde9f46dd,"Fixed #14524, #14582, #14617, #14665 and #14667 -- Tweaked staticfiles app.

* Updated StaticFilesHandler and AdminMediaHandler
  to make use of the 404 handler if needed.

* Updated runserver management command to serve static files
  only in DEBUG mode (or if specified the --insecure option)
  and if the staticfiles app is in INSTALLED_APPS. Also added
  an option to disable serving completely (--nostatic).

* Added check in debug mode if STATICFILES_* settings are
  different to MEDIA_* settings.

* Removed a faulty PendingDeprecationWarning in AdminMediaHandler
  that is triggered every time runserver is used.

* Fixed an issue with the modification time checks when
  running collectstatic.

* Extended and refined documentation.

Thanks to everyone for input, especially to Carl Meyer, Ted Kaemming and
Adam Vandenberg for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14533 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,33d8fcde8a317184a627492f008a4eab9333ed88,"Fixed #14693, #14709 -- Backwards incompatible change to rectify the confusion around the STATICFILES_URL and STATICFILES_ROOT settings.

  * Two new global settings that will be used by -- **but are not limited to** -- the staticfiles app: STATIC_ROOT and STATIC_URL.

  * Moving the 'django.contrib.staticfiles.templatetags.staticfiles' template tag to the core ('django.templatetags.static') and renaming it to 'get_static_prefix'.

  * Moving the context processor 'django.contrib.staticfiles.context_processors.staticfiles' to the core ('django.core.context_processors.static') and renaming it to 'static'.

  * Paths in media definitions will use STATIC_URL as the prefix if the value is not None, and falls back to the previously used MEDIA_URL.

Thanks again to the community for constructive criticism and Carl and Russ for sanity-inducing discussions on IRC.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14592 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,cfc19f84def07fb950ae8789ed0655eae4f66a92,"Fixed #12323 and #11582 -- Extended the ability to handle static files. Thanks to all for helping with the original app, the patch, documentation and general support.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@14293 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,025498531714d4c3c82724493754f7b2b4ca329a,"[1.10.x] Fixed #26973 -- Fixed views.static.serve() crash with show_indexes enabled.

Backport of 1e32e1cc951ac9bada52aa20a9523acc7cc6ecb3 from master",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
2a9f6ef71b8e23fd267ee2be1be26dde8ab67037,a26034ffbf8951276b79ccb298423bc809246637,"Fixes #15270 -- Moved back the serve view to django.views.static due to dependency conflicts with the contrib app staticfiles (reverts parts of r14293). Added a helper function that generates URL patterns for serving static and media files during development. Thanks to Carl for reviewing the patch.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15530 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,7d1b69dbe7f72ac04d2513f0468fe2146231b286,Refs #26601 -- Improved backwards-compatibility of DEP 5 middleware exception handling.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e5aecded4de78b8ce2048490fc9b12258e8b7623,"[4.0.x] Added stub release notes for 4.0.10 and 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,8ec7ded3706fe66bf307ed339eb852d73f6d10d0,Refs #30227 -- Added helpful message for non-ASCII Content-Type in mulitpart request.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2ed2acf872b87d1149da98ceeb96997f23258e83,Fixed #30227 -- Fixed crash on request without boundary in Content-Type.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,086510fde00d8246be3c7cdbd268742ece8cc401,"Removed HTTP prefixed CONTENT_TYPE/LENGTH headers in MultiPartParser.

The docs say that these headers always appear without the HTTP_ prefix.
This may have been an oversight when they were added in
d725cc9734272f867d41f7236235c28b3931a1b2, the only commit that uses
these names.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b0953dc91385fb2823294a76d3c99e01c7b7e4ee,"Fixed #13721 -- Added UploadedFile.content_type_extra.

Thanks Waldemar Kornewald and mvschaik for work on the patch.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,6e55e1d88a5c4453e25f0caf7ffb68973de5c0ba,Refs #23919 -- Replaced six.reraise by raise,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b42e5ca058178d67027bf66d37d00ade635b4c26,"Fixed #22971 -- Properly parsed RFC 2388 encoded headers

Thanks homm for the report, Cea Stapleton for patch improvements
and Ian Cordasco, Christian Schmitt and Tim Graham for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,dc88516e5bc987dfc877bc8ae5d7f8d1efb19fdd,Made style improvements to multipartparser.py,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,8b3f1c35dd848678225e8634d6880efeeab5e796,Removed unnecessary assignments in various code.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0894ddb2bbb706ca8b9918df42dfd8a3fa4dbc69,"Fixed #7848 -- Removed a bunch of code that wasn't contributing to society. Thanks, julien

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8047 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d228c1192ed59ab0114d9eba82ac99df611652d2,"Fixed #19866 -- Added security logger and return 400 for SuspiciousOperation.

SuspiciousOperations have been differentiated into subclasses, and
are now logged to a 'django.security.*' logger. SuspiciousOperations
that reach django.core.handlers.base.BaseHandler will now return a 400
instead of a 500.

Thanks to tiwoc for the report, and Carl Meyer and Donald Stufft
for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,4a103086d5c67fa4fcc53c106c9fdf644c742dd8,"Fixed #18269 -- Applied unicode_literals for Python 3 compatibility.

Thanks Vinay Sajip for the support of his django3 branch and
Jannis Leidel for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,8ec7ded3706fe66bf307ed339eb852d73f6d10d0,Refs #30227 -- Added helpful message for non-ASCII Content-Type in mulitpart request.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2ed2acf872b87d1149da98ceeb96997f23258e83,Fixed #30227 -- Fixed crash on request without boundary in Content-Type.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,086510fde00d8246be3c7cdbd268742ece8cc401,"Removed HTTP prefixed CONTENT_TYPE/LENGTH headers in MultiPartParser.

The docs say that these headers always appear without the HTTP_ prefix.
This may have been an oversight when they were added in
d725cc9734272f867d41f7236235c28b3931a1b2, the only commit that uses
these names.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b0953dc91385fb2823294a76d3c99e01c7b7e4ee,"Fixed #13721 -- Added UploadedFile.content_type_extra.

Thanks Waldemar Kornewald and mvschaik for work on the patch.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,6e55e1d88a5c4453e25f0caf7ffb68973de5c0ba,Refs #23919 -- Replaced six.reraise by raise,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,3bb6a4390c0a57da991fcb1c0642b9b3fccff751,Refs #27753 -- Favored force/smart_str() over force/smart_text().,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b42e5ca058178d67027bf66d37d00ade635b4c26,"Fixed #22971 -- Properly parsed RFC 2388 encoded headers

Thanks homm for the report, Cea Stapleton for patch improvements
and Ian Cordasco, Christian Schmitt and Tim Graham for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,38408f8007eae21b9f1cbbcc7f86d4b2042ff86a,"Marked bytestrings with b prefix. Refs #18269

This is a preparation for unicode literals general usage in
Django (Python 3 compatibility).",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e2efc8965edf684aaf48621680ef54b84e116576,"Fixed #22680 --  I/O operation on closed file.

This patch is two-fold; first it ensure that Django does close everything in
request.FILES at the end of the request and secondly the storage system should
no longer close any files during save, it's up to the caller to handle that --
or let Django close the files at the end of the request.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,dc88516e5bc987dfc877bc8ae5d7f8d1efb19fdd,Made style improvements to multipartparser.py,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,c347f78cc1b2a06958f692f0622deceac534dc6b,Fixed all E226 violations,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,8b3f1c35dd848678225e8634d6880efeeab5e796,Removed unnecessary assignments in various code.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,0894ddb2bbb706ca8b9918df42dfd8a3fa4dbc69,"Fixed #7848 -- Removed a bunch of code that wasn't contributing to society. Thanks, julien

git-svn-id: http://code.djangoproject.com/svn/django/trunk@8047 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e5aecded4de78b8ce2048490fc9b12258e8b7623,"[4.0.x] Added stub release notes for 4.0.10 and 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,b4066d7d2149782cd694b98d1a6ed5c7ee885f55,"Cleaned up the the http module. Moved all of the code from __init__.py to request.py, response.py and utils.py",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e5aecded4de78b8ce2048490fc9b12258e8b7623,"[4.0.x] Added stub release notes for 4.0.10 and 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,d725cc9734272f867d41f7236235c28b3931a1b2,"Fixed #2070: refactored Django's file upload capabilities.

A description of the new features can be found in the new [http://www.djangoproject.com/documentation/upload_handing/ upload handling documentation]; the executive summary is that Django will now happily handle uploads of large files without issues.

This changes the representation of uploaded files from dictionaries to bona fide objects; see BackwardsIncompatibleChanges for details.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@7814 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,6a682b38e75d4c975b4c4493565a59f1bc14397c,"[4.0.x] Refs #33476 -- Reformatted code with Black.

Backport of 9c19aff7c7561e3a82978a272ecdaad40dda5c00 from main.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,e5aecded4de78b8ce2048490fc9b12258e8b7623,"[4.0.x] Added stub release notes for 4.0.10 and 3.2.18.

Backport of 7e003428f96d616c1f77fed84882a95e63bc3644 from main",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,20472aa827669d2b83b74e521504e88e18d086a1,"Fixed #21189: Cleaned up usage of bare except clauses.

Thanks to berkerpeksag for the report and to claudep
for the review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,929684d6ee0efb5afad51dc584489d0437d2451b,"Fixed #21231 -- Enforced a max size for GET/POST values read into memory.

Thanks Tom Christie for review.",False
83f1ea83e4553e211c1c5a0dfc197b66d4e50432,2f10216f84b55920de25422842a66260219e393f,Fixed #27820 -- Fixed RequestDataTooBig/TooManyFieldsSent crash.,False
dd68f319b365f6cb38c5a6c106faf4f6142d7d88,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd68f319b365f6cb38c5a6c106faf4f6142d7d88,b994387d8d9ff3b19d3ab04d3b4ac69d5dd68ea2,"Fixed #689 -- Added a middleware and authentication backend to contrib.auth for supporting external authentication solutions.  Thanks to all who contributed to this patch, including Ian Holsman, garthk, Koen Biermans, Marc Fargas, ekarulf, and Ramiro Morales.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@10063 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
dd68f319b365f6cb38c5a6c106faf4f6142d7d88,e8269a6729150d26a5497d5eb51226ca19fa21b9,"[1.5.x] Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
dd68f319b365f6cb38c5a6c106faf4f6142d7d88,e8269a6729150d26a5497d5eb51226ca19fa21b9,"[1.5.x] Fixed #17869 - force logout when REMOTE_USER header disappears

If the current sessions user was logged in via a remote user backend log out
the user if REMOTE_USER header not available - otherwise leave it to other auth
middleware to install the AnonymousUser.

Thanks to Sylvain Bouchard for the initial patch and ticket maintenance.",False
d020da6646c5142bc092247d218a3d1ce3e993f7,be4a2e3f3e0a04c87e6c9127cb1011df7c53e9e9,"Fixed #15281 -- Made the static view use an iterator when serving a file, effectively making this less of a memory hog. Also use the appropriate attributes of the stat object instead of indexes. Thanks for the initial patch, FunkyBob and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,a686096c262b706b1367abc87436ae9dc47dbe2a,"Fixed #7535 -- Correctly set Content-Encoding header in static files serving view. Thanks for the report and patch, Kevin Hunter.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,94096e83e9314d960599d4d4773fe4a6329bd321,"Fixed #12544 and #13600 -- Fixed static files serving view to catch invalid date from If-Modified-Since header. Thanks akaihola and SmileyChris for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13870 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,b6002d4af6330fd828db10afb450bfb7d5f8d628,"Fixed #1291 -- Fixed a potential infinite loop for some URL constructions in
the development server. Thanks, Graham Carlyle.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6731 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,b279b75c876e819034e6c56f3bf3b0c4b9843636,"Fixed #5596 -- Changed the static view for the development server so that Django doesn't crash if somebody tries to serve a 200MB file. Patch from eibaan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6939 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,be4a2e3f3e0a04c87e6c9127cb1011df7c53e9e9,"Fixed #15281 -- Made the static view use an iterator when serving a file, effectively making this less of a memory hog. Also use the appropriate attributes of the stat object instead of indexes. Thanks for the initial patch, FunkyBob and aaugustin.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15701 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,a686096c262b706b1367abc87436ae9dc47dbe2a,"Fixed #7535 -- Correctly set Content-Encoding header in static files serving view. Thanks for the report and patch, Kevin Hunter.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13868 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,94096e83e9314d960599d4d4773fe4a6329bd321,"Fixed #12544 and #13600 -- Fixed static files serving view to catch invalid date from If-Modified-Since header. Thanks akaihola and SmileyChris for patches.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@13870 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,b6002d4af6330fd828db10afb450bfb7d5f8d628,"Fixed #1291 -- Fixed a potential infinite loop for some URL constructions in
the development server. Thanks, Graham Carlyle.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6731 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,b279b75c876e819034e6c56f3bf3b0c4b9843636,"Fixed #5596 -- Changed the static view for the development server so that Django doesn't crash if somebody tries to serve a 200MB file. Patch from eibaan.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@6939 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,20fbfbadcd79feab5077b84cbbed2b5908e685f3,"Explicitly close a file in the static serve view.  Thanks to Benjamin Peterson for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16282 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,afd040d4d3a06fe92e3080870b2ff2095ce86a75,"Updated test assertions that have been deprecated by the move to unittest2. In summary, this means:

 assert_ -> assertTrue
 assertEquals -> assertEqual
 failUnless -> assertTrue

For full details, see http://www.voidspace.org.uk/python/articles/unittest2.shtml#deprecations

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15728 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,6b95aa6fb549b3834b7feefc6fbe92f8a50da411,"Fixed #15531 -- Partially reverted [15701] due to compatibility issues with middlewares that modify content of responses. Thanks for the report, schinckel. Refs #15281.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@15703 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
d020da6646c5142bc092247d218a3d1ce3e993f7,20fbfbadcd79feab5077b84cbbed2b5908e685f3,"Explicitly close a file in the static serve view.  Thanks to Benjamin Peterson for the report.

git-svn-id: http://code.djangoproject.com/svn/django/trunk@16282 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
e1592e0f26302e79856cc7f2218ae848ae19b0f6,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,7899568e01fc9c68afe995fa71de915dd9fcdd76,"File storage refactoring, adding far more flexibility to Django's file handling. The new files.txt document has details of the new features.

This is a backwards-incompatible change; consult BackwardsIncompatibleChanges for details.

Fixes #3567, #3621, #4345, #5361, #5655, #7415.

Many thanks to Marty Alchin who did the vast majority of this work.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8244 bcc190cf-cafb-0310-a4f2-bffc1f526a37",True
e1592e0f26302e79856cc7f2218ae848ae19b0f6,c5ef65bcf324f4c90b53be90f4aec069a68e8c59,"[py3] Ported django.utils.encoding.

* Renamed smart_unicode to smart_text (but kept the old name under
  Python 2 for backwards compatibility).
* Renamed smart_str to smart_bytes.
* Re-introduced smart_str as an alias for smart_text under Python 3
  and smart_bytes under Python 2 (which is backwards compatible).
  Thus smart_str always returns a str objects.
* Used the new smart_str in a few places where both Python 2 and 3
  want a str.",False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,58cd4902a71a3695dd6c21dc957f59c333db364c,"Fixed #4948, a race condition in file saving. Thanks to Martin von Löwis, who diagnosed the problem and pointed the way to a fix.


git-svn-id: http://code.djangoproject.com/svn/django/trunk@8306 bcc190cf-cafb-0310-a4f2-bffc1f526a37",False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,0b79eb36915d178aef5c6a7bbce71b1e76d376d3,Fixed CVE-2021-31542 -- Tightened path & file name sanitation in file uploads.,False
e1592e0f26302e79856cc7f2218ae848ae19b0f6,914c72be2abb1c6dd860cb9279beaa66409ae1b2,Fixed #26058 -- Delegated os.path bits of FileField's filename generation to the Storage.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
254326cb3682389f55f886804d2c43f7b9f23e4f,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,bdca5ea345c548a82a80d198906818c9ccbef896,[py3] Replaced unicode/str by six.text_type/bytes.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,b289fcf1bfeaa717ed465b2529a275b61dc02d92,Fixed #21288 -- Fixed E126 pep8 warnings,False
254326cb3682389f55f886804d2c43f7b9f23e4f,0d914d08a0d7b5a1521f498a8047971fe6cd61e7,"[py3] Updated urllib/urllib2/urlparse imports.

Lots of functions were moved. Use explicit imports in all cases
to keey it easy to identify where the functions come from.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,ae88e73fa630694a152b54df68d53ce535312e45,"Replaced some smart_xxx by force_xxx equivalent

smart_str/smart_text should only be used when a potential lazy
string should be preserved in the result of the function call.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,ae3535169af804352517b7fea94a42a1c9c4b762,"Fixed is_safe_url() to reject URLs that use a scheme other than HTTP/S.

This is a security fix; disclosure to follow shortly.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,255449c1ee61c14778658caae8c430fa4d76afd6,"Added additional checks in is_safe_url to account for flexible parsing.

This is a security fix. Disclosure following shortly.",False
254326cb3682389f55f886804d2c43f7b9f23e4f,6a6428a36f221446b17eaf4876e92d3db1781962,Took advantage of django.utils.six.moves.urllib.*.,False
254326cb3682389f55f886804d2c43f7b9f23e4f,0ed7d155635da9f79d4dd67e4889087d3673c6da,Sorted imports with isort; refs #23860.,False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,41b30a992ed42ab350e19198d6665dbf9843f8ba,"[2.0.x] Added stub release notes for 2.0.2.

Backport of 0f5a741ada39f5ac193b9b9cfc00088ebd325f32 from master",False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,36dd0126a5a9688530f099ab6cc4f8621d1494b3,"[2.0.x] Fixed #28645 -- Reallowed AuthenticationForm to raise the inactive user error when using ModelBackend.

Regression in e0a3d937309a82b8beea8f41b17d8b6298da2a86.

Thanks Guilherme Junqueira for the report and Tim Graham for the review.

Backport of 359370a8b8ca0efe99b1d4630b291ec060b69225 from master",False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,62236b514e3ab1726e38f42d61117a0513197e89,"[2.0.x] Added stub release notes for 1.11.10.

Backport of cea5fe94c6bb1b61e791f1375c246566c950b3e3 from master",False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,41b30a992ed42ab350e19198d6665dbf9843f8ba,"[2.0.x] Added stub release notes for 2.0.2.

Backport of 0f5a741ada39f5ac193b9b9cfc00088ebd325f32 from master",False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,36dd0126a5a9688530f099ab6cc4f8621d1494b3,"[2.0.x] Fixed #28645 -- Reallowed AuthenticationForm to raise the inactive user error when using ModelBackend.

Regression in e0a3d937309a82b8beea8f41b17d8b6298da2a86.

Thanks Guilherme Junqueira for the report and Tim Graham for the review.

Backport of 359370a8b8ca0efe99b1d4630b291ec060b69225 from master",False
c37bb28677295f6edda61d8ac461014ef0d3aeb2,62236b514e3ab1726e38f42d61117a0513197e89,"[2.0.x] Added stub release notes for 1.11.10.

Backport of cea5fe94c6bb1b61e791f1375c246566c950b3e3 from master",False
